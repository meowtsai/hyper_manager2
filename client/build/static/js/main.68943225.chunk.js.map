{"version":3,"sources":["redux/auth/constants.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/service/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/sagas.js","redux/store.js","index.js","redux/layout/constants.js","redux/offlinecs/constants.js","redux/service/actions.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/constants.js","redux/adminUsers/constants.js","redux/games/constants.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/offlinecs/actions.js","redux/appMenu/actions.js","redux/service/constants.js","redux/dashboard/actions.js","redux/platform/actions.js","redux/games/actions.js","redux/servers/actions.js","redux/adminUsers/actions.js","redux/serviceAllocate/constants.js"],"names":["__webpack_require__","d","__webpack_exports__","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","isUserAuthenticated","layoutCls","layout","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","ModifyPassword","CplCaseHome","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","getLoggedInUser","indexOf","role","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","allRoutes","Route","authProtectedRoutes","uid","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","action","type","CHANGE_LAYOUT","objectSpread","payload","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","user","Auth","error","passwordResetStatus","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","stat","Dashboard","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","updated","Platform","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","records","affectedId","currentRecord","OfflineCS","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","list","Games","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","Servers","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","users","AdminUsers","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","allocation","allocation_logs","allocationStatus","updateOKMessage","cs_members","ServiceAllocate","POST_ALLOCATION","PUT_ALLOCATION","TAKE_ALLOCATION_TASKS","REASSIGN_ALLOCATION_TASK","TAKE_ALLOCATION_TASKS_SUCCESS","newList","logs","log","record","filter","id","allocation_id","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","tasks","msg","GET_ALLOCATE_BY_ID_SUCCESS","PUT_ALLOCATION_SUCCESS","updatedField","newLog","POST_ALLOCATION_SUCCESS","GET_ALLOCATE_DATA_SUCCESS","all_records","REASSIGN_ALLOCATION_TASK_SUCCESS","CLEAR_ALLOCATION_MESSAGE","POST_ALLOCATION_FAILED","PUT_ALLOCATION_FAILED","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID_FAILED","TAKE_ALLOCATION_TASKS_FAILED","REASSIGN_ALLOCATION_TASK_FAILED","current","Service","GET_OVERVIEW","GET_CURRENT_QUESTION","ALLOCATE_QUESTION","REPLY_QUESTION","CLOSE_QUESTION","GET_QUESTIONS","ALLOCATE_QUESTION_SUCCESS","question","REPLY_QUESTION_SUCCESS","updateQuestionData","replies","reply","CLOSE_QUESTION_SUCCESS","CLEAR_MESSAGE","GET_CURRENT_QUESTION_SUCCESS","question_type","question_status","GET_OVERVIEW_SUCCESS","_action$payload","ovToday","ovTotal","ovAllocate","ovAllocateNew","GET_QUESTIONS_SUCCESS","_action$payload2","query","reply_query","newAllocationStatus","allocation_status","ALLOCATE_QUESTION_FAILED","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS_FAILED","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION_FAILED","REPLY_QUESTION_FAILED","CLOSE_QUESTION_FAILED","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_STATUS_SUCCESS","status","GET_TEST_DATA_SUCCESS","test_list","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","JSON","stringify","remove","_ref$payload","username","password","message","regenerator_default","wrap","_context","prev","next","data","account","method","headers","Content-Type","axios","sent","put","loginUserSuccess","t0","t1","abrupt","loginUserFailed","stop","_marked","_ref2","history","_context2","_marked2","_ref3","_ref3$payload","fullname","email","_context3","body","registerUserSuccess","registerUserFailed","_marked3","_ref4","_context4","forgetPasswordSuccess","forgetPasswordFailed","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","width","saga_marked2","theme","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","menuItems","assignIdAndParent","parentId","active","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","activatedMenuItemIds","assignIds","initMenuSuccess","changeActiveMenuFromLocationSuccess","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","getData","watchGetData","dashboardSaga","startDate","endDate","getDataSuccess","getDataFailed","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","updatePassword","watchChangePassword","PlatformSaga","updatePasswordSuccess","updatePasswordFailed","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","editRecord","getCurrentRecord","watchGetCurrentRecordData","watchEditRecord","offlineCsSaga","getOfflineCsDataSuccess","getOfflineCsDataFailed","offlinecs_saga_marked","dataType","editRecordSuccess","editRecordFailed","offlinecs_saga_marked2","record_id","getCurrentRecordSuccess","getCurrentRecordFailed","offlinecs_saga_marked3","offlinecs_saga_marked4","offlinecs_saga_marked5","offlinecs_saga_marked6","offlinecs_saga_marked7","getGames","gamesSaga","getGamesSuccess","getGamesFailed","games_saga_marked","GET_GAMES_DATA","games_saga_marked2","games_saga_marked3","getServersByGameId","serversSaga","gameId","getServersSuccess","getServersFailed","servers_saga_marked","GET_SERVERS","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","adminUsersSaga","getAdminUsersSuccess","getAdminUsersFailed","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","getAllocateData","getAllocateById","postAllocation","reassignAllocation","putAllocation","takeAllocationTasks","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","getAllocateDataSuccess","getAllocateDataFailed","serviceAllocate_saga_marked","getAllocateByIdSuccess","getAllocateByIdFailed","serviceAllocate_saga_marked2","qid","allocation_cause","question_id","allocate_cause","postAllocationSuccess","postAllocationFailed","serviceAllocate_saga_marked3","_ref4$payload","new_assignee","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","serviceAllocate_saga_marked4","_ref5","putAllocationSuccess","putAllocationFailed","serviceAllocate_saga_marked5","takeAllocationTasksSuccess","takeAllocationTasksFailed","serviceAllocate_saga_marked6","GET_ALLOCATE_DATA","serviceAllocate_saga_marked7","GET_ALLOCATE_BY_ID","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","saga_marked10","saga_marked11","saga_marked12","saga_marked13","getQuestionsData","getCurrentQuestionData","getTestData","getOverview","updateType","allocateQuestion","replyQuestion","closeQuestion","updateStatus","watchGetCurrent","watchGetTestData","watchOverviewData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","serviceSaga","condition","getQuestionsSuccess","getQuestionsFailed","service_saga_marked","console","getCurrentQuestionSuccess","getCurrentQuestionFailed","service_saga_marked2","getTestDataSuccess","getTestDataFailed","service_saga_marked3","getOverviewSuccess","getOverviewFailed","service_saga_marked4","updateQuestionTypeSuccess","updateQuestionTypeFailed","service_saga_marked5","aField","allocateStatus","allocateQuestionSuccess","allocateQuestionFailed","service_saga_marked6","_ref6","replyQuestionSuccess","replyQuestionFailed","service_saga_marked7","_ref7","closeType","closeQuestionSuccess","closeQuestionFailed","service_saga_marked8","_ref8","updateQuestionStatusSuccess","updateQuestionStatusFailed","service_saga_marked9","service_saga_marked10","service_saga_marked11","GET_TEST_DATA","service_saga_marked12","service_saga_marked13","UPDATE_QUESTION_TYPE","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","UPDATE_QUESTION_STATUS","_marked18","_context19","_marked19","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","getQuestions","getCurrentQuestion","updateQuestionType","updateQuestionStatus","clearMessage","_constants__WEBPACK_IMPORTED_MODULE_0__","qId","newType","result","replyContent","newStatus","GET_TEST_DATA_FAILED","reassignAllocationTask","clearAllocationMessage","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","changeSidebarTheme","changeSidebarType","sidebarType","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","token","decoded","jwtDecode","currentTime","Date","now","exp","warn","defaults","common","get","parse","loginUser","registerUser","logoutUser","getOfflineCsData","errors","initMenu","summary","game_id","getAdminUsers"],"mappings":"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","file":"static/js/main.68943225.chunk.js","sourcesContent":["/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\nconst CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\n//*add new\nconst AdminDashboard = React.lazy(() => import('../pages/dashboards/Admin'));\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/ProjectDetail'));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\nconst ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n// - kanban\nconst Kanban = React.lazy(() => import('../pages/apps/Kanban/'));\n\n// - email\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/Starter'));\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\n\n// uikit\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst General = React.lazy(() => import('../pages/uikit/General'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n//platform\nconst ModifyPassword = React.lazy(() => import('../pages/platform/ModifyPassword'));\n\n//offline cs\nconst CplCaseHome = React.lazy(() => import('../pages/offline/cpl_case/CplCaseHome'));\nconst GovLetterHome = React.lazy(() => import('../pages/offline/gov_letter/GovLetterHome'));\nconst PersonalVisitHome = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitHome'));\nconst PersonalVisitForm = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitForm'));\n\nconst GovLetterForm = React.lazy(() => import('../pages/offline/gov_letter/GovLetterForm'));\n\n\n//service\n\nconst ServiceOverview = React.lazy(() => import('../pages/service/questions/overview'));\nconst AllocateListPage = React.lazy(() => import('../pages/service/allocate'));\nconst QuesionsListPage = React.lazy(() => import('../pages/service/questions'));\nconst SingleQuestionPage = React.lazy(() => import('../pages/service/questions/view'));\n\nconst TestPage = React.lazy(() => import('../pages/service/questions/TestPage'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/service\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst myDashboardRoutes = {\n    path: '/mydashboard',\n    name: '我的',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/mydashboard/ecommerce',\n            name: 'Ecommerce',\n            badge: {\n                variant: 'success',\n                text: '3',\n            },\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/mydashboard/crm',\n            name: 'CRM',\n            component: CRMDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n//official dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/service',\n            name: '客服相關',\n            component: AdminDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n// apps\nconst appRoutes = {\n    path: '/apps',\n    name: 'Apps',\n    icon: 'dripicons-view-apps',\n    children: [\n        {\n            path: '/apps/calendar',\n            name: 'Calendar',\n            component: CalendarApp,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/projects',\n            name: 'Projects',\n            children: [\n                {\n                    path: '/apps/projects/list',\n                    name: 'List',\n                    component: Projects,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/projects/detail',\n                    name: 'Detail',\n                    component: ProjectDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/ecommerce',\n            name: 'eCommerce',\n            children: [\n                {\n                    path: '/apps/ecommerce/products',\n                    name: 'Products',\n                    component: EcommerceProducts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/details',\n                    name: 'Product Details',\n                    component: ProductDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/orders',\n                    name: 'Orders',\n                    component: Orders,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/order/details',\n                    name: 'Order Details',\n                    component: OrderDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/customers',\n                    name: 'Customers',\n                    component: Customers,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/shopping-cart',\n                    name: 'Shopping Cart',\n                    component: Cart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/checkout',\n                    name: 'Checkout',\n                    component: Checkout,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/sellers',\n                    name: 'Sellers',\n                    component: Sellers,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email',\n            name: 'Email',\n            children: [\n                {\n                    path: '/apps/email/inbox',\n                    name: 'Inbox',\n                    component: Inbox,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/email/details',\n                    name: 'Email Details',\n                    component: EmailDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n    ],\n};\n\n// pages\nconst pageRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'dripicons-copy',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/faq',\n            name: 'FAQ',\n            component: FAQ,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404',\n            name: 'Error - 404',\n            component: ErrorPageNotFound,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: ServerError,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'UI Kit',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/ui/buttons',\n            name: 'Buttons',\n            component: Buttons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/cards',\n            name: 'Cards',\n            component: Cards,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/general',\n            name: 'General',\n            component: General,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/grid',\n            name: 'Grid',\n            component: Grid,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            component: Icons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/modals',\n            name: 'Modals',\n            component: Modals,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/notifications',\n            name: 'Notifications',\n            component: Notifications,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/spinners',\n            name: 'Spinners',\n            component: Spinners,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/tabs',\n            name: 'Tabs',\n            component: Tabs,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/typography',\n            name: 'Typography',\n            component: Typography,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// forms\nconst formsRoutes = {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'dripicons-document',\n    children: [\n        {\n            path: '/forms/basic',\n            name: 'Basic Elements',\n            component: BasicForms,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/advanced',\n            name: 'Form Advanced',\n            component: FormAdvanced,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/validation',\n            name: 'Form validation',\n            component: FormValidation,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/wizard',\n            name: 'Form Wizard',\n            component: FormWizard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/upload',\n            name: 'File Upload',\n            component: FileUpload,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/editors',\n            name: 'Editors',\n            component: Editors,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// other features\nconst featuresRoutes = {\n    path: '/features',\n    name: 'Features',\n    icon: 'dripicons-view-list-large',\n    children: [\n        {\n            path: '/features/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/features/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/features/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n\nconst platformRoutesSub = {\n    path: '/platform',\n    name: 'Platform',\n    children: [\n        {\n            path: '/platform/modify_password',\n            name: '修改密碼',\n            component: ModifyPassword,\n            route: PrivateRoute,\n        },\n    ],\n};\n// online cs\n\nconst serviceRoutesSub = {\n    path: '/service',\n    name: 'Service',\n    children: [\n        {\n            path: '/service/view/:question_id',\n            name: '客服案件檢視',\n            component: SingleQuestionPage,\n            route: PrivateRoute,\n        },\n    ],\n}\nconst serviceRoutes = {\n    path: '/service',\n    name: '客服',\n    icon: ' dripicons-device-desktop',\n    children: [\n        {\n            exact: true,\n            path:'/service/overview',\n            name:'總覽',\n            component:ServiceOverview,\n            route: PrivateRoute,\n        },\n        {\n            exact: true,\n            path: '/service/questions/todo',\n            name: '待處理案件',\n            component: QuesionsListPage,\n                    route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/get_list',\n            name: '等待中案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            exact: true,\n            path: '/service/allocate/list',\n            name: '派單系統- 案件列表',\n            component: AllocateListPage,\n                    route: PrivateRoute,\n            \n        },\n\n    ],\n};\n// offline cs\nconst offlineRoutes = {\n    path: '/offline',\n    name: '線下客服區',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/offline/cpl_case/home',\n            name: '消保',\n            component: CplCaseHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/home',\n            name: '公函',\n            component: GovLetterHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/home',\n            name: '親訪',\n            component: PersonalVisitHome,\n            route: PrivateRoute,\n        },\n    ],\n};\nconst offlineRoutesSub = {\n    path: '/offline',\n    name: 'offlineCS',\n    children: [\n        {\n            path: '/offline/personal_visit/create',\n            name: '新增親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/edit/:record_id',\n            name: '編輯親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/create',\n            name: '新增公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/edit/:record_id',\n            name: '編輯公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/test',\n            name: '測試',\n            component: TestPage,\n            route: PrivateRoute,\n        },\n        \n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    dashboardRoutes,\n    appRoutes,\n    authRoutes,\n    pageRoutes,\n    uiRoutes,\n    formsRoutes,\n    featuresRoutes,\n    platformRoutesSub,\n    offlineRoutes,\n    offlineRoutesSub,\n    myDashboardRoutes,\n    serviceRoutes,\n    serviceRoutesSub\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n(loggedInUser !== null && loggedInUser.uid === 112)\n        ? [\n              dashboardRoutes,\n              appRoutes,\n              pageRoutes,\n              uiRoutes,\n              formsRoutes,\n              featuresRoutes,\n              offlineRoutes,\n              myDashboardRoutes,\n              serviceRoutes\n          ]\n        : [dashboardRoutes, offlineRoutes,serviceRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n// For Dark import DarkTheme.scss\n// import './assets/scss/DarkTheme.scss';\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\nconst INIT_STATE = {\n    updated: null,\n    loading: true,\n    error: '',\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n    switch (action.type) {\n        case UPDATE_PASSWORD:\n            return { ...state, loading: true };\n        case UPDATE_PASSWORD_SUCCESS:\n            return { ...state, updated: true, loading: false, error: null };\n        case UPDATE_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    records: [],\r\n    loading: true,\r\n    affectedId: 0,\r\n    error: {},\r\n    currentRecord: {},\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n    switch (action.type) {\r\n        case GET_GOV_DATA:\r\n            return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n        case GET_GOV_DATA_SUCCESS:\r\n            return { ...state, records: action.payload, loading: false, error: null };\r\n        case GET_GOV_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case EDIT_RECORD:\r\n            return { ...state, loading: true };\r\n        case EDIT_RECORD_SUCCESS:\r\n            return { ...state, affectedId: action.payload, loading: false, error: null };\r\n        case EDIT_RECORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case GET_CURRENT:\r\n            return { ...state, loading: true };\r\n        case GET_CURRENT_SUCCESS:\r\n            return { ...state, currentRecord: action.payload, loading: false, error: null };\r\n        case GET_CURRENT_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import { GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n    switch (action.type) {\r\n        case GET_GAMES_DATA_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_GAMES_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    loading: true,\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = { user?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return { ...state, loading: true };\r\n        case GET_USERS_SUCCESS:\r\n            return { ...state, users: action.payload, loading: false, error: null };\r\n        case GET_USERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\"\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: [\r\n            ...state.current.replies.filter(\r\n              reply => reply.id !== action.payload.id\r\n            ),\r\n            action.payload.updatedField\r\n          ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport Service from \"./service/reducers\";\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { UPDATE_PASSWORD } from './constants';\r\nimport { updatePasswordSuccess, updatePasswordFailed } from './actions';\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n    const options = {\r\n        data: JSON.stringify({ account, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/platform/modify_password',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(updatePasswordSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(updatePasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n    yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nfunction* PlatformSaga(): any {\r\n    yield all([fork(watchChangePassword)]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GOV_DATA, EDIT_RECORD, GET_CURRENT } from './constants';\r\n\r\nimport {\r\n    getOfflineCsDataSuccess,\r\n    getOfflineCsDataFailed,\r\n    editRecordSuccess,\r\n    editRecordFailed,\r\n    getCurrentRecordSuccess,\r\n    getCurrentRecordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${type === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getOfflineCsDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 403:\r\n                message = error.response.data;\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getOfflineCsDataFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n    //console.log('editGovRecord *****', payload);\r\n    const { dataType, record } = payload;\r\n    //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    const options = {\r\n        data: record,\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        //console.log('editGovRecordSuccess editGovRecord', response);\r\n        yield put(editRecordSuccess(response.data));\r\n    } catch (error) {\r\n        //console.log('error editGovRecord', error.response.data);\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(editRecordFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n    //console.log('getCurrentRecord payload ', payload);\r\n    const { dataType, record_id } = payload;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}/detail/${record_id}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getCurrentRecordSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 400:\r\n                message = error.response.data.msg;\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(getCurrentRecordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n    yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n    yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n    yield all([fork(watchGetData), fork(watchEditRecord), fork(watchGetCurrentRecordData)]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GAMES_DATA } from './constants';\r\n\r\nimport { getGamesSuccess, getGamesFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/games/list',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getGamesSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getGamesFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS } from './constants';\r\n\r\nimport { getAdminUsersSuccess, getAdminUsersFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/admin_users/getAdminUsersByRole/${role}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getAdminUsersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getAdminUsersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion)\r\n  ]);\r\n}\r\n\r\nexport default serviceSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\n\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    //console.log(\"setAuthToken\", token);\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        setAuthToken(user.token);\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    //console.log('getLoggedInUser', user);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA,\r\n    payload: dataType,\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_SUCCESS,\r\n    payload: records,\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const editRecord = (dataType: string, record: FormData): OfflineCsAction => ({\r\n    type: EDIT_RECORD,\r\n    payload: { dataType, record },\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n    type: EDIT_RECORD_SUCCESS,\r\n    payload: result.affectedId,\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n    type: EDIT_RECORD_FAILED,\r\n    payload: errors,\r\n});\r\nexport const getCurrentRecord = (dataType: string, record_id: int, history: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT,\r\n    payload: { dataType, record_id, history },\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT_SUCCESS,\r\n    payload: record,\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_CURRENT_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (account: string, password: string): PlatformAction => ({\n    type: UPDATE_PASSWORD,\n    payload: { account, password },\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n    type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n    type: UPDATE_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport { GET_GAMES_DATA, GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n    type: GET_GAMES_DATA,\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n    type: GET_GAMES_DATA_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n    type: GET_GAMES_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n    type: GET_USERS,\r\n    payload: role,\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users,\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n    type: GET_USERS_FAILED,\r\n    payload: error,\r\n});\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n"],"sourceRoot":""}