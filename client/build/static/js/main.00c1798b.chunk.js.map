{"version":3,"sources":["redux/service/constants.js","redux/serviceAllocate/constants.js","redux/vip/constants.js","redux/vipoffers/constants.js","redux/auth/constants.js","redux/service/actions.js","redux/games/constants.js","redux/layout/constants.js","redux/offlinecs/constants.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","redux/vip/actions.js","redux/vipoffers/actions.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/constants.js","redux/adminUsers/constants.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/offlinecs/actions.js","redux/games/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/platform/actions.js","redux/servers/actions.js","redux/adminUsers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_SERVICE_CONFIG","GET_SERVICE_CONFIG_SUCCESS","GET_QUESTIONS_BY_USER","GET_QUESTIONS_BY_USER_SUCCESS","GET_QUESTIONS_BY_USER_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","GET_VIP_ORDERS","GET_VIP_ORDERS_SUCCESS","GET_VIP_ORDERS_FAILED","GET_CURRENT_VIP_REPORT","GET_CURRENT_VIP_REPORT_SUCCESS","GET_CURRENT_VIP_REPORT_FAILED","GET_VIP_PRODS_BY_GAMEID","GET_VIP_PRODS_BY_GAMEID_SUCCESS","GET_VIP_PRODS_BY_GAMEID_FAILED","EDIT_VIP_WIRE_REPORT","EDIT_VIP_WIRE_REPORT_SUCCESS","EDIT_VIP_WIRE_REPORT_FAILED","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getQuestionsByUser","getQuestionsByUserSuccess","getQuestionsByUserFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","clearMessage","getServiceConfig","getServiceConfigSuccess","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","id","qid","allocation_cause","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","game_id","uid","command","record_id","record","getVipOffers","getVipOffersSuccess","getVipOffersFailed","getVipProductsByGameId","getVipProductsByGameIdSuccess","getVipProductsByGameIdFailed","getVipOrders","getVipOrdersSuccess","getVipOrdersFailed","getCurrentVipReport","getCurrentVipReportSuccess","getCurrentVipReportFailed","editVipWireReport","editVipWireReportSuccess","editVipWireReportFailed","report_id","history","errors","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","password","fullname","email","passwordResetStatus","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","dataType","records","affectedId","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","updatePassword","updatePasswordSuccess","updatePasswordFailed","account","getServersByGameId","getServersSuccess","getServersFailed","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","role","users","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","ModifyPassword","CplCaseHome","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","QuestionsQueryHome","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","WhaleUserHome","VipOfferHome","VipOfferForm","VipOrdersHome","VipOrdersForm","GamesHome","GamesEditForm","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","action","objectSpread","Auth","AppMenu","stat","Dashboard","updated","Platform","currentRecord","OfflineCS","list","updateOKMessage","Games","Servers","AdminUsers","allocation","allocation_logs","allocation_quick_msg","allocationStatus","cs_members","ServiceAllocate","newList","logs","log","filter","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","tasks","msg","updatedField","newLog","all_records","game_list","vip_list","requestData","not_allowed","VIP","vip","s","toString","newRecord","newReqData","vip_offer_list","vip_orders_list","vip_prods","current_report","affectedRecord","VipOffers","current","allgames","antsHandleData","qCountData","csHandleData","games_list","user_history","Service","keys","status","question","updateQuestionData","replies","reply","question_type","question_status","_action$payload","tmpGameIds","reduce","prev","curr","game_name","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","test_list","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","watchChangePassword","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","watchGetCurrentRecordData","watchEditRecord","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","offlinecs_saga_marked5","offlinecs_saga_marked6","offlinecs_saga_marked7","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","_ref5","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","saga_marked10","saga_marked11","saga_marked12","saga_marked13","getQuestionsData","getCurrentQuestionData","getQuestionsByUserData","getTestData","getServiceStat","updateType","updateStatus","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","watchGetServiceConfig","watchGetRelaventUserData","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","_ref6","service_saga_marked7","_ref7","service_saga_marked8","_ref8","service_saga_marked9","_ref9","service_saga_marked10","_ref10","service_saga_marked11","service_saga_marked12","service_saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","getVIP","putVIP","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","vipSaga","vip_saga_marked","vip_saga_marked2","_ref2$payload","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","getVipOrder","getProdsByGameId","watchGetOffers","watchGetOrders","watchGetCurrentReport","watchGetProdsByGameId","watchEditVipWireReport","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","vipoffers_saga_marked4","vipoffers_saga_marked5","vipoffers_saga_marked6","vipoffers_saga_marked7","vipoffers_saga_marked8","vipoffers_saga_marked9","vipoffers_saga_marked10","vipoffers_saga_marked11","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00c1798b.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS = \"GET_SERVICE_STATISTICS\";\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = \"GET_SERVICE_STATISTICS_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_FAILED = \"GET_SERVICE_STATISTICS_FAILED\";\r\n\r\nexport const GET_SERVICE_CONFIG = \"GET_SERVICE_CONFIG\";\r\nexport const GET_SERVICE_CONFIG_SUCCESS = \"GET_SERVICE_CONFIG_SUCCESS\";\r\n\r\nexport const GET_QUESTIONS_BY_USER = \"GET_QUESTIONS_BY_USER\";\r\nexport const GET_QUESTIONS_BY_USER_SUCCESS = \"GET_QUESTIONS_BY_USER_SUCCESS\";\r\nexport const GET_QUESTIONS_BY_USER_FAILED = \"GET_QUESTIONS_BY_USER_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n\r\nexport const GET_VIP_ORDERS = \"GET_VIP_ORDERS\";\r\nexport const GET_VIP_ORDERS_SUCCESS = \"GET_VIP_ORDERS_SUCCESS\";\r\nexport const GET_VIP_ORDERS_FAILED = \"GET_VIP_ORDERS_FAILED\";\r\n\r\nexport const GET_CURRENT_VIP_REPORT = \"GET_CURRENT_VIP_REPORT\";\r\nexport const GET_CURRENT_VIP_REPORT_SUCCESS = \"GET_CURRENT_VIP_REPORT_SUCCESS\";\r\nexport const GET_CURRENT_VIP_REPORT_FAILED = \"GET_CURRENT_VIP_REPORT_FAILED\";\r\n\r\nexport const GET_VIP_PRODS_BY_GAMEID = \"GET_VIP_PRODS_BY_GAMEID\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_SUCCESS =\r\n  \"GET_VIP_PRODS_BY_GAMEID_SUCCESS\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_FAILED = \"GET_VIP_PRODS_BY_GAMEID_FAILED\";\r\n\r\nexport const EDIT_VIP_WIRE_REPORT = \"EDIT_VIP_WIRE_REPORT\";\r\nexport const EDIT_VIP_WIRE_REPORT_SUCCESS = \"EDIT_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const EDIT_VIP_WIRE_REPORT_FAILED = \"EDIT_VIP_WIRE_REPORT_FAILED\";\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getQuestionsByUser = (question_id: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER,\r\n  payload: question_id\r\n});\r\n\r\nexport const getQuestionsByUserSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsByUserFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n\r\nexport const getServiceConfig = (): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG\r\n});\r\n\r\nexport const getServiceConfigSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG_SUCCESS,\r\n  payload: data\r\n});\r\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipProductsByGameId = (game_id: string): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipProductsByGameIdSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipProductsByGameIdFailed = (\r\n  error: string\r\n): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipOrders = (): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS\r\n});\r\n\r\nexport const getVipOrdersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOrdersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentVipReport = (\r\n  report_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT,\r\n  payload: { report_id, history }\r\n});\r\n\r\nexport const getCurrentVipReportSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentVipReportFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editVipWireReport = (record: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT,\r\n  payload: { record }\r\n});\r\n\r\nexport const editVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    //console.log(\"setAuthToken\", token);\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        setAuthToken(user.token);\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    //console.log('getLoggedInUser', user);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA,\r\n    payload: dataType,\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_SUCCESS,\r\n    payload: records,\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const editRecord = (dataType: string, record: FormData): OfflineCsAction => ({\r\n    type: EDIT_RECORD,\r\n    payload: { dataType, record },\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n    type: EDIT_RECORD_SUCCESS,\r\n    payload: result.affectedId,\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n    type: EDIT_RECORD_FAILED,\r\n    payload: errors,\r\n});\r\nexport const getCurrentRecord = (dataType: string, record_id: int, history: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT,\r\n    payload: { dataType, record_id, history },\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT_SUCCESS,\r\n    payload: record,\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_CURRENT_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (account: string, password: string): PlatformAction => ({\n    type: UPDATE_PASSWORD,\n    payload: { account, password },\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n    type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n    type: UPDATE_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n    type: GET_USERS,\r\n    payload: role,\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users,\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n    type: GET_USERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\nconst Register = React.lazy(() => import(\"../pages/auth/Register\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\nconst Confirm = React.lazy(() => import(\"../pages/auth/Confirm\"));\n// dashboard\nconst EcommerceDashboard = React.lazy(() =>\n  import(\"../pages/dashboards/Ecommerce\")\n);\nconst CRMDashboard = React.lazy(() => import(\"../pages/dashboards/CRM\"));\n//*add new\nconst AdminDashboard = React.lazy(() => import(\"../pages/dashboards/Admin\"));\n// apps\nconst CalendarApp = React.lazy(() => import(\"../pages/apps/Calendar\"));\nconst Projects = React.lazy(() => import(\"../pages/apps/Projects\"));\nconst ProjectDetail = React.lazy(() => import(\"../pages/apps/ProjectDetail\"));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/Products\")\n);\nconst ProductDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/ProductDetails\")\n);\nconst Orders = React.lazy(() => import(\"../pages/apps/Ecommerce/Orders\"));\nconst OrderDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/OrderDetails\")\n);\nconst Customers = React.lazy(() => import(\"../pages/apps/Ecommerce/Customers\"));\nconst Cart = React.lazy(() => import(\"../pages/apps/Ecommerce/Cart\"));\nconst Checkout = React.lazy(() => import(\"../pages/apps/Ecommerce/Checkout/\"));\nconst Sellers = React.lazy(() => import(\"../pages/apps/Ecommerce/Sellers\"));\n// - kanban\nconst Kanban = React.lazy(() => import(\"../pages/apps/Kanban/\"));\n\n// - email\nconst Inbox = React.lazy(() => import(\"../pages/apps/Email/Inbox\"));\nconst EmailDetail = React.lazy(() => import(\"../pages/apps/Email/Detail\"));\n\n// pages\nconst Starter = React.lazy(() => import(\"../pages/Starter\"));\nconst Profile = React.lazy(() => import(\"../pages/profile\"));\nconst ErrorPageNotFound = React.lazy(() =>\n  import(\"../pages/error/PageNotFound\")\n);\nconst ServerError = React.lazy(() => import(\"../pages/error/ServerError\"));\n\n// - other\nconst Invoice = React.lazy(() => import(\"../pages/other/Invoice\"));\nconst FAQ = React.lazy(() => import(\"../pages/other/FAQ\"));\nconst Pricing = React.lazy(() => import(\"../pages/other/Pricing\"));\n\n// uikit\nconst Cards = React.lazy(() => import(\"../pages/uikit/Cards\"));\nconst Buttons = React.lazy(() => import(\"../pages/uikit/Buttons\"));\nconst Modals = React.lazy(() => import(\"../pages/uikit/Modals\"));\nconst Tabs = React.lazy(() => import(\"../pages/uikit/Tabs\"));\nconst Notifications = React.lazy(() => import(\"../pages/uikit/Notifications\"));\nconst Grid = React.lazy(() => import(\"../pages/uikit/Grid\"));\nconst General = React.lazy(() => import(\"../pages/uikit/General\"));\nconst Typography = React.lazy(() => import(\"../pages/uikit/Typography\"));\nconst Icons = React.lazy(() => import(\"../pages/uikit/Icons\"));\nconst Spinners = React.lazy(() => import(\"../pages/uikit/Spinners\"));\nconst Widgets = React.lazy(() => import(\"../pages/uikit/Widgets\"));\n// forms\nconst BasicForms = React.lazy(() => import(\"../pages/forms/Basic\"));\nconst FormValidation = React.lazy(() => import(\"../pages/forms/Validation\"));\nconst FormAdvanced = React.lazy(() => import(\"../pages/forms/Advanced\"));\nconst FormWizard = React.lazy(() => import(\"../pages/forms/Wizard\"));\nconst FileUpload = React.lazy(() => import(\"../pages/forms/FileUpload\"));\nconst Editors = React.lazy(() => import(\"../pages/forms/Editors\"));\n// charts\nconst ApexChart = React.lazy(() => import(\"../pages/charts/Apex\"));\nconst BriteChart = React.lazy(() => import(\"../pages/charts/Brite\"));\nconst ChartJs = React.lazy(() => import(\"../pages/charts/ChartJs\"));\n// tables\nconst BasicTables = React.lazy(() => import(\"../pages/tables/Basic\"));\nconst AdvancedTables = React.lazy(() => import(\"../pages/tables/Advanced\"));\n// maps\nconst GoogleMaps = React.lazy(() => import(\"../pages/GoogleMaps\"));\n\n//platform\nconst ModifyPassword = React.lazy(() =>\n  import(\"../pages/platform/ModifyPassword\")\n);\n\n//offline cs\nconst CplCaseHome = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseHome\")\n);\nconst GovLetterHome = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterHome\")\n);\nconst PersonalVisitHome = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitHome\")\n);\nconst PersonalVisitForm = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitForm\")\n);\n\nconst GovLetterForm = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterForm\")\n);\n\n//service\n\nconst ServiceOverview = React.lazy(() =>\n  import(\"../pages/service/questions/overview\")\n);\nconst ServiceStatistics = React.lazy(() =>\n  import(\"../pages/service/statistics\")\n);\n\nconst QuestionsQueryHome = React.lazy(() =>\n  import(\"../pages/service/questions/query/QueryHome\")\n);\n\nconst AllocateListPage = React.lazy(() => import(\"../pages/service/allocate\"));\nconst QuesionsListPage = React.lazy(() => import(\"../pages/service/questions\"));\nconst SingleQuestionPage = React.lazy(() =>\n  import(\"../pages/service/questions/view\")\n);\n\nconst TestPage = React.lazy(() =>\n  import(\"../pages/service/questions/TestPage\")\n);\n\n//vip\nconst WhaleUserHome = React.lazy(() =>\n  import(\"../pages/vip/whale_users/WhaleUserHome\")\n);\nconst VipOfferHome = React.lazy(() => import(\"../pages/vip/offers/index\"));\nconst VipOfferForm = React.lazy(() => import(\"../pages/vip/offers/form\"));\nconst VipOrdersHome = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersHome\")\n);\nconst VipOrdersForm = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersForm\")\n);\n\n//Games\nconst GamesHome = React.lazy(() => import(\"../pages/games\"));\nconst GamesEditForm = React.lazy(() => import(\"../pages/games/form\"));\nconst ServerHome = React.lazy(() => import(\"../pages/games/ServerHome\"));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!isUserAuthenticated()) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/account/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      const loggedInUser = getLoggedInUser();\n      // check if route is restricted by role\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Redirect to={{ pathname: \"/\" }} />;\n      }\n\n      // authorised so return component\n      return <Component {...props} />;\n    }}\n  />\n);\n\n// root routes\nconst rootRoute = {\n  path: \"/\",\n  exact: true,\n  component: () => <Redirect to=\"/dashboard/service\" />,\n  route: PrivateRoute\n};\n\n// dashboards\nconst myDashboardRoutes = {\n  path: \"/mydashboard\",\n  name: \"我的\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/mydashboard/ecommerce\",\n      name: \"Ecommerce\",\n      badge: {\n        variant: \"success\",\n        text: \"3\"\n      },\n      component: EcommerceDashboard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/mydashboard/crm\",\n      name: \"CRM\",\n      component: CRMDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n//official dashboards\nconst dashboardRoutes = {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/dashboard/service\",\n      name: \"客服相關\",\n      component: AdminDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n// apps\nconst appRoutes = {\n  path: \"/apps\",\n  name: \"Apps\",\n  icon: \"dripicons-view-apps\",\n  children: [\n    {\n      path: \"/apps/calendar\",\n      name: \"Calendar\",\n      component: CalendarApp,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/projects\",\n      name: \"Projects\",\n      children: [\n        {\n          path: \"/apps/projects/list\",\n          name: \"List\",\n          component: Projects,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/projects/detail\",\n          name: \"Detail\",\n          component: ProjectDetail,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/ecommerce\",\n      name: \"eCommerce\",\n      children: [\n        {\n          path: \"/apps/ecommerce/products\",\n          name: \"Products\",\n          component: EcommerceProducts,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/details\",\n          name: \"Product Details\",\n          component: ProductDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/orders\",\n          name: \"Orders\",\n          component: Orders,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/order/details\",\n          name: \"Order Details\",\n          component: OrderDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/customers\",\n          name: \"Customers\",\n          component: Customers,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/shopping-cart\",\n          name: \"Shopping Cart\",\n          component: Cart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/checkout\",\n          name: \"Checkout\",\n          component: Checkout,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/sellers\",\n          name: \"Sellers\",\n          component: Sellers,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/kanban\",\n      name: \"Kanban\",\n      component: Kanban,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/email\",\n      name: \"Email\",\n      children: [\n        {\n          path: \"/apps/email/inbox\",\n          name: \"Inbox\",\n          component: Inbox,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/email/details\",\n          name: \"Email Details\",\n          component: EmailDetail,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n\n// pages\nconst pageRoutes = {\n  path: \"/pages\",\n  name: \"Pages\",\n  icon: \"dripicons-copy\",\n  children: [\n    {\n      path: \"/pages/starter\",\n      name: \"Starter\",\n      component: Starter,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/profile\",\n      name: \"Profile\",\n      component: Profile,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/invoice\",\n      name: \"Invoice\",\n      component: Invoice,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/faq\",\n      name: \"FAQ\",\n      component: FAQ,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/pricing\",\n      name: \"Pricing\",\n      component: Pricing,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-404\",\n      name: \"Error - 404\",\n      component: ErrorPageNotFound,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-500\",\n      name: \"Error - 500\",\n      component: ServerError,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// auth\nconst authRoutes = {\n  path: \"/account\",\n  name: \"Auth\",\n  children: [\n    {\n      path: \"/account/login\",\n      name: \"Login\",\n      component: Login,\n      route: Route\n    },\n    {\n      path: \"/account/logout\",\n      name: \"Logout\",\n      component: Logout,\n      route: Route\n    },\n    {\n      path: \"/account/register\",\n      name: \"Register\",\n      component: Register,\n      route: Route\n    },\n    {\n      path: \"/account/confirm\",\n      name: \"Confirm\",\n      component: Confirm,\n      route: Route\n    },\n    {\n      path: \"/account/forget-password\",\n      name: \"Forget Password\",\n      component: ForgetPassword,\n      route: Route\n    }\n  ]\n};\n\n// ui\nconst uiRoutes = {\n  path: \"/ui\",\n  name: \"UI Kit\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/ui/buttons\",\n      name: \"Buttons\",\n      component: Buttons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/cards\",\n      name: \"Cards\",\n      component: Cards,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/general\",\n      name: \"General\",\n      component: General,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/grid\",\n      name: \"Grid\",\n      component: Grid,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/icons\",\n      name: \"Icons\",\n      component: Icons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/modals\",\n      name: \"Modals\",\n      component: Modals,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/notifications\",\n      name: \"Notifications\",\n      component: Notifications,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/spinners\",\n      name: \"Spinners\",\n      component: Spinners,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/tabs\",\n      name: \"Tabs\",\n      component: Tabs,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/typography\",\n      name: \"Typography\",\n      component: Typography,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/widgets\",\n      name: \"Widgets\",\n      component: Widgets,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// forms\nconst formsRoutes = {\n  path: \"/forms\",\n  name: \"Forms\",\n  icon: \"dripicons-document\",\n  children: [\n    {\n      path: \"/forms/basic\",\n      name: \"Basic Elements\",\n      component: BasicForms,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/advanced\",\n      name: \"Form Advanced\",\n      component: FormAdvanced,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/validation\",\n      name: \"Form validation\",\n      component: FormValidation,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/wizard\",\n      name: \"Form Wizard\",\n      component: FormWizard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/upload\",\n      name: \"File Upload\",\n      component: FileUpload,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/editors\",\n      name: \"Editors\",\n      component: Editors,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// other features\nconst featuresRoutes = {\n  path: \"/features\",\n  name: \"Features\",\n  icon: \"dripicons-view-list-large\",\n  children: [\n    {\n      path: \"/features/charts\",\n      name: \"Charts\",\n      children: [\n        {\n          path: \"/features/charts/apex\",\n          name: \"Apex\",\n          component: ApexChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/brite\",\n          name: \"Brite\",\n          component: BriteChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/chartjs\",\n          name: \"Chartjs\",\n          component: ChartJs,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/tables\",\n      name: \"Tables\",\n      children: [\n        {\n          path: \"/features/tables/basic\",\n          name: \"Basic\",\n          component: BasicTables,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/tables/advanced\",\n          name: \"Advanced\",\n          component: AdvancedTables,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/googlemaps\",\n      name: \"Google Maps\",\n      component: GoogleMaps,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst platformRoutesSub = {\n  path: \"/platform\",\n  name: \"Platform\",\n  children: [\n    {\n      path: \"/platform/modify_password\",\n      name: \"修改密碼\",\n      component: ModifyPassword,\n      route: PrivateRoute\n    }\n  ]\n};\n// online cs\n\nconst serviceRoutesSub = {\n  path: \"/service\",\n  name: \"Service\",\n  children: [\n    {\n      path: \"/service/view/:question_id\",\n      name: \"客服案件檢視\",\n      component: SingleQuestionPage,\n      route: PrivateRoute\n    }\n  ]\n};\nconst serviceRoutes = {\n  path: \"/service\",\n  name: \"客服\",\n  icon: \" dripicons-device-desktop\",\n  children: [\n    {\n      exact: true,\n      path: \"/service/overview\",\n      name: \"總覽\",\n      component: ServiceOverview,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/questions/todo\",\n      name: \"待處理案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/get_list\",\n      name: \"等待中案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/closed\",\n      name: \"近期結案案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/allocate/list\",\n      name: \"派單系統- 案件列表\",\n      component: AllocateListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/statistics\",\n      name: \"件數統計\",\n      component: ServiceStatistics,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/questions/query\",\n      name: \"案件查詢\",\n      icon: \"dripicons-search\",\n      component: QuestionsQueryHome,\n      route: PrivateRoute\n    }\n  ]\n};\n// offline cs\nconst offlineRoutes = {\n  path: \"/offline\",\n  name: \"線下客服區\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/offline/cpl_case/home\",\n      name: \"消保\",\n      component: CplCaseHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/home\",\n      name: \"公函\",\n      component: GovLetterHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/home\",\n      name: \"親訪\",\n      component: PersonalVisitHome,\n      route: PrivateRoute\n    }\n  ]\n};\nconst offlineRoutesSub = {\n  path: \"/offline\",\n  name: \"offlineCS\",\n  children: [\n    {\n      path: \"/offline/personal_visit/create\",\n      name: \"新增親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/edit/:record_id\",\n      name: \"編輯親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/create\",\n      name: \"新增公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/edit/:record_id\",\n      name: \"編輯公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/test\",\n      name: \"測試\",\n      component: TestPage,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// VIP\nconst vipRoutes = {\n  path: \"/vip\",\n  name: \"VIP\",\n  icon: \"dripicons-trophy\",\n  children: [\n    {\n      path: \"/vip/whale_users\",\n      name: \"鯨魚用戶\",\n      component: WhaleUserHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/wire_report/list\",\n      name: \"VIP 訂單\",\n      component: VipOrdersHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/offers\",\n      name: \"VIP方案\",\n      children: [\n        {\n          path: \"/vip/offers/offer_list\",\n          name: \"方案列表\",\n          component: VipOfferHome,\n          route: PrivateRoute\n        },\n        {\n          path: \"/vip/offers/add_offer\",\n          name: \"方案明細\",\n          component: VipOfferForm,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n//games\n\nconst gamesRoutes = {\n  path: \"/games\",\n  name: \"遊戲管理\",\n  icon: \"dripicons-archive\",\n  children: [\n    {\n      path: \"/games/home\",\n      name: \"遊戲設定\",\n      component: GamesHome,\n      route: PrivateRoute,\n      exact: true\n    },\n    {\n      path: \"/games/create\",\n      name: \"新增遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/games/servers\",\n      name: \"伺服器設定\",\n      component: ServerHome,\n      route: PrivateRoute,\n      exact: true\n    }\n  ]\n};\n\n// online cs\n\nconst gameRoutesSub = {\n  path: \"/games\",\n  name: \"games\",\n  children: [\n    {\n      path: \"/games/edit/:game_id\",\n      name: \"編輯遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst vipRoutesSub = {\n  path: \"/vip\",\n  name: \"VIP\",\n  children: [\n    {\n      path: \"/vip/wire_report/edit/:report_id\",\n      name: \"編輯vip訂單\",\n      component: VipOrdersForm,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n  let flatRoutes = [];\n\n  routes = routes || [];\n  routes.forEach(item => {\n    flatRoutes.push(item);\n\n    if (typeof item.children !== \"undefined\") {\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n    }\n  });\n  return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n  rootRoute,\n  dashboardRoutes,\n  appRoutes,\n  authRoutes,\n  pageRoutes,\n  uiRoutes,\n  formsRoutes,\n  featuresRoutes,\n  platformRoutesSub,\n  offlineRoutes,\n  offlineRoutesSub,\n  myDashboardRoutes,\n  serviceRoutes,\n  serviceRoutesSub,\n  vipRoutes,\n  gamesRoutes,\n  gameRoutesSub,\n  vipRoutesSub\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n  loggedInUser !== null && loggedInUser.uid === 112\n    ? [\n        dashboardRoutes,\n        appRoutes,\n        pageRoutes,\n        uiRoutes,\n        formsRoutes,\n        featuresRoutes,\n        offlineRoutes,\n        myDashboardRoutes,\n        serviceRoutes,\n        vipRoutes,\n        gamesRoutes\n      ]\n    : [dashboardRoutes, offlineRoutes, serviceRoutes, vipRoutes, gamesRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from \"react\";\nimport Routes from \"./routes/Routes\";\n\n// Themes\nimport \"./assets/scss/DefaultTheme.scss\";\n\n// For Dark import DarkTheme.scss\n// import \"./assets/scss/DarkTheme.scss\";\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\nconst INIT_STATE = {\n    updated: null,\n    loading: true,\n    error: '',\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n    switch (action.type) {\n        case UPDATE_PASSWORD:\n            return { ...state, loading: true };\n        case UPDATE_PASSWORD_SUCCESS:\n            return { ...state, updated: true, loading: false, error: null };\n        case UPDATE_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    records: [],\r\n    loading: true,\r\n    affectedId: 0,\r\n    error: {},\r\n    currentRecord: {},\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n    switch (action.type) {\r\n        case GET_GOV_DATA:\r\n            return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n        case GET_GOV_DATA_SUCCESS:\r\n            return { ...state, records: action.payload, loading: false, error: null };\r\n        case GET_GOV_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case EDIT_RECORD:\r\n            return { ...state, loading: true };\r\n        case EDIT_RECORD_SUCCESS:\r\n            return { ...state, affectedId: action.payload, loading: false, error: null };\r\n        case EDIT_RECORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case GET_CURRENT:\r\n            return { ...state, loading: true };\r\n        case GET_CURRENT_SUCCESS:\r\n            return { ...state, currentRecord: action.payload, loading: false, error: null };\r\n        case GET_CURRENT_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    loading: true,\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = { user?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return { ...state, loading: true };\r\n        case GET_USERS_SUCCESS:\r\n            return { ...state, users: action.payload, loading: false, error: null };\r\n        case GET_USERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocation_quick_msg: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocation_quick_msg?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocation_quick_msg: action.payload.allocation_quick_msg,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  vip_orders_list: [],\r\n  vip_prods: [],\r\n  current_report: {},\r\n  loading: true,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  affectedRecord: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  vip_prods?: [] | null,\r\n  vip_orders_list?: [] | null,\r\n  current_report?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n    case GET_VIP_ORDERS:\r\n    case GET_CURRENT_VIP_REPORT:\r\n    case GET_VIP_PRODS_BY_GAMEID:\r\n    case EDIT_VIP_WIRE_REPORT:\r\n      return { ...state, loading: true, error: null, errors: {} };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        vip_orders_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_VIP_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_report: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_PRODS_BY_GAMEID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_prods: action.payload\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedRecord: action.payload.updatedField,\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: \"編輯成功!\"\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_FAILED:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        errors: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n    case GET_VIP_ORDERS_FAILED:\r\n    case GET_CURRENT_VIP_REPORT_FAILED:\r\n    case GET_VIP_PRODS_BY_GAMEID_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null\r\n      };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\",\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: [],\r\n  games_list: [],\r\n  user_history: [],\r\n  vip: null\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  games_list?: [] | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  user_history?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        loading:\r\n          Object.keys(action.payload).length === 1 &&\r\n          action.payload.status === \"1\"\r\n            ? false\r\n            : true,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: action.payload.updateQuestionData\r\n            ? [\r\n                ...state.current.replies,\r\n                { id: action.payload.id, ...action.payload.updatedField }\r\n              ]\r\n            : [\r\n                ...state.current.replies.map(reply =>\r\n                  reply.id !== action.payload.id\r\n                    ? reply\r\n                    : { ...reply, ...action.payload.updatedField }\r\n                )\r\n              ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user_history: action.payload.list,\r\n        vip: action.payload.vip\r\n      };\r\n    case GET_QUESTIONS_BY_USER_FAILED:\r\n    case GET_QUESTIONS_BY_USER:\r\n      return {\r\n        ...state,\r\n        user_history: []\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_CONFIG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        games_list: action.payload.games_list,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const { antsHandleData, qCountData, csHandleData } = action.payload;\r\n      var tmpGameIds = [];\r\n      return {\r\n        ...state,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { UPDATE_PASSWORD } from './constants';\r\nimport { updatePasswordSuccess, updatePasswordFailed } from './actions';\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n    const options = {\r\n        data: JSON.stringify({ account, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/platform/modify_password',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(updatePasswordSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(updatePasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n    yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nfunction* PlatformSaga(): any {\r\n    yield all([fork(watchChangePassword)]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GOV_DATA, EDIT_RECORD, GET_CURRENT } from './constants';\r\n\r\nimport {\r\n    getOfflineCsDataSuccess,\r\n    getOfflineCsDataFailed,\r\n    editRecordSuccess,\r\n    editRecordFailed,\r\n    getCurrentRecordSuccess,\r\n    getCurrentRecordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${type === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getOfflineCsDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 403:\r\n                message = error.response.data;\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getOfflineCsDataFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n    //console.log('editGovRecord *****', payload);\r\n    const { dataType, record } = payload;\r\n    //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    const options = {\r\n        data: record,\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        //console.log('editGovRecordSuccess editGovRecord', response);\r\n        yield put(editRecordSuccess(response.data));\r\n    } catch (error) {\r\n        //console.log('error editGovRecord', error.response.data);\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(editRecordFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n    //console.log('getCurrentRecord payload ', payload);\r\n    const { dataType, record_id } = payload;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}/detail/${record_id}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getCurrentRecordSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 400:\r\n                message = error.response.data.msg;\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(getCurrentRecordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n    yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n    yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n    yield all([fork(watchGetData), fork(watchEditRecord), fork(watchGetCurrentRecordData)]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS } from './constants';\r\n\r\nimport { getAdminUsersSuccess, getAdminUsersFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/admin_users/getAdminUsersByRole/${role}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getAdminUsersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getAdminUsersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION,\r\n  GET_SERVICE_CONFIG,\r\n  GET_QUESTIONS_BY_USER\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed,\r\n  getServiceConfigSuccess,\r\n  getQuestionsByUserSuccess,\r\n  getQuestionsByUserFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  //console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getQuestionsByUserData({ payload: question_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/list_by_user/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsByUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.msg;\r\n    }\r\n    yield put(getQuestionsByUserFailed(message));\r\n  }\r\n}\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceConfig() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/config`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceConfigSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nexport function* watchGetServiceConfig(): any {\r\n  yield takeEvery(GET_SERVICE_CONFIG, getServiceConfig);\r\n}\r\n\r\nexport function* watchGetRelaventUserData(): any {\r\n  yield takeEvery(GET_QUESTIONS_BY_USER, getQuestionsByUserData);\r\n}\r\n\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData),\r\n    fork(watchGetServiceConfig),\r\n    fork(watchGetRelaventUserData)\r\n  ]);\r\n}\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_ORDERS,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  EDIT_VIP_WIRE_REPORT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipOffersFailed,\r\n  getVipOffersSuccess,\r\n  getVipOrdersSuccess,\r\n  getVipOrdersFailed,\r\n  getCurrentVipReportSuccess,\r\n  getCurrentVipReportFailed,\r\n  getVipProductsByGameIdSuccess,\r\n  getVipProductsByGameIdFailed,\r\n  editVipWireReportSuccess,\r\n  editVipWireReportFailed\r\n} from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipOrder() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/order_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOrdersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOrdersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { report_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/detail/${report_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipReportFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getProdsByGameId({ payload: gameId }) {\r\n  //console.log('getServersByGameId', gameId);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods_list/${gameId}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipProductsByGameIdSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getVipProductsByGameIdFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/wire_report/update\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nexport function* watchGetOrders(): any {\r\n  yield takeEvery(GET_VIP_ORDERS, getVipOrder);\r\n}\r\n\r\nexport function* watchGetCurrentReport(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_REPORT, getCurrentRecord);\r\n}\r\nexport function* watchGetProdsByGameId(): any {\r\n  yield takeEvery(GET_VIP_PRODS_BY_GAMEID, getProdsByGameId);\r\n}\r\n\r\nexport function* watchEditVipWireReport(): any {\r\n  yield takeEvery(EDIT_VIP_WIRE_REPORT, editRecord);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([\r\n    fork(watchGetOffers),\r\n    fork(watchGetOrders),\r\n    fork(watchGetCurrentReport),\r\n    fork(watchGetProdsByGameId),\r\n    fork(watchEditVipWireReport)\r\n  ]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}