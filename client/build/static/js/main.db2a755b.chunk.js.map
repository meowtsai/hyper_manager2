{"version":3,"sources":["redux/service/constants.js","redux/offlinecs/constants.js","redux/batch/constants.js","redux/vipoffers/constants.js","redux/serviceAllocate/constants.js","redux/vip/constants.js","redux/service/actions.js","redux/platform/constants.js","redux/offlinecs/actions.js","redux/auth/constants.js","redux/games/constants.js","redux/layout/constants.js","redux/adminUsers/constants.js","redux/batch/actions.js","redux/serviceAllocate/actions.js","redux/vipoffers/actions.js","redux/appMenu/constants.js","redux/vip/actions.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/actions.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/games/actions.js","redux/adminUsers/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/servers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/batch/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/batch/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_SERVICE_CONFIG","GET_SERVICE_CONFIG_SUCCESS","GET_QUESTIONS_BY_USER","GET_QUESTIONS_BY_USER_SUCCESS","GET_QUESTIONS_BY_USER_FAILED","FAVORITE_QUESTION_ACTION","FAVORITE_QUESTION_ACTION_SUCCESS","FAVORITE_QUESTION_ACTION_FAILED","ADD_QUESTION_TO_BATCH","ADD_QUESTION_TO_BATCH_SUCCESS","ADD_QUESTION_TO_BATCH_FAILED","REMOVE_QUESTION_FROM_BATCH","REMOVE_QUESTION_FROM_BATCH_SUCCESS","REMOVE_QUESTION_FROM_BATCH_FAILED","ADD_MULTIPLE_QUESTIONS_TO_BATCH","ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS","ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","EDIT_CPL_REPLY","EDIT_CPL_REPLY_SUCCESS","EDIT_CPL_REPLY_FAILED","DELETE_CPL","DELETE_CPL_SUCCESS","DELETE_CPL_FAILED","MOVE_CPL","MOVE_CPL_SUCCESS","MOVE_CPL_FAILED","EDIT_CPL_MEDIATION","EDIT_CPL_MEDIATION_SUCCESS","EDIT_CPL_MEDIATION_FAILED","DELETE_CPL_REPLY","DELETE_CPL_REPLY_SUCCESS","DELETE_CPL_REPLY_FAILED","DELETE_CPL_MEDIATION","DELETE_CPL_MEDIATION_SUCCESS","DELETE_CPL_MEDIATION_FAILED","EDIT_CPL_REF","EDIT_CPL_REF_SUCCESS","EDIT_CPL_REF_FAILED","DELETE_CPL_REF","DELETE_CPL_REF_SUCCESS","DELETE_CPL_REF_FAILED","ADD_CPL_ATTACHMENT","ADD_CPL_ATTACHMENT_SUCCESS","ADD_CPL_ATTACHMENT_FAILED","DELETE_CPL_ATTACHMENT","DELETE_CPL_ATTACHMENT_SUCCESS","DELETE_CPL_ATTACHMENT_FAILED","GET_BATCH_TASKS","GET_BATCH_TASKS_SUCCESS","GET_BATCH_TASKS_FAILED","EDIT_BATCH_TASK","EDIT_BATCH_TASK_SUCCESS","EDIT_BATCH_TASK_FAILED","DELETE_BATCH_TASK","DELETE_BATCH_TASK_SUCCESS","DELETE_BATCH_TASK_FAILED","CLEAR_BATCH_TASK_MESSAGE","GET_CURRENT_BATCH_TASK","GET_CURRENT_BATCH_TASK_SUCCESS","GET_CURRENT_BATCH_TASK_FAILED","REMOVE_BATCH_Q","REMOVE_BATCH_Q_SUCCESS","REMOVE_BATCH_Q_FAILED","REMOVE_Q_FROM_BATCH","REMOVE_Q_FROM_BATCH_SUCCESS","REMOVE_Q_FROM_BATCH_FAILED","BATCH_REPLY_ACTION","BATCH_REPLY_ACTION_SUCCESS","BATCH_REPLY_ACTION_FAILED","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","GET_VIP_ORDERS","GET_VIP_ORDERS_SUCCESS","GET_VIP_ORDERS_FAILED","GET_CURRENT_VIP_REPORT","GET_CURRENT_VIP_REPORT_SUCCESS","GET_CURRENT_VIP_REPORT_FAILED","GET_VIP_PRODS_BY_GAMEID","GET_VIP_PRODS_BY_GAMEID_SUCCESS","GET_VIP_PRODS_BY_GAMEID_FAILED","EDIT_VIP_WIRE_REPORT","EDIT_VIP_WIRE_REPORT_SUCCESS","EDIT_VIP_WIRE_REPORT_FAILED","DELETE_VIP_WIRE_REPORT","DELETE_VIP_WIRE_REPORT_SUCCESS","DELETE_VIP_WIRE_REPORT_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getQuestionsByUser","getQuestionsByUserSuccess","getQuestionsByUserFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","clearMessage","getServiceConfig","getServiceConfigSuccess","favorQuestion","favorQuestionSuccess","favorQuestionFailed","addQuestionToBatch","addQuestionToBatchSuccess","addQuestionToBatchFailed","removeQuestionFromBatch","removeQuestionFromBatchSuccess","removeQuestionFromBatchFailed","addMultipleQuestionsToBatch","addMultipleQuestionsToBatchSuccess","addMultipleQuestionsToBatchFailed","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","action","batch_id","errors","ids","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_PRESET_MESSAGE","GET_PRESET_MESSAGE_SUCCESS","GET_PRESET_MESSAGE_FAILED","EDIT_PRESET_MESSAGE","EDIT_PRESET_MESSAGE_SUCCESS","EDIT_PRESET_MESSAGE_FAILED","DELETE_PRESET_MESSAGE","DELETE_PRESET_MESSAGE_SUCCESS","DELETE_PRESET_MESSAGE_FAILED","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","editCplReply","editCplReplySuccess","editCplReplyFailed","editCplMediation","editCplMediationSuccess","editCplMediationFailed","deleteCplCase","deleteCplCaseSuccess","deleteCplCaseFailed","deleteCplCaseReply","deleteCplCaseReplySuccess","deleteCplCaseReplyFailed","deleteCplMediation","deleteCplMediationSuccess","deleteCplMediationFailed","moveCplCase","moveCplCaseSuccess","moveCplCaseFailed","editCplRef","editCplRefSuccess","editCplRefFailed","deleteCplRef","deleteCplRefSuccess","deleteCplRefFailed","addCplAttachment","addCplAttachmentSuccess","addCplAttachmentFailed","deleteCplAttachment","deleteCplAttachmentSuccess","deleteCplAttachmentFailed","dataType","records","record","affectedId","record_id","history","id","case_id","ref_id","attachment_id","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_USER_TASKS","GET_USER_TASKS_SUCCESS","GET_USER_TASKS_FAILED","getBatchTasks","getBatchTasksSuccess","getBatchTasksFailed","editBatchTask","editBatchTaskSuccess","editBatchTaskFailed","deleteBatchTask","deleteBatchTaskSuccess","deleteBatchTaskFailed","clearBatchTaskMessage","getCurrentBatchTask","getCurrentBatchTaskSuccess","getCurrentBatchTaskFailed","removeBatchQ","removeBatchQSuccess","removeBatchQFailed","removeQFromBatch","removeQFromBatchSuccess","removeQFromBatchFailed","batchReplyAction","batchReplyActionSuccess","batchReplyActionFailed","replyData","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","qid","allocation_cause","getVipOffers","getVipOffersSuccess","getVipOffersFailed","getVipProductsByGameId","getVipProductsByGameIdSuccess","getVipProductsByGameIdFailed","getVipOrders","getVipOrdersSuccess","getVipOrdersFailed","getCurrentVipReport","getCurrentVipReportSuccess","getCurrentVipReportFailed","editVipWireReport","editVipWireReportSuccess","editVipWireReportFailed","deleteVipWireReport","deleteVipWireReportSuccess","deleteVipWireReportFailed","game_id","report_id","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","uid","command","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","updatePassword","updatePasswordSuccess","updatePasswordFailed","getPresetMessage","getPresetMessageSuccess","getPresetMessageFailed","editPresetMessage","editPresetMessageSuccess","editPresetMessageFailed","deletePresetMessage","deletePresetMessageSuccess","deletePresetMessageFailed","clearPresetMessageMessage","account","password","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","fullname","email","passwordResetStatus","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","getUserTasks","getUserTasksSuccess","role","users","tasks","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","getServersByGameId","getServersSuccess","getServersFailed","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","ErrorForbidden","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","TestTable","GoogleMaps","ModifyPassword","PresetMessageHome","CplCaseHome","CplCaseForm","CplCaseView","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","QuestionsQueryHome","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","BatchListPage","BatchTaskView","WhaleUserHome","VipOfferHome","VipOfferForm","VipOrdersHome","VipOrdersForm","GamesHome","GamesEditForm","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","objectSpread","Auth","AppMenu","stat","Dashboard","updated","preset_messages","updateOKMessage","Platform","msg","updField","toString","filter","deleted_id","currentRecord","OfflineCS","list","config_status","replies","re","mediations","attachments","act","mediation","refs","ref_case_list","reply","Games","Servers","user_tasks","AdminUsers","allocation","allocation_logs","allocation_quick_msg","allocationStatus","cs_members","ServiceAllocate","newList","logs","log","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","updatedField","newLog","all_records","game_list","vip_list","requestData","not_allowed","VIP","vip","s","newRecord","newReqData","vip_offer_list","vip_orders_list","vip_prods","current_report","affectedRecord","VipOffers","report","current","allgames","antsHandleData","qCountData","csHandleData","csHandleAllocationData","antsHandleAllocationData","games_list","user_history","add_favor_ok","Service","keys","status","q_batch_info","batch_info","q","is_batch","Number","parseInt","removed_q_id","question","is_favorite","updateQuestionData","question_type","question_status","_action$payload","tmpGameIds","reduce","prev","curr","game_name","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","test_list","BatchTasks","task","q_list","affectedRow","mode","batch_tasks","games","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","getPresetMessageData","editPresetMessageData","deletePresetMessageData","watchChangePassword","watchgetPresetMessageData","watchUpdatePresetMessageData","watchDeletePresetMessageData","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","platform_saga_marked4","platform_saga_marked5","platform_saga_marked6","platform_saga_marked7","platform_saga_marked8","platform_saga_marked9","moveCplRecord","addCplAttach","delCplCase","delCplCaseReply","delCplCaseAttachment","delCplMd","watchGetCurrentRecordData","watchEditRecord","watchEditCplReply","watchEditCplMediation","watchDeleteCpl","watchDeleteCplReply","watchDeleteCplMediation","watchMoveCplStatus","watchEditCplRef","watchDeleteCplRef","watchAddCplAttach","watchDelCplAttach","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","_ref5","offlinecs_saga_marked5","_ref6","offlinecs_saga_marked6","_ref7","offlinecs_saga_marked7","_ref8","offlinecs_saga_marked8","_ref9","offlinecs_saga_marked9","_ref10","_ref10$payload","saga_marked10","_ref11","saga_marked11","_ref12","saga_marked12","_ref13","saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","getUserTask","watchGetUserTasks","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","adminUsers_saga_marked4","adminUsers_saga_marked5","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","serviceAllocate_saga_marked10","serviceAllocate_saga_marked11","serviceAllocate_saga_marked12","serviceAllocate_saga_marked13","getQuestionsData","getCurrentQuestionData","getQuestionsByUserData","getTestData","getServiceStat","updateType","updateStatus","updateQuestionFavorite","addIdsToBatch","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","watchGetServiceConfig","watchGetRelaventUserData","watchupdateQuestionFavorite","watchAddQuestionToBatch","watchRemoveQuestionFromBatch","watchAddMultiToBatch","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","service_saga_marked7","service_saga_marked8","service_saga_marked9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","service_saga_marked14","service_saga_marked15","_ref14","_ref14$payload","saga_marked16","saga_marked17","saga_marked18","saga_marked19","saga_marked20","saga_marked21","saga_marked22","saga_marked23","saga_marked24","saga_marked25","saga_marked26","saga_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","_marked33","getVIP","putVIP","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","vipSaga","vip_saga_marked","vip_saga_marked2","_ref2$payload","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","getVipOrder","getProdsByGameId","delVIPWReport","watchGetOffers","watchGetOrders","watchGetCurrentReport","watchGetProdsByGameId","watchEditVipWireReport","watchDeleteVipWireReport","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","vipoffers_saga_marked4","vipoffers_saga_marked5","vipoffers_saga_marked6","vipoffers_saga_marked7","vipoffers_saga_marked8","vipoffers_saga_marked9","vipoffers_saga_marked10","vipoffers_saga_marked11","vipoffers_saga_marked12","vipoffers_saga_marked13","getCurrentBatch","batchReply","delBatchTask","removeBatchQuestions","watchGetBatchTasksData","watchEditBatchRecord","watchDeleteBatchRecord","watchgetCurrentBatch","watchgetRemoveBatchQ","watchgetRemoveQFromBatch","watchBatchReply","batchTaskSaga","batch_saga_marked","batch_saga_marked2","batch_saga_marked3","batch_saga_marked4","batch_saga_marked5","batch_saga_marked6","batch_saga_marked7","batch_saga_marked8","batch_saga_marked9","batch_saga_marked10","batch_saga_marked11","batch_saga_marked12","batch_saga_marked13","batch_saga_marked14","batch_saga_marked15","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db2a755b.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS = \"GET_SERVICE_STATISTICS\";\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = \"GET_SERVICE_STATISTICS_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_FAILED = \"GET_SERVICE_STATISTICS_FAILED\";\r\n\r\nexport const GET_SERVICE_CONFIG = \"GET_SERVICE_CONFIG\";\r\nexport const GET_SERVICE_CONFIG_SUCCESS = \"GET_SERVICE_CONFIG_SUCCESS\";\r\n\r\nexport const GET_QUESTIONS_BY_USER = \"GET_QUESTIONS_BY_USER\";\r\nexport const GET_QUESTIONS_BY_USER_SUCCESS = \"GET_QUESTIONS_BY_USER_SUCCESS\";\r\nexport const GET_QUESTIONS_BY_USER_FAILED = \"GET_QUESTIONS_BY_USER_FAILED\";\r\n\r\nexport const FAVORITE_QUESTION_ACTION = \"FAVORITE_QUESTION_ACTION\";\r\nexport const FAVORITE_QUESTION_ACTION_SUCCESS =\r\n  \"FAVORITE_QUESTION_ACTION_SUCCESS\";\r\nexport const FAVORITE_QUESTION_ACTION_FAILED =\r\n  \"FAVORITE_QUESTION_ACTION_FAILED\";\r\n\r\nexport const ADD_QUESTION_TO_BATCH = \"ADD_QUESTION_TO_BATCH\";\r\nexport const ADD_QUESTION_TO_BATCH_SUCCESS = \"ADD_QUESTION_TO_BATCH_SUCCESS\";\r\nexport const ADD_QUESTION_TO_BATCH_FAILED = \"ADD_QUESTION_TO_BATCH_FAILED\";\r\n\r\nexport const REMOVE_QUESTION_FROM_BATCH = \"REMOVE_QUESTION_FROM_BATCH\";\r\nexport const REMOVE_QUESTION_FROM_BATCH_SUCCESS =\r\n  \"REMOVE_QUESTION_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_QUESTION_FROM_BATCH_FAILED =\r\n  \"REMOVE_QUESTION_FROM_BATCH_FAILED\";\r\n\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH\";\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS\";\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\";\r\n","export const GET_OCSDATA_SUCCESS = \"GET_OCSDATA_SUCCESS\";\r\nexport const GET_OCSDATA_FAILED = \"GET_OCSDATA_FAILED\";\r\nexport const ADD_OCSDATA_SUCCESS = \"ADD_OCSDATA_SUCCESS\";\r\nexport const ADD_OCSDATA_FAILED = \"ADD_OCSDATA_FAILED\";\r\nexport const LOADING_BEGIN = \"LOADING_BEGIN\";\r\nexport const LOADING_END = \"LOADING_END\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";\r\nexport const GET_CURRENT_RECORD = \"GET_CURRENT_RECORD\";\r\nexport const CLEAR_CURRENT_RECORD = \"CLEAR_CURRENT_RECORD\";\r\nexport const GET_CSMASTER_SUCCESS = \"GET_CSMASTER_SUCCESS\";\r\nexport const GET_CSMASTER_FAILED = \"GET_CSMASTER_FAILED\";\r\n\r\nexport const GET_GOV_DATA = \"GET_GOV_DATA\";\r\nexport const GET_GOV_DATA_SUCCESS = \"GET_GOV_DATA_SUCCESS\";\r\nexport const GET_GOV_DATA_FAILED = \"GET_GOV_DATA_FAILED\";\r\n\r\nexport const EDIT_RECORD = \"EDIT_RECORD\";\r\nexport const EDIT_RECORD_SUCCESS = \"EDIT_RECORD_SUCCESS\";\r\nexport const EDIT_RECORD_FAILED = \"EDIT_RECORD_FAILED\";\r\n\r\nexport const GET_CURRENT = \"GET_CURRENT\";\r\nexport const GET_CURRENT_SUCCESS = \"GET_CURRENT_SUCCESS\";\r\nexport const GET_CURRENT_FAILED = \"GET_CURRENT_FAILED\";\r\n\r\nexport const EDIT_CPL_REPLY = \"EDIT_CPL_REPLY\";\r\nexport const EDIT_CPL_REPLY_SUCCESS = \"EDIT_CPL_REPLY_SUCCESS\";\r\nexport const EDIT_CPL_REPLY_FAILED = \"EDIT_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL = \"DELETE_CPL\";\r\nexport const DELETE_CPL_SUCCESS = \"DELETE_CPL_SUCCESS\";\r\nexport const DELETE_CPL_FAILED = \"DELETE_CPL_FAILED\";\r\n\r\nexport const MOVE_CPL = \"MOVE_CPL\";\r\nexport const MOVE_CPL_SUCCESS = \"MOVE_CPL_SUCCESS\";\r\nexport const MOVE_CPL_FAILED = \"MOVE_CPL_FAILED\";\r\n\r\nexport const EDIT_CPL_MEDIATION = \"EDIT_CPL_MEDIATION\";\r\nexport const EDIT_CPL_MEDIATION_SUCCESS = \"EDIT_CPL_MEDIATION_SUCCESS\";\r\nexport const EDIT_CPL_MEDIATION_FAILED = \"EDIT_CPL_MEDIATION_FAILED\";\r\n\r\nexport const DELETE_CPL_REPLY = \"DELETE_CPL_REPLY\";\r\nexport const DELETE_CPL_REPLY_SUCCESS = \"DELETE_CPL_REPLY_SUCCESS\";\r\nexport const DELETE_CPL_REPLY_FAILED = \"DELETE_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL_MEDIATION = \"DELETE_CPL_MEDIATION\";\r\nexport const DELETE_CPL_MEDIATION_SUCCESS = \"DELETE_CPL_MEDIATION_SUCCESS\";\r\nexport const DELETE_CPL_MEDIATION_FAILED = \"DELETE_CPL_MEDIATION_FAILED\";\r\n\r\nexport const EDIT_CPL_REF = \"EDIT_CPL_REF\";\r\nexport const EDIT_CPL_REF_SUCCESS = \"EDIT_CPL_REF_SUCCESS\";\r\nexport const EDIT_CPL_REF_FAILED = \"EDIT_CPL_REF_FAILED\";\r\nexport const DELETE_CPL_REF = \"DELETE_CPL_REF\";\r\nexport const DELETE_CPL_REF_SUCCESS = \"DELETE_CPL_REF_SUCCESS\";\r\nexport const DELETE_CPL_REF_FAILED = \"DELETE_CPL_REF_FAILED\";\r\n\r\nexport const ADD_CPL_ATTACHMENT = \"ADD_CPL_ATTACHMENT\";\r\nexport const ADD_CPL_ATTACHMENT_SUCCESS = \"ADD_CPL_ATTACHMENT_SUCCESS\";\r\nexport const ADD_CPL_ATTACHMENT_FAILED = \"ADD_CPL_ATTACHMENT_FAILED\";\r\n\r\nexport const DELETE_CPL_ATTACHMENT = \"DELETE_CPL_ATTACHMENT\";\r\nexport const DELETE_CPL_ATTACHMENT_SUCCESS = \"DELETE_CPL_ATTACHMENT_SUCCESS\";\r\nexport const DELETE_CPL_ATTACHMENT_FAILED = \"DELETE_CPL_ATTACHMENT_FAILED\";\r\n","export const GET_BATCH_TASKS = \"GET_BATCH_TASKS\";\r\nexport const GET_BATCH_TASKS_SUCCESS = \"GET_BATCH_TASKS_SUCCESS\";\r\nexport const GET_BATCH_TASKS_FAILED = \"GET_BATCH_TASKS_FAILED\";\r\n\r\nexport const EDIT_BATCH_TASK = \"EDIT_BATCH_TASK\";\r\nexport const EDIT_BATCH_TASK_SUCCESS = \"EDIT_BATCH_TASK_SUCCESS\";\r\nexport const EDIT_BATCH_TASK_FAILED = \"EDIT_BATCH_TASK_FAILED\";\r\nexport const DELETE_BATCH_TASK = \"DELETE_BATCH_TASK\";\r\nexport const DELETE_BATCH_TASK_SUCCESS = \"DELETE_BATCH_TASK_SUCCESS\";\r\nexport const DELETE_BATCH_TASK_FAILED = \"DELETE_BATCH_TASK_FAILED\";\r\n\r\nexport const CLEAR_BATCH_TASK_MESSAGE = \"CLEAR_BATCH_TASK_MESSAGE\";\r\n\r\nexport const GET_CURRENT_BATCH_TASK = \"GET_CURRENT_BATCH_TASK\";\r\nexport const GET_CURRENT_BATCH_TASK_SUCCESS = \"GET_CURRENT_BATCH_TASK_SUCCESS\";\r\nexport const GET_CURRENT_BATCH_TASK_FAILED = \"GET_CURRENT_BATCH_TASK_FAILED\";\r\n\r\nexport const REMOVE_BATCH_Q = \"REMOVE_BATCH_Q\";\r\nexport const REMOVE_BATCH_Q_SUCCESS = \"REMOVE_BATCH_Q_SUCCESS\";\r\nexport const REMOVE_BATCH_Q_FAILED = \"REMOVE_BATCH_Q_FAILED\";\r\nexport const REMOVE_Q_FROM_BATCH = \"REMOVE_Q_FROM_BATCH\";\r\nexport const REMOVE_Q_FROM_BATCH_SUCCESS = \"REMOVE_Q_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_Q_FROM_BATCH_FAILED = \"REMOVE_Q_FROM_BATCH_FAILED\";\r\n\r\nexport const BATCH_REPLY_ACTION = \"BATCH_REPLY_ACTION\";\r\nexport const BATCH_REPLY_ACTION_SUCCESS = \"BATCH_REPLY_ACTION_SUCCESS\";\r\nexport const BATCH_REPLY_ACTION_FAILED = \"BATCH_REPLY_ACTION_FAILED\";\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n\r\nexport const GET_VIP_ORDERS = \"GET_VIP_ORDERS\";\r\nexport const GET_VIP_ORDERS_SUCCESS = \"GET_VIP_ORDERS_SUCCESS\";\r\nexport const GET_VIP_ORDERS_FAILED = \"GET_VIP_ORDERS_FAILED\";\r\n\r\nexport const GET_CURRENT_VIP_REPORT = \"GET_CURRENT_VIP_REPORT\";\r\nexport const GET_CURRENT_VIP_REPORT_SUCCESS = \"GET_CURRENT_VIP_REPORT_SUCCESS\";\r\nexport const GET_CURRENT_VIP_REPORT_FAILED = \"GET_CURRENT_VIP_REPORT_FAILED\";\r\n\r\nexport const GET_VIP_PRODS_BY_GAMEID = \"GET_VIP_PRODS_BY_GAMEID\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_SUCCESS =\r\n  \"GET_VIP_PRODS_BY_GAMEID_SUCCESS\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_FAILED = \"GET_VIP_PRODS_BY_GAMEID_FAILED\";\r\n\r\nexport const EDIT_VIP_WIRE_REPORT = \"EDIT_VIP_WIRE_REPORT\";\r\nexport const EDIT_VIP_WIRE_REPORT_SUCCESS = \"EDIT_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const EDIT_VIP_WIRE_REPORT_FAILED = \"EDIT_VIP_WIRE_REPORT_FAILED\";\r\n\r\nexport const DELETE_VIP_WIRE_REPORT = \"DELETE_VIP_WIRE_REPORT\";\r\nexport const DELETE_VIP_WIRE_REPORT_SUCCESS = \"DELETE_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const DELETE_VIP_WIRE_REPORT_FAILED = \"DELETE_VIP_WIRE_REPORT_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getQuestionsByUser = (question_id: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER,\r\n  payload: question_id\r\n});\r\n\r\nexport const getQuestionsByUserSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsByUserFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n\r\nexport const getServiceConfig = (): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG\r\n});\r\n\r\nexport const getServiceConfigSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const favorQuestion = (qId: number, action: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION,\r\n  payload: { qId, action }\r\n});\r\n\r\nexport const favorQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const favorQuestionFailed = (error: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addQuestionToBatch = (\r\n  question_id: Number,\r\n  batch_id: Number\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH,\r\n  payload: { question_id, batch_id }\r\n});\r\n\r\nexport const addQuestionToBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addQuestionToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQuestionFromBatch = (\r\n  question_id: Number\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQuestionFromBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQuestionFromBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//將多個問題一次加入某個批次\r\n\r\nexport const addMultipleQuestionsToBatch = (\r\n  batch_id: number,\r\n  ids: []\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  payload: { batch_id, ids }\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\nexport const UPDATE_PASSWORD_FAILED = \"UPDATE_PASSWORD_FAILED\";\n\nexport const GET_PRESET_MESSAGE = \"GET_PRESET_MESSAGE\";\nexport const GET_PRESET_MESSAGE_SUCCESS = \"GET_PRESET_MESSAGE_SUCCESS\";\nexport const GET_PRESET_MESSAGE_FAILED = \"GET_PRESET_MESSAGE_FAILED\";\nexport const EDIT_PRESET_MESSAGE = \"EDIT_PRESET_MESSAGE\";\nexport const EDIT_PRESET_MESSAGE_SUCCESS = \"EDIT_PRESET_MESSAGE_SUCCESS\";\nexport const EDIT_PRESET_MESSAGE_FAILED = \"EDIT_PRESET_MESSAGE_FAILED\";\nexport const DELETE_PRESET_MESSAGE = \"DELETE_PRESET_MESSAGE\";\nexport const DELETE_PRESET_MESSAGE_SUCCESS = \"DELETE_PRESET_MESSAGE_SUCCESS\";\nexport const DELETE_PRESET_MESSAGE_FAILED = \"DELETE_PRESET_MESSAGE_FAILED\";\n\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA,\r\n  payload: dataType\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_SUCCESS,\r\n  payload: records\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editRecord = (\r\n  dataType: string,\r\n  record: FormData\r\n): OfflineCsAction => ({\r\n  type: EDIT_RECORD,\r\n  payload: { dataType, record }\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_RECORD_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_RECORD_FAILED,\r\n  payload: errors\r\n});\r\nexport const getCurrentRecord = (\r\n  dataType: string,\r\n  record_id: int,\r\n  history: {}\r\n): OfflineCsAction => ({\r\n  type: GET_CURRENT,\r\n  payload: { dataType, record_id, history }\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n  type: GET_CURRENT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_CURRENT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editCplReply = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY,\r\n  payload: record\r\n});\r\n\r\nexport const editCplReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplReplyFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplMediation = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION,\r\n  payload: record\r\n});\r\n\r\nexport const editCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCase = (id: string, history: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCaseReply = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplCaseReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseReplyFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\nexport const deleteCplMediation = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const moveCplCase = (id: string, record: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL,\r\n  payload: { id, record }\r\n});\r\n\r\nexport const moveCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const moveCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: MOVE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const editCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const deleteCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//add_attachment_json\r\n\r\nexport const addCplAttachment = (record: FormData): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT,\r\n  payload: record\r\n});\r\n\r\nexport const addCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplAttachment = (\r\n  attachment_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT,\r\n  payload: attachment_id\r\n});\r\n\r\nexport const deleteCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILED = \"GET_USERS_FAILED\";\r\n\r\nexport const GET_USER_TASKS = \"GET_USER_TASKS\";\r\nexport const GET_USER_TASKS_SUCCESS = \"GET_USER_TASKS_SUCCESS\";\r\nexport const GET_USER_TASKS_FAILED = \"GET_USER_TASKS_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\ntype BatchTaskAction = { type: string, payload: {} | string };\r\n\r\nexport const getBatchTasks = (): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS\r\n});\r\n\r\nexport const getBatchTasksSuccess = (data: []): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getBatchTasksFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editBatchTask = (record: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK,\r\n  payload: record\r\n});\r\n\r\nexport const editBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editBatchTaskFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteBatchTask = (id: string, history: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteBatchTaskFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const clearBatchTaskMessage = (): BatchTaskAction => ({\r\n  type: CLEAR_BATCH_TASK_MESSAGE\r\n});\r\n\r\nexport const getCurrentBatchTask = (\r\n  record_id: int,\r\n  history: {}\r\n): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK,\r\n  payload: { record_id, history }\r\n});\r\n\r\nexport const getCurrentBatchTaskSuccess = (record: {}): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentBatchTaskFailed = (error: string): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const removeBatchQ = (batch_id: number): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q,\r\n  payload: batch_id\r\n});\r\n\r\nexport const removeBatchQSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeBatchQFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQFromBatch = (question_id: number): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQFromBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQFromBatchFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//回覆批次問題\r\n//data: `batch_id=${batch_id}&new_type=${new_type}&post_content=${post_content}&mode=${mode}`,\r\nexport const batchReplyAction = (replyData: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION,\r\n  payload: replyData\r\n});\r\n\r\nexport const batchReplyActionSuccess = (result: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const batchReplyActionFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_FAILED,\r\n  payload: errors\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipProductsByGameId = (game_id: string): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipProductsByGameIdSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipProductsByGameIdFailed = (\r\n  error: string\r\n): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipOrders = (): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS\r\n});\r\n\r\nexport const getVipOrdersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOrdersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentVipReport = (\r\n  report_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT,\r\n  payload: { report_id, history }\r\n});\r\n\r\nexport const getCurrentVipReportSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentVipReportFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editVipWireReport = (record: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT,\r\n  payload: { record }\r\n});\r\n\r\nexport const editVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteVipWireReport = (record_id: string): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (\n  account: string,\n  password: string\n): PlatformAction => ({\n  type: UPDATE_PASSWORD,\n  payload: { account, password }\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n  type: UPDATE_PASSWORD_SUCCESS\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n  type: UPDATE_PASSWORD_FAILED,\n  payload: error\n});\n\nexport const getPresetMessage = (): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE\n});\n\nexport const getPresetMessageSuccess = (records: []): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_SUCCESS,\n  payload: records\n});\n\nexport const getPresetMessageFailed = (error: string): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_FAILED,\n  payload: error\n});\n\nexport const editPresetMessage = (record: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE,\n  payload: record\n});\n\nexport const editPresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const editPresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_FAILED,\n  payload: errors\n});\n\nexport const deletePresetMessage = (id: string): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE,\n  payload: id\n});\n\nexport const deletePresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const deletePresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: errors\n});\n\nexport const clearPresetMessageMessage = (): ServiceAction => ({\n  type: CLEAR_MESSAGE\n});\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from \"jwt-decode\";\nimport { Cookies } from \"react-cookie\";\n\nimport axios from \"axios\";\n\nconst setAuthToken = token => {\n  //console.log(\"setAuthToken\", token);\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n  const user = getLoggedInUser();\n  if (!user) {\n    return false;\n  }\n  const decoded = jwtDecode(user.token);\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    console.warn(\"access token expired\");\n    return false;\n  } else {\n    setAuthToken(user.token);\n    return true;\n  }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n  const cookies = new Cookies();\n  const user = cookies.get(\"user\");\n  //console.log(\"getLoggedInUser\", user);\n  return user ? (typeof user == \"object\" ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n  type: GET_USERS,\r\n  payload: role\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getUserTasks = (): AdminUserAction => ({\r\n  type: GET_USER_TASKS\r\n});\r\n\r\nexport const getUserTasksSuccess = (tasks: {}): AdminUserAction => ({\r\n  type: GET_USER_TASKS_SUCCESS,\r\n  payload: tasks\r\n});\r\n\r\nexport const getUserTasksFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USER_TASKS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\nconst Register = React.lazy(() => import(\"../pages/auth/Register\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\nconst Confirm = React.lazy(() => import(\"../pages/auth/Confirm\"));\n// dashboard\nconst EcommerceDashboard = React.lazy(() =>\n  import(\"../pages/dashboards/Ecommerce\")\n);\nconst CRMDashboard = React.lazy(() => import(\"../pages/dashboards/CRM\"));\n//*add new\nconst AdminDashboard = React.lazy(() => import(\"../pages/dashboards/Admin\"));\n// apps\nconst CalendarApp = React.lazy(() => import(\"../pages/apps/Calendar\"));\nconst Projects = React.lazy(() => import(\"../pages/apps/Projects\"));\nconst ProjectDetail = React.lazy(() => import(\"../pages/apps/ProjectDetail\"));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/Products\")\n);\nconst ProductDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/ProductDetails\")\n);\nconst Orders = React.lazy(() => import(\"../pages/apps/Ecommerce/Orders\"));\nconst OrderDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/OrderDetails\")\n);\nconst Customers = React.lazy(() => import(\"../pages/apps/Ecommerce/Customers\"));\nconst Cart = React.lazy(() => import(\"../pages/apps/Ecommerce/Cart\"));\nconst Checkout = React.lazy(() => import(\"../pages/apps/Ecommerce/Checkout/\"));\nconst Sellers = React.lazy(() => import(\"../pages/apps/Ecommerce/Sellers\"));\n// - kanban\nconst Kanban = React.lazy(() => import(\"../pages/apps/Kanban/\"));\n\n// - email\nconst Inbox = React.lazy(() => import(\"../pages/apps/Email/Inbox\"));\nconst EmailDetail = React.lazy(() => import(\"../pages/apps/Email/Detail\"));\n\n// pages\nconst Starter = React.lazy(() => import(\"../pages/Starter\"));\nconst Profile = React.lazy(() => import(\"../pages/profile\"));\nconst ErrorPageNotFound = React.lazy(() =>\n  import(\"../pages/error/PageNotFound\")\n);\nconst ServerError = React.lazy(() => import(\"../pages/error/ServerError\"));\nconst ErrorForbidden = React.lazy(() =>\n  import(\"../pages/error/ErrorForbidden\")\n);\n\n// - other\nconst Invoice = React.lazy(() => import(\"../pages/other/Invoice\"));\nconst FAQ = React.lazy(() => import(\"../pages/other/FAQ\"));\nconst Pricing = React.lazy(() => import(\"../pages/other/Pricing\"));\n\n// uikit\nconst Cards = React.lazy(() => import(\"../pages/uikit/Cards\"));\nconst Buttons = React.lazy(() => import(\"../pages/uikit/Buttons\"));\nconst Modals = React.lazy(() => import(\"../pages/uikit/Modals\"));\nconst Tabs = React.lazy(() => import(\"../pages/uikit/Tabs\"));\nconst Notifications = React.lazy(() => import(\"../pages/uikit/Notifications\"));\nconst Grid = React.lazy(() => import(\"../pages/uikit/Grid\"));\nconst General = React.lazy(() => import(\"../pages/uikit/General\"));\nconst Typography = React.lazy(() => import(\"../pages/uikit/Typography\"));\nconst Icons = React.lazy(() => import(\"../pages/uikit/Icons\"));\nconst Spinners = React.lazy(() => import(\"../pages/uikit/Spinners\"));\nconst Widgets = React.lazy(() => import(\"../pages/uikit/Widgets\"));\n// forms\nconst BasicForms = React.lazy(() => import(\"../pages/forms/Basic\"));\nconst FormValidation = React.lazy(() => import(\"../pages/forms/Validation\"));\nconst FormAdvanced = React.lazy(() => import(\"../pages/forms/Advanced\"));\nconst FormWizard = React.lazy(() => import(\"../pages/forms/Wizard\"));\nconst FileUpload = React.lazy(() => import(\"../pages/forms/FileUpload\"));\nconst Editors = React.lazy(() => import(\"../pages/forms/Editors\"));\n// charts\nconst ApexChart = React.lazy(() => import(\"../pages/charts/Apex\"));\nconst BriteChart = React.lazy(() => import(\"../pages/charts/Brite\"));\nconst ChartJs = React.lazy(() => import(\"../pages/charts/ChartJs\"));\n// tables\nconst BasicTables = React.lazy(() => import(\"../pages/tables/Basic\"));\nconst AdvancedTables = React.lazy(() => import(\"../pages/tables/Advanced\"));\nconst TestTable = React.lazy(() => import(\"../pages/tables/TestTable\"));\n\n// maps\nconst GoogleMaps = React.lazy(() => import(\"../pages/GoogleMaps\"));\n\n//platform\nconst ModifyPassword = React.lazy(() =>\n  import(\"../pages/platform/ModifyPassword\")\n);\n\nconst PresetMessageHome = React.lazy(() =>\n  import(\"../pages/platform/preset_messages/index\")\n);\n\n//offline cs\nconst CplCaseHome = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseHome\")\n);\nconst CplCaseForm = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseForm\")\n);\n\nconst CplCaseView = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseView\")\n);\n\nconst GovLetterHome = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterHome\")\n);\nconst PersonalVisitHome = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitHome\")\n);\nconst PersonalVisitForm = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitForm\")\n);\n\nconst GovLetterForm = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterForm\")\n);\n\n//service\n\nconst ServiceOverview = React.lazy(() =>\n  import(\"../pages/service/questions/overview\")\n);\nconst ServiceStatistics = React.lazy(() =>\n  import(\"../pages/service/statistics\")\n);\n\nconst QuestionsQueryHome = React.lazy(() =>\n  import(\"../pages/service/questions/query/QueryHome\")\n);\n\nconst AllocateListPage = React.lazy(() => import(\"../pages/service/allocate\"));\nconst QuesionsListPage = React.lazy(() => import(\"../pages/service/questions\"));\nconst SingleQuestionPage = React.lazy(() =>\n  import(\"../pages/service/questions/view\")\n);\n\nconst TestPage = React.lazy(() =>\n  import(\"../pages/service/questions/TestPage\")\n);\n\nconst BatchListPage = React.lazy(() => import(\"../pages/service/batch\"));\nconst BatchTaskView = React.lazy(() =>\n  import(\"../pages/service/batch/BatchTaskView\")\n);\n\n//vip\nconst WhaleUserHome = React.lazy(() =>\n  import(\"../pages/vip/whale_users/WhaleUserHome\")\n);\nconst VipOfferHome = React.lazy(() => import(\"../pages/vip/offers/index\"));\nconst VipOfferForm = React.lazy(() => import(\"../pages/vip/offers/form\"));\nconst VipOrdersHome = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersHome\")\n);\nconst VipOrdersForm = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersForm\")\n);\n\n//Games\nconst GamesHome = React.lazy(() => import(\"../pages/games\"));\nconst GamesEditForm = React.lazy(() => import(\"../pages/games/form\"));\nconst ServerHome = React.lazy(() => import(\"../pages/games/ServerHome\"));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!isUserAuthenticated()) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/account/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      const loggedInUser = getLoggedInUser();\n      // check if route is restricted by role\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Redirect to={{ pathname: \"/\" }} />;\n      }\n\n      // authorised so return component\n      return <Component {...props} />;\n    }}\n  />\n);\n\n// root routes\nconst rootRoute = {\n  path: \"/\",\n  exact: true,\n  component: () => <Redirect to=\"/dashboard/service\" />,\n  route: PrivateRoute\n};\n\n// dashboards\nconst myDashboardRoutes = {\n  path: \"/mydashboard\",\n  name: \"我的\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/mydashboard/ecommerce\",\n      name: \"Ecommerce\",\n      badge: {\n        variant: \"success\",\n        text: \"3\"\n      },\n      component: EcommerceDashboard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/mydashboard/crm\",\n      name: \"CRM\",\n      component: CRMDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n//official dashboards\nconst dashboardRoutes = {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/dashboard/service\",\n      name: \"客服相關\",\n      component: AdminDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n// apps\nconst appRoutes = {\n  path: \"/apps\",\n  name: \"Apps\",\n  icon: \"dripicons-view-apps\",\n  children: [\n    {\n      path: \"/apps/calendar\",\n      name: \"Calendar\",\n      component: CalendarApp,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/projects\",\n      name: \"Projects\",\n      children: [\n        {\n          path: \"/apps/projects/list\",\n          name: \"List\",\n          component: Projects,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/projects/detail\",\n          name: \"Detail\",\n          component: ProjectDetail,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/ecommerce\",\n      name: \"eCommerce\",\n      children: [\n        {\n          path: \"/apps/ecommerce/products\",\n          name: \"Products\",\n          component: EcommerceProducts,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/details\",\n          name: \"Product Details\",\n          component: ProductDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/orders\",\n          name: \"Orders\",\n          component: Orders,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/order/details\",\n          name: \"Order Details\",\n          component: OrderDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/customers\",\n          name: \"Customers\",\n          component: Customers,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/shopping-cart\",\n          name: \"Shopping Cart\",\n          component: Cart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/checkout\",\n          name: \"Checkout\",\n          component: Checkout,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/sellers\",\n          name: \"Sellers\",\n          component: Sellers,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/kanban\",\n      name: \"Kanban\",\n      component: Kanban,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/email\",\n      name: \"Email\",\n      children: [\n        {\n          path: \"/apps/email/inbox\",\n          name: \"Inbox\",\n          component: Inbox,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/email/details\",\n          name: \"Email Details\",\n          component: EmailDetail,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n\n// pages\nconst pageRoutes = {\n  path: \"/pages\",\n  name: \"Pages\",\n  icon: \"dripicons-copy\",\n  children: [\n    {\n      path: \"/pages/starter\",\n      name: \"Starter\",\n      component: Starter,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/profile\",\n      name: \"Profile\",\n      component: Profile,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/invoice\",\n      name: \"Invoice\",\n      component: Invoice,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/faq\",\n      name: \"FAQ\",\n      component: FAQ,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/pricing\",\n      name: \"Pricing\",\n      component: Pricing,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-403\",\n      name: \"Error - 403\",\n      component: ErrorForbidden,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-404\",\n      name: \"Error - 404\",\n      component: ErrorPageNotFound,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-500\",\n      name: \"Error - 500\",\n      component: ServerError,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// auth\nconst authRoutes = {\n  path: \"/account\",\n  name: \"Auth\",\n  children: [\n    {\n      path: \"/account/login\",\n      name: \"Login\",\n      component: Login,\n      route: Route\n    },\n    {\n      path: \"/account/logout\",\n      name: \"Logout\",\n      component: Logout,\n      route: Route\n    },\n    {\n      path: \"/account/register\",\n      name: \"Register\",\n      component: Register,\n      route: Route\n    },\n    {\n      path: \"/account/confirm\",\n      name: \"Confirm\",\n      component: Confirm,\n      route: Route\n    },\n    {\n      path: \"/account/forget-password\",\n      name: \"Forget Password\",\n      component: ForgetPassword,\n      route: Route\n    }\n  ]\n};\n\n// ui\nconst uiRoutes = {\n  path: \"/ui\",\n  name: \"UI Kit\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/ui/buttons\",\n      name: \"Buttons\",\n      component: Buttons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/cards\",\n      name: \"Cards\",\n      component: Cards,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/general\",\n      name: \"General\",\n      component: General,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/grid\",\n      name: \"Grid\",\n      component: Grid,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/icons\",\n      name: \"Icons\",\n      component: Icons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/modals\",\n      name: \"Modals\",\n      component: Modals,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/notifications\",\n      name: \"Notifications\",\n      component: Notifications,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/spinners\",\n      name: \"Spinners\",\n      component: Spinners,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/tabs\",\n      name: \"Tabs\",\n      component: Tabs,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/typography\",\n      name: \"Typography\",\n      component: Typography,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/widgets\",\n      name: \"Widgets\",\n      component: Widgets,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// forms\nconst formsRoutes = {\n  path: \"/forms\",\n  name: \"Forms\",\n  icon: \"dripicons-document\",\n  children: [\n    {\n      path: \"/forms/basic\",\n      name: \"Basic Elements\",\n      component: BasicForms,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/advanced\",\n      name: \"Form Advanced\",\n      component: FormAdvanced,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/validation\",\n      name: \"Form validation\",\n      component: FormValidation,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/wizard\",\n      name: \"Form Wizard\",\n      component: FormWizard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/upload\",\n      name: \"File Upload\",\n      component: FileUpload,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/editors\",\n      name: \"Editors\",\n      component: Editors,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// other features\nconst featuresRoutes = {\n  path: \"/features\",\n  name: \"Features\",\n  icon: \"dripicons-view-list-large\",\n  children: [\n    {\n      path: \"/features/charts\",\n      name: \"Charts\",\n      children: [\n        {\n          path: \"/features/charts/apex\",\n          name: \"Apex\",\n          component: ApexChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/brite\",\n          name: \"Brite\",\n          component: BriteChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/chartjs\",\n          name: \"Chartjs\",\n          component: ChartJs,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/tables\",\n      name: \"Tables\",\n      children: [\n        {\n          path: \"/features/tables/basic\",\n          name: \"Basic\",\n          component: BasicTables,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/tables/advanced\",\n          name: \"Advanced\",\n          component: AdvancedTables,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/tables/testtable\",\n          name: \"測試表格\",\n          component: TestTable,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/googlemaps\",\n      name: \"Google Maps\",\n      component: GoogleMaps,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst platformRoutesSub = {\n  path: \"/platform\",\n  name: \"Platform\",\n  children: [\n    {\n      path: \"/platform/modify_password\",\n      name: \"修改密碼\",\n      component: ModifyPassword,\n      route: PrivateRoute\n    },\n    {\n      path: \"/platform/preset_messages\",\n      name: \"自訂快速回覆\",\n      component: PresetMessageHome,\n      route: PrivateRoute\n    }\n  ]\n};\n// online cs\n\nconst serviceRoutesSub = {\n  path: \"/service\",\n  name: \"Service\",\n  children: [\n    {\n      path: \"/service/view/:question_id\",\n      name: \"客服案件檢視\",\n      component: SingleQuestionPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/batch_handler/:record_id\",\n      name: \"批次處理-項目檢視\",\n      component: BatchTaskView,\n      route: PrivateRoute\n    }\n  ]\n};\nconst serviceRoutes = {\n  path: \"/service\",\n  name: \"客服\",\n  icon: \" dripicons-device-desktop\",\n  children: [\n    {\n      exact: true,\n      path: \"/service/overview\",\n      name: \"總覽\",\n      component: ServiceOverview,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/questions/todo\",\n      name: \"待處理案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/get_list\",\n      name: \"等待中案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/closed\",\n      name: \"近期結案案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/hidden\",\n      name: \"隱藏案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/favorite\",\n      name: \"我收藏的案件\",\n      icon: \"dripicons-star\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/allocate/list\",\n      name: \"派單系統- 案件列表\",\n      component: AllocateListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/statistics\",\n      name: \"件數統計\",\n      component: ServiceStatistics,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/questions/query\",\n      name: \"案件查詢\",\n      icon: \"dripicons-search\",\n      component: QuestionsQueryHome,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/batch_list\",\n      name: \"批次處理\",\n      icon: \"dripicons-basket\",\n      component: BatchListPage,\n      route: PrivateRoute\n    }\n  ]\n};\n// offline cs\nconst offlineRoutes = {\n  path: \"/offline\",\n  name: \"線下客服區\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/offline/cpl_case/home\",\n      name: \"消保\",\n      component: CplCaseHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/home\",\n      name: \"公函\",\n      component: GovLetterHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/home\",\n      name: \"親訪\",\n      component: PersonalVisitHome,\n      route: PrivateRoute\n    }\n  ]\n};\nconst offlineRoutesSub = {\n  path: \"/offline\",\n  name: \"offlineCS\",\n  children: [\n    {\n      path: \"/offline/personal_visit/create\",\n      name: \"新增親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/edit/:record_id\",\n      name: \"編輯親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/create\",\n      name: \"新增公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/edit/:record_id\",\n      name: \"編輯公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/create\",\n      name: \"新增消保紀錄\",\n      component: CplCaseForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/edit/:record_id\",\n      name: \"編輯消保紀錄\",\n      component: CplCaseForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/view/:record_id\",\n      name: \"檢視消保紀錄\",\n      component: CplCaseView,\n      route: PrivateRoute\n    },\n    {\n      path: \"/test\",\n      name: \"測試\",\n      component: TestPage,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// VIP\nconst vipRoutes = {\n  path: \"/vip\",\n  name: \"VIP\",\n  icon: \"dripicons-trophy\",\n  children: [\n    {\n      path: \"/vip/whale_users\",\n      name: \"鯨魚用戶\",\n      component: WhaleUserHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/wire_report/list\",\n      name: \"VIP 訂單\",\n      component: VipOrdersHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/offers\",\n      name: \"VIP方案\",\n      children: [\n        {\n          path: \"/vip/offers/offer_list\",\n          name: \"方案列表\",\n          component: VipOfferHome,\n          route: PrivateRoute\n        },\n        {\n          path: \"/vip/offers/add_offer\",\n          name: \"方案明細\",\n          component: VipOfferForm,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n//games\n\nconst gamesRoutes = {\n  path: \"/games\",\n  name: \"遊戲管理\",\n  icon: \"dripicons-archive\",\n  children: [\n    {\n      path: \"/games/home\",\n      name: \"遊戲設定\",\n      component: GamesHome,\n      route: PrivateRoute,\n      exact: true\n    },\n    {\n      path: \"/games/create\",\n      name: \"新增遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/games/servers\",\n      name: \"伺服器設定\",\n      component: ServerHome,\n      route: PrivateRoute,\n      exact: true\n    }\n  ]\n};\n\n// online cs\n\nconst gameRoutesSub = {\n  path: \"/games\",\n  name: \"games\",\n  children: [\n    {\n      path: \"/games/edit/:game_id\",\n      name: \"編輯遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst vipRoutesSub = {\n  path: \"/vip\",\n  name: \"VIP\",\n  children: [\n    {\n      path: \"/vip/wire_report/edit/:report_id\",\n      name: \"編輯vip訂單\",\n      component: VipOrdersForm,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n  let flatRoutes = [];\n\n  routes = routes || [];\n  routes.forEach(item => {\n    flatRoutes.push(item);\n\n    if (typeof item.children !== \"undefined\") {\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n    }\n  });\n  return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n  rootRoute,\n  dashboardRoutes,\n  appRoutes,\n  authRoutes,\n  pageRoutes,\n  uiRoutes,\n  formsRoutes,\n  featuresRoutes,\n  platformRoutesSub,\n  offlineRoutes,\n  offlineRoutesSub,\n  myDashboardRoutes,\n  serviceRoutes,\n  serviceRoutesSub,\n  vipRoutes,\n  gamesRoutes,\n  gameRoutesSub,\n  vipRoutesSub\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n  loggedInUser !== null && loggedInUser.uid === 112\n    ? [\n        dashboardRoutes,\n        appRoutes,\n        pageRoutes,\n        uiRoutes,\n        formsRoutes,\n        featuresRoutes,\n        offlineRoutes,\n        myDashboardRoutes,\n        serviceRoutes,\n        vipRoutes,\n        gamesRoutes\n      ]\n    : [dashboardRoutes, offlineRoutes, serviceRoutes, vipRoutes, gamesRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from \"react\";\nimport Routes from \"./routes/Routes\";\n\n// Themes\nimport \"./assets/scss/DefaultTheme.scss\";\n\n// For Dark import DarkTheme.scss\n// import \"./assets/scss/DarkTheme.scss\";\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\nconst INIT_STATE = {\n  updated: null,\n  loading: true,\n  error: \"\",\n  preset_messages: [],\n  updateOKMessage: null\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = {\n  user?: {} | null,\n  loading?: boolean,\n  +value?: boolean,\n  preset_messages?: [] | null,\n  updateOKMessage?: string\n};\n\n// {\n//   \"msg\": \"編輯成功\",\n//   \"affectedId\": \"3\",\n//   \"updField\": {\n//       \"rank\": \"1\",\n//       \"message\": \"first message UPDATED 1223\"\n//   }\n// }\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n  switch (action.type) {\n    case UPDATE_PASSWORD:\n    case GET_PRESET_MESSAGE:\n      return { ...state, loading: true };\n    case CLEAR_MESSAGE:\n      return { ...state, updateOKMessage: null };\n    case UPDATE_PASSWORD_SUCCESS:\n      return { ...state, updated: true, loading: false, error: null };\n    case EDIT_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages:\n          action.payload.action === \"add\"\n            ? [\n                ...state.preset_messages,\n                { id: action.payload.affectedId, ...action.payload.updField }\n              ]\n            : state.preset_messages.map(item =>\n                item.id.toString() === action.payload.affectedId\n                  ? { ...item, ...action.payload.updField }\n                  : item\n              ),\n        loading: false,\n        error: null\n      };\n\n    case DELETE_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages: state.preset_messages.filter(\n          item => item.id.toString() !== action.payload.deleted_id\n        ),\n        loading: false,\n        error: null\n      };\n    case UPDATE_PASSWORD_FAILED:\n    case GET_PRESET_MESSAGE_FAILED:\n    case EDIT_PRESET_MESSAGE_FAILED:\n    case DELETE_PRESET_MESSAGE_FAILED:\n      return { ...state, error: action.payload, loading: false };\n\n    case GET_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        preset_messages: action.payload,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  records: [],\r\n  loading: true,\r\n  affectedId: 0,\r\n  error: {},\r\n  currentRecord: {}\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n  switch (action.type) {\r\n    case GET_GOV_DATA:\r\n      return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n    case GET_GOV_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        records: action.payload.list,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_GOV_DATA_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_RECORD:\r\n    case EDIT_CPL_REPLY:\r\n    case DELETE_CPL_REPLY:\r\n    case DELETE_CPL_MEDIATION:\r\n    case MOVE_CPL:\r\n    case DELETE_CPL:\r\n    case EDIT_CPL_MEDIATION:\r\n    case EDIT_CPL_REF:\r\n    case DELETE_CPL_REF:\r\n    case ADD_CPL_ATTACHMENT:\r\n    case DELETE_CPL_ATTACHMENT:\r\n      return { ...state, loading: true };\r\n    case MOVE_CPL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          ...action.payload.updField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_RECORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies: state.currentRecord.replies.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations: state.currentRecord.mediations.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: state.currentRecord.attachments.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.mediations, action.payload.mediation]\r\n              : [\r\n                  ...state.currentRecord.mediations.filter(\r\n                    re => re.id !== action.payload.mediation.id\r\n                  ),\r\n                  action.payload.mediation\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ADD_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: action.payload.attachments\r\n        },\r\n\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: action.payload.refs,\r\n          ref_case_list: action.payload.ref_case_list\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case DELETE_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: state.currentRecord.refs.filter(\r\n            re => re.ref_id.toString() !== action.payload.deleted_id.toString()\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.replies, action.payload.reply]\r\n              : [\r\n                  ...state.currentRecord.replies.filter(\r\n                    re => re.id !== action.payload.reply.id\r\n                  ),\r\n                  action.payload.reply\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case EDIT_RECORD_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_CPL_REPLY_FAILED:\r\n    case DELETE_CPL_REPLY_FAILED:\r\n    case EDIT_CPL_MEDIATION_FAILED:\r\n    case DELETE_CPL_MEDIATION_FAILED:\r\n    case EDIT_CPL_REF_FAILED:\r\n    case DELETE_CPL_REF_FAILED:\r\n    case ADD_CPL_ATTACHMENT_FAILED:\r\n    case DELETE_CPL_ATTACHMENT_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_CURRENT:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload.record,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_FAILED:\r\n    case MOVE_CPL_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  loading: true,\r\n  user_tasks: {}\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  user?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  user_tasks?: {} | null\r\n};\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return { ...state, loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false, error: null };\r\n    case GET_USERS_FAILED:\r\n    case GET_USER_TASKS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_USER_TASKS:\r\n      return { ...state };\r\n    case GET_USER_TASKS_SUCCESS:\r\n      //console.log(\"GET_USER_TASKS_SUCCESS action.payload\", action.payload);\r\n      return { ...state, user_tasks: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocation_quick_msg: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocation_quick_msg?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocation_quick_msg: action.payload.allocation_quick_msg,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  vip_orders_list: [],\r\n  vip_prods: [],\r\n  current_report: {},\r\n  loading: true,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  affectedRecord: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  vip_prods?: [] | null,\r\n  vip_orders_list?: [] | null,\r\n  current_report?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n    case GET_VIP_ORDERS:\r\n\r\n    case GET_VIP_PRODS_BY_GAMEID:\r\n    case EDIT_VIP_WIRE_REPORT:\r\n    case DELETE_VIP_WIRE_REPORT:\r\n      return { ...state, loading: true, error: null, errors: {} };\r\n\r\n    case GET_CURRENT_VIP_REPORT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        errors: {},\r\n        current_report: {}\r\n      };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        vip_orders_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_VIP_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_report: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_PRODS_BY_GAMEID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_prods: action.payload\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedRecord: action.payload.updatedField,\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: \"編輯成功!\"\r\n      };\r\n    case DELETE_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_orders_list: state.vip_orders_list.filter(\r\n          report => report.report_id !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_FAILED:\r\n    case DELETE_VIP_WIRE_REPORT_FAILED:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        errors: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n    case GET_VIP_ORDERS_FAILED:\r\n    case GET_CURRENT_VIP_REPORT_FAILED:\r\n    case GET_VIP_PRODS_BY_GAMEID_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null\r\n      };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\",\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: [],\r\n  csHandleAllocationData: [],\r\n  antsHandleAllocationData: [],\r\n  games_list: [],\r\n  user_history: [],\r\n  vip: null,\r\n  add_favor_ok: false,\r\n  tasks: []\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  add_favor_ok?: boolean,\r\n  tasks?: [] | null,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  games_list?: [] | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  user_history?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH:\r\n    case ADD_QUESTION_TO_BATCH:\r\n    case FAVORITE_QUESTION_ACTION:\r\n      return { ...state };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        loading:\r\n          Object.keys(action.payload).length === 1 &&\r\n          action.payload.status === \"1\"\r\n            ? false\r\n            : true,\r\n        error: null\r\n      };\r\n    case ADD_QUESTION_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: [action.payload.batch_info]\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.batch_info.question_id) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (action.payload.ids.indexOf(q.id) > -1) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: []\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === Number.parseInt(action.payload.removed_q_id)) {\r\n            return { ...q, is_batch: 0 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case FAVORITE_QUESTION_ACTION_SUCCESS:\r\n      //res.json({question_id:qId, is_favorite: action === \"add\" ? 1 : 0});\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.question_id) {\r\n            return { ...q, is_favorite: action.payload.is_favorite };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            is_favorite: action.payload.is_favorite\r\n          }\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: action.payload.updateQuestionData\r\n            ? [\r\n                ...state.current.replies,\r\n                { id: action.payload.id, ...action.payload.updatedField }\r\n              ]\r\n            : [\r\n                ...state.current.replies.map(reply =>\r\n                  reply.id !== action.payload.id\r\n                    ? reply\r\n                    : { ...reply, ...action.payload.updatedField }\r\n                )\r\n              ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user_history: action.payload.list,\r\n        vip: action.payload.vip\r\n      };\r\n    case GET_QUESTIONS_BY_USER_FAILED:\r\n    case GET_QUESTIONS_BY_USER:\r\n      return {\r\n        ...state,\r\n        user_history: []\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_CONFIG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        games_list: action.payload.games_list,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const {\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData\r\n      } = action.payload;\r\n      var tmpGameIds = [];\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n    case FAVORITE_QUESTION_ACTION_FAILED:\r\n    case ADD_QUESTION_TO_BATCH_FAILED:\r\n    case REMOVE_QUESTION_FROM_BATCH_FAILED:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  error: {},\r\n  question_type: {}\r\n};\r\n\r\ntype batchAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  affectedId?: number | null,\r\n  currentRecord?: {} | null,\r\n  question_type?: {} | null,\r\n  updateOKMessage?: string | null,\r\n  error?: {} | null\r\n};\r\n\r\nconst BatchTasks = (state: State = INIT_STATE, action: batchAction) => {\r\n  switch (action.type) {\r\n    case GET_BATCH_TASKS:\r\n    case EDIT_BATCH_TASK:\r\n    case DELETE_BATCH_TASK:\r\n    case GET_CURRENT_BATCH_TASK:\r\n    case REMOVE_BATCH_Q:\r\n    case REMOVE_Q_FROM_BATCH:\r\n    case BATCH_REPLY_ACTION:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...action.payload.task,\r\n          q_list: action.payload.q_list\r\n        },\r\n        question_type: action.payload.question_type\r\n      };\r\n    case CLEAR_BATCH_TASK_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case REMOVE_BATCH_Q_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: []\r\n        }\r\n      };\r\n    case REMOVE_Q_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: [\r\n            ...state.currentRecord.q_list.filter(\r\n              q =>\r\n                q.question_id !== Number.parseInt(action.payload.removed_q_id)\r\n            )\r\n          ]\r\n        }\r\n      };\r\n    case EDIT_BATCH_TASK_SUCCESS:\r\n      //console.log(\"action.payload.affectedRow\", action.payload.action);\r\n      return {\r\n        ...state,\r\n        list:\r\n          action.payload.action === \"add\"\r\n            ? [\r\n                ...state.list,\r\n                { id: action.payload.affectedId, ...action.payload.affectedRow }\r\n              ]\r\n            : state.list.map(task =>\r\n                task.id === action.payload.affectedId\r\n                  ? action.payload.affectedRow\r\n                  : task\r\n              ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    case BATCH_REPLY_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          status: action.payload.mode\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case GET_BATCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.batch_tasks,\r\n        games: action.payload.games\r\n      };\r\n    case BATCH_REPLY_ACTION_FAILED:\r\n    case GET_BATCH_TASKS_FAILED:\r\n    case EDIT_BATCH_TASK_FAILED:\r\n    case DELETE_BATCH_TASK_FAILED:\r\n    case GET_CURRENT_BATCH_TASK_FAILED:\r\n    case REMOVE_BATCH_Q_FAILED:\r\n    case REMOVE_Q_FROM_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case DELETE_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(\r\n          task => task.id !== Number.parseInt(action.payload.deleted_id)\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default BatchTasks;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nimport BatchTasks from \"./batch/reducers\";\n\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers,\n  BatchTasks\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  GET_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE\r\n} from \"./constants\";\r\nimport {\r\n  updatePasswordSuccess,\r\n  updatePasswordFailed,\r\n  getPresetMessageSuccess,\r\n  getPresetMessageFailed,\r\n  editPresetMessageSuccess,\r\n  editPresetMessageFailed,\r\n  deletePresetMessageSuccess,\r\n  deletePresetMessageFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/modify_password\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updatePasswordSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(updatePasswordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getPresetMessageData() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/preset_messages/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - record , update with id, or insert with no id\r\n */\r\nfunction* editPresetMessageData({ payload }) {\r\n  const record = payload;\r\n\r\n  const options = {\r\n    method: record.id ? \"PUT\" : \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${record.id ? record.id : \"\"}`,\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deletePresetMessageData({ payload }) {\r\n  const id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deletePresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deletePresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n  yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nexport function* watchgetPresetMessageData(): any {\r\n  yield takeEvery(GET_PRESET_MESSAGE, getPresetMessageData);\r\n}\r\nexport function* watchUpdatePresetMessageData(): any {\r\n  yield takeEvery(EDIT_PRESET_MESSAGE, editPresetMessageData);\r\n}\r\n\r\nexport function* watchDeletePresetMessageData(): any {\r\n  yield takeEvery(DELETE_PRESET_MESSAGE, deletePresetMessageData);\r\n}\r\nfunction* PlatformSaga(): any {\r\n  yield all([\r\n    fork(watchChangePassword),\r\n    fork(watchgetPresetMessageData),\r\n    fork(watchUpdatePresetMessageData),\r\n    fork(watchDeletePresetMessageData)\r\n  ]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_GOV_DATA,\r\n  EDIT_RECORD,\r\n  GET_CURRENT,\r\n  EDIT_CPL_REPLY,\r\n  DELETE_CPL,\r\n  MOVE_CPL,\r\n  EDIT_CPL_MEDIATION,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_MEDIATION,\r\n  EDIT_CPL_REF,\r\n  DELETE_CPL_REF,\r\n  ADD_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getOfflineCsDataSuccess,\r\n  getOfflineCsDataFailed,\r\n  editRecordSuccess,\r\n  editRecordFailed,\r\n  getCurrentRecordSuccess,\r\n  getCurrentRecordFailed,\r\n  editCplReplySuccess,\r\n  editCplReplyFailed,\r\n  deleteCplCaseSuccess,\r\n  deleteCplCaseFailed,\r\n  moveCplCaseSuccess,\r\n  moveCplCaseFailed,\r\n  editCplMediationSuccess,\r\n  editCplMediationFailed,\r\n  deleteCplCaseReplyFailed,\r\n  deleteCplCaseReplySuccess,\r\n  deleteCplMediationSuccess,\r\n  deleteCplMediationFailed,\r\n  editCplRefSuccess,\r\n  editCplRefFailed,\r\n  deleteCplRefSuccess,\r\n  deleteCplRefFailed,\r\n  addCplAttachmentFailed,\r\n  addCplAttachmentSuccess,\r\n  deleteCplAttachmentSuccess,\r\n  deleteCplAttachmentFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/${\r\n      type === \"govletter\" ? \"gov_list\" : type === \"pv\" ? \"pv_list\" : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOfflineCsDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 403:\r\n        message = error.response.data;\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOfflineCsDataFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log('editGovRecord *****', payload);\r\n  const { dataType, record } = payload;\r\n\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editRecordSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* moveCplRecord({ payload }) {\r\n  console.log(\"moveCplRecord *****\", payload);\r\n  const { id, record } = payload;\r\n  //record: { status, close_date }\r\n  const options = {\r\n    data: record,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/move_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(moveCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(moveCplCaseFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl reply\r\n */\r\nfunction* editCplReply({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplReplyFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplMediation({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplMediationFailed(message));\r\n  }\r\n}\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { dataType, record_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentRecordSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 400:\r\n        message = error.response.data.msg;\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplRefFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* addCplAttach({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/add`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addCplAttachmentFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deleteCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref/remove`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deleteCplRefFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCase({ payload: { id, history } }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    history.push(\"/offline/cpl_case/home\");\r\n    yield put(deleteCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseReply({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplCaseReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseReplyFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseAttachment({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplAttachmentFailed(message));\r\n  }\r\n}\r\nfunction* delCplMd({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplMediationFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n  yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n  yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nexport function* watchEditCplReply(): any {\r\n  yield takeEvery(EDIT_CPL_REPLY, editCplReply);\r\n}\r\nexport function* watchEditCplMediation(): any {\r\n  yield takeEvery(EDIT_CPL_MEDIATION, editCplMediation);\r\n}\r\n\r\nexport function* watchDeleteCpl(): any {\r\n  yield takeEvery(DELETE_CPL, delCplCase);\r\n}\r\n\r\nexport function* watchDeleteCplReply(): any {\r\n  yield takeEvery(DELETE_CPL_REPLY, delCplCaseReply);\r\n}\r\nexport function* watchDeleteCplMediation(): any {\r\n  yield takeEvery(DELETE_CPL_MEDIATION, delCplMd);\r\n}\r\n\r\nexport function* watchMoveCplStatus(): any {\r\n  yield takeEvery(MOVE_CPL, moveCplRecord);\r\n}\r\n\r\nexport function* watchEditCplRef(): any {\r\n  yield takeEvery(EDIT_CPL_REF, editCplRef);\r\n}\r\nexport function* watchDeleteCplRef(): any {\r\n  yield takeEvery(DELETE_CPL_REF, deleteCplRef);\r\n}\r\nexport function* watchAddCplAttach(): any {\r\n  yield takeEvery(ADD_CPL_ATTACHMENT, addCplAttach);\r\n}\r\n\r\nexport function* watchDelCplAttach(): any {\r\n  yield takeEvery(DELETE_CPL_ATTACHMENT, delCplCaseAttachment);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchEditRecord),\r\n    fork(watchGetCurrentRecordData),\r\n    fork(watchEditCplReply),\r\n    fork(watchDeleteCpl),\r\n    fork(watchMoveCplStatus),\r\n    fork(watchDeleteCplReply),\r\n    fork(watchEditCplMediation),\r\n    fork(watchDeleteCplMediation),\r\n    fork(watchEditCplRef),\r\n    fork(watchDeleteCplRef),\r\n    fork(watchAddCplAttach),\r\n    fork(watchDelCplAttach)\r\n  ]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_USERS, GET_USER_TASKS } from \"./constants\";\r\n\r\nimport {\r\n  getAdminUsersSuccess,\r\n  getAdminUsersFailed,\r\n  getUserTasksSuccess,\r\n  getUserTasksFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getAdminUsersByRole/${role}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAdminUsersSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get user tasks, like favourite, allocation tasks\r\n * @param {*} payload - uid\r\n */\r\nfunction* getUserTask() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getUserTasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getUserTasksSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nexport function* watchGetUserTasks(): any {\r\n  yield takeEvery(GET_USER_TASKS, getUserTask);\r\n}\r\nfunction* adminUsersSaga(): any {\r\n  yield all([fork(watchGetData), fork(watchGetUserTasks)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION,\r\n  GET_SERVICE_CONFIG,\r\n  GET_QUESTIONS_BY_USER,\r\n  FAVORITE_QUESTION_ACTION,\r\n  ADD_QUESTION_TO_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed,\r\n  getServiceConfigSuccess,\r\n  getQuestionsByUserSuccess,\r\n  getQuestionsByUserFailed,\r\n  favorQuestionFailed,\r\n  favorQuestionSuccess,\r\n  addQuestionToBatchSuccess,\r\n  addQuestionToBatchFailed,\r\n  removeQuestionFromBatchSuccess,\r\n  removeQuestionFromBatchFailed,\r\n  addMultipleQuestionsToBatchSuccess,\r\n  addMultipleQuestionsToBatchFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  //console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getQuestionsByUserData({ payload: question_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/list_by_user/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsByUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.msg;\r\n    }\r\n    yield put(getQuestionsByUserFailed(message));\r\n  }\r\n}\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add question to batch\r\n */\r\nfunction* addQuestionToBatch({ payload }) {\r\n  //const { question_id, batch_id } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/add_to_batch\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addQuestionToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(addQuestionToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * remove from batch //@route: DELETE /api/batch/remove_from_batch/:question_id\r\n */\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  //question_id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${payload}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQuestionFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(removeQuestionFromBatchFailed(message));\r\n  }\r\n}\r\n\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or remove question type\r\n */\r\nfunction* updateQuestionFavorite({ payload }) {\r\n  //const { qId, action } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionFavorite`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(favorQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(favorQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceConfig() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/config`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceConfigSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add more than one question to a batch\r\n */\r\nfunction* addIdsToBatch({ payload: { batch_id, ids } }) {\r\n  const options = {\r\n    data: { batch_id, ids },\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_add_to_batch\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(addMultipleQuestionsToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addMultipleQuestionsToBatchFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nexport function* watchGetServiceConfig(): any {\r\n  yield takeEvery(GET_SERVICE_CONFIG, getServiceConfig);\r\n}\r\n\r\nexport function* watchGetRelaventUserData(): any {\r\n  yield takeEvery(GET_QUESTIONS_BY_USER, getQuestionsByUserData);\r\n}\r\nexport function* watchupdateQuestionFavorite(): any {\r\n  yield takeEvery(FAVORITE_QUESTION_ACTION, updateQuestionFavorite);\r\n}\r\n\r\nexport function* watchAddQuestionToBatch(): any {\r\n  yield takeEvery(ADD_QUESTION_TO_BATCH, addQuestionToBatch);\r\n}\r\n\r\nexport function* watchRemoveQuestionFromBatch(): any {\r\n  yield takeEvery(REMOVE_QUESTION_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\nexport function* watchAddMultiToBatch(): any {\r\n  yield takeEvery(ADD_MULTIPLE_QUESTIONS_TO_BATCH, addIdsToBatch);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData),\r\n    fork(watchGetServiceConfig),\r\n    fork(watchGetRelaventUserData),\r\n    fork(watchupdateQuestionFavorite),\r\n    fork(watchAddQuestionToBatch),\r\n    fork(watchRemoveQuestionFromBatch),\r\n    fork(watchAddMultiToBatch)\r\n  ]);\r\n}\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_ORDERS,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipOffersFailed,\r\n  getVipOffersSuccess,\r\n  getVipOrdersSuccess,\r\n  getVipOrdersFailed,\r\n  getCurrentVipReportSuccess,\r\n  getCurrentVipReportFailed,\r\n  getVipProductsByGameIdSuccess,\r\n  getVipProductsByGameIdFailed,\r\n  editVipWireReportSuccess,\r\n  editVipWireReportFailed,\r\n  deleteVipWireReportSuccess,\r\n  deleteVipWireReportFailed\r\n} from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipOrder() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/order_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOrdersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOrdersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { report_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/detail/${report_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipReportFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getProdsByGameId({ payload: gameId }) {\r\n  //console.log('getServersByGameId', gameId);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods_list/${gameId}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipProductsByGameIdSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getVipProductsByGameIdFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/wire_report/update\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPWReport({ payload: record_id }) {\r\n  console.log(\"delVIPWReport\", record_id);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/delete_wire_report/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nexport function* watchGetOrders(): any {\r\n  yield takeEvery(GET_VIP_ORDERS, getVipOrder);\r\n}\r\n\r\nexport function* watchGetCurrentReport(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_REPORT, getCurrentRecord);\r\n}\r\nexport function* watchGetProdsByGameId(): any {\r\n  yield takeEvery(GET_VIP_PRODS_BY_GAMEID, getProdsByGameId);\r\n}\r\n\r\nexport function* watchEditVipWireReport(): any {\r\n  yield takeEvery(EDIT_VIP_WIRE_REPORT, editRecord);\r\n}\r\n\r\nexport function* watchDeleteVipWireReport(): any {\r\n  yield takeEvery(DELETE_VIP_WIRE_REPORT, delVIPWReport);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([\r\n    fork(watchGetOffers),\r\n    fork(watchGetOrders),\r\n    fork(watchGetCurrentReport),\r\n    fork(watchGetProdsByGameId),\r\n    fork(watchEditVipWireReport),\r\n    fork(watchDeleteVipWireReport)\r\n  ]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","import axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  EDIT_BATCH_TASK,\r\n  DELETE_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_Q_FROM_BATCH,\r\n  BATCH_REPLY_ACTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getBatchTasksSuccess,\r\n  getBatchTasksFailed,\r\n  editBatchTaskSuccess,\r\n  editBatchTaskFailed,\r\n  deleteBatchTaskSuccess,\r\n  deleteBatchTaskFailed,\r\n  getCurrentBatchTaskSuccess,\r\n  getCurrentBatchTaskFailed,\r\n  removeBatchQSuccess,\r\n  removeBatchQFailed,\r\n  removeQFromBatchSuccess,\r\n  removeQFromBatchFailed,\r\n  batchReplyActionSuccess,\r\n  batchReplyActionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get batch tasks list\r\n * @param {*} payload - task list & game list\r\n */\r\nfunction* getBatchTasks() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getBatchTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getBatchTasksFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentBatch({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  //http://localhost:5000/api/batch/detail/80\r\n  const { record_id, history } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 403:\r\n        message = \"權限不符合操作\";\r\n        //錯誤\r\n        history.push(\"/pages/error-403\");\r\n        break;\r\n\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  const record = payload;\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/task\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(editBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* batchReply({ payload }) {\r\n  const replyData = payload;\r\n  const options = {\r\n    data: replyData,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_reply_json\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(batchReplyActionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(batchReplyActionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delBatchTask({ payload: { id, history } }) {\r\n  //console.log(\"delBatchTask\", payload);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/task/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeBatchQuestions({ payload }) {\r\n  const batch_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_batch_q/${batch_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeBatchQSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeBatchQFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  const question_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeQFromBatchFailed(message));\r\n  }\r\n}\r\nexport function* watchGetBatchTasksData(): any {\r\n  yield takeEvery(GET_BATCH_TASKS, getBatchTasks);\r\n}\r\n\r\nexport function* watchEditBatchRecord(): any {\r\n  yield takeEvery(EDIT_BATCH_TASK, editRecord);\r\n}\r\nexport function* watchDeleteBatchRecord(): any {\r\n  yield takeEvery(DELETE_BATCH_TASK, delBatchTask);\r\n}\r\n\r\nexport function* watchgetCurrentBatch(): any {\r\n  yield takeEvery(GET_CURRENT_BATCH_TASK, getCurrentBatch);\r\n}\r\n\r\nexport function* watchgetRemoveBatchQ(): any {\r\n  yield takeEvery(REMOVE_BATCH_Q, removeBatchQuestions);\r\n}\r\n\r\nexport function* watchgetRemoveQFromBatch(): any {\r\n  yield takeEvery(REMOVE_Q_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\n\r\nexport function* watchBatchReply(): any {\r\n  yield takeEvery(BATCH_REPLY_ACTION, batchReply);\r\n}\r\n\r\nfunction* batchTaskSaga(): any {\r\n  yield all([\r\n    fork(watchGetBatchTasksData),\r\n    fork(watchEditBatchRecord),\r\n    fork(watchDeleteBatchRecord),\r\n    fork(watchgetCurrentBatch),\r\n    fork(watchgetRemoveBatchQ),\r\n    fork(watchgetRemoveQFromBatch),\r\n    fork(watchBatchReply)\r\n  ]);\r\n}\r\n\r\nexport default batchTaskSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nimport batchTaskSaga from \"./batch/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga(),\n    batchTaskSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}