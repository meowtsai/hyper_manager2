{"version":3,"sources":["redux/service/constants.js","redux/offlinecs/constants.js","redux/vip/constants.js","redux/batch/constants.js","redux/vipoffers/constants.js","redux/serviceAllocate/constants.js","redux/service/actions.js","redux/platform/constants.js","redux/offlinecs/actions.js","redux/auth/constants.js","redux/games/constants.js","redux/layout/constants.js","redux/vip/actions.js","redux/adminUsers/constants.js","redux/batch/actions.js","redux/serviceAllocate/actions.js","redux/vipoffers/actions.js","redux/appMenu/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/actions.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/games/actions.js","redux/adminUsers/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/servers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/batch/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/batch/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_SERVICE_STATISTICS_BY_HOUR","GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS","GET_SERVICE_STATISTICS_BY_HOUR_FAILED","GET_SERVICE_CONFIG","GET_SERVICE_CONFIG_SUCCESS","GET_QUESTIONS_BY_USER","GET_QUESTIONS_BY_USER_SUCCESS","GET_QUESTIONS_BY_USER_FAILED","FAVORITE_QUESTION_ACTION","FAVORITE_QUESTION_ACTION_SUCCESS","FAVORITE_QUESTION_ACTION_FAILED","ADD_QUESTION_TO_BATCH","ADD_QUESTION_TO_BATCH_SUCCESS","ADD_QUESTION_TO_BATCH_FAILED","REMOVE_QUESTION_FROM_BATCH","REMOVE_QUESTION_FROM_BATCH_SUCCESS","REMOVE_QUESTION_FROM_BATCH_FAILED","ADD_MULTIPLE_QUESTIONS_TO_BATCH","ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS","ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","EDIT_CPL_REPLY","EDIT_CPL_REPLY_SUCCESS","EDIT_CPL_REPLY_FAILED","DELETE_CPL","DELETE_CPL_SUCCESS","DELETE_CPL_FAILED","MOVE_CPL","MOVE_CPL_SUCCESS","MOVE_CPL_FAILED","EDIT_CPL_MEDIATION","EDIT_CPL_MEDIATION_SUCCESS","EDIT_CPL_MEDIATION_FAILED","DELETE_CPL_REPLY","DELETE_CPL_REPLY_SUCCESS","DELETE_CPL_REPLY_FAILED","DELETE_CPL_MEDIATION","DELETE_CPL_MEDIATION_SUCCESS","DELETE_CPL_MEDIATION_FAILED","EDIT_CPL_REF","EDIT_CPL_REF_SUCCESS","EDIT_CPL_REF_FAILED","DELETE_CPL_REF","DELETE_CPL_REF_SUCCESS","DELETE_CPL_REF_FAILED","ADD_CPL_ATTACHMENT","ADD_CPL_ATTACHMENT_SUCCESS","ADD_CPL_ATTACHMENT_FAILED","DELETE_CPL_ATTACHMENT","DELETE_CPL_ATTACHMENT_SUCCESS","DELETE_CPL_ATTACHMENT_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","GET_CURRENT_WHALE_USER","GET_CURRENT_WHALE_USER_SUCCESS","GET_CURRENT_WHALE_USER_FAILED","UPDATE_VIP_INFO","UPDATE_VIP_INFO_SUCCESS","UPDATE_VIP_INFO_FAILED","GET_VIP_REQUESTS","GET_VIP_REQUESTS_SUCCESS","GET_VIP_REQUESTS_FAILED","GET_BATCH_TASKS","GET_BATCH_TASKS_SUCCESS","GET_BATCH_TASKS_FAILED","EDIT_BATCH_TASK","EDIT_BATCH_TASK_SUCCESS","EDIT_BATCH_TASK_FAILED","DELETE_BATCH_TASK","DELETE_BATCH_TASK_SUCCESS","DELETE_BATCH_TASK_FAILED","CLEAR_BATCH_TASK_MESSAGE","GET_CURRENT_BATCH_TASK","GET_CURRENT_BATCH_TASK_SUCCESS","GET_CURRENT_BATCH_TASK_FAILED","REMOVE_BATCH_Q","REMOVE_BATCH_Q_SUCCESS","REMOVE_BATCH_Q_FAILED","REMOVE_Q_FROM_BATCH","REMOVE_Q_FROM_BATCH_SUCCESS","REMOVE_Q_FROM_BATCH_FAILED","BATCH_REPLY_ACTION","BATCH_REPLY_ACTION_SUCCESS","BATCH_REPLY_ACTION_FAILED","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","GET_VIP_ORDERS","GET_VIP_ORDERS_SUCCESS","GET_VIP_ORDERS_FAILED","GET_CURRENT_VIP_REPORT","GET_CURRENT_VIP_REPORT_SUCCESS","GET_CURRENT_VIP_REPORT_FAILED","GET_VIP_PRODS_BY_GAMEID","GET_VIP_PRODS_BY_GAMEID_SUCCESS","GET_VIP_PRODS_BY_GAMEID_FAILED","EDIT_VIP_WIRE_REPORT","EDIT_VIP_WIRE_REPORT_SUCCESS","EDIT_VIP_WIRE_REPORT_FAILED","DELETE_VIP_WIRE_REPORT","DELETE_VIP_WIRE_REPORT_SUCCESS","DELETE_VIP_WIRE_REPORT_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getQuestionsByUser","getQuestionsByUserSuccess","getQuestionsByUserFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","getServiceStatisticsByHour","getServiceStatisticsByHourSuccess","getServiceStatisticsByHourFailed","clearMessage","getServiceConfig","getServiceConfigSuccess","favorQuestion","favorQuestionSuccess","favorQuestionFailed","addQuestionToBatch","addQuestionToBatchSuccess","addQuestionToBatchFailed","removeQuestionFromBatch","removeQuestionFromBatchSuccess","removeQuestionFromBatchFailed","addMultipleQuestionsToBatch","addMultipleQuestionsToBatchSuccess","addMultipleQuestionsToBatchFailed","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","sDate","action","batch_id","errors","ids","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_PRESET_MESSAGE","GET_PRESET_MESSAGE_SUCCESS","GET_PRESET_MESSAGE_FAILED","EDIT_PRESET_MESSAGE","EDIT_PRESET_MESSAGE_SUCCESS","EDIT_PRESET_MESSAGE_FAILED","DELETE_PRESET_MESSAGE","DELETE_PRESET_MESSAGE_SUCCESS","DELETE_PRESET_MESSAGE_FAILED","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","editCplReply","editCplReplySuccess","editCplReplyFailed","editCplMediation","editCplMediationSuccess","editCplMediationFailed","deleteCplCase","deleteCplCaseSuccess","deleteCplCaseFailed","deleteCplCaseReply","deleteCplCaseReplySuccess","deleteCplCaseReplyFailed","deleteCplMediation","deleteCplMediationSuccess","deleteCplMediationFailed","moveCplCase","moveCplCaseSuccess","moveCplCaseFailed","editCplRef","editCplRefSuccess","editCplRefFailed","deleteCplRef","deleteCplRefSuccess","deleteCplRefFailed","addCplAttachment","addCplAttachmentSuccess","addCplAttachmentFailed","deleteCplAttachment","deleteCplAttachmentSuccess","deleteCplAttachmentFailed","dataType","records","record","affectedId","record_id","history","id","case_id","ref_id","attachment_id","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","getCurrentWhaleUser","getCurrentWhaleUserSuccess","getCurrentWhaleUserFailed","updateVipInfo","updateVipInfoSuccess","updateVipInfoFailed","getVipRequests","getVipRequestsSuccess","getVipRequestsFailed","game_id","uid","command","role_id","fields","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_USER_TASKS","GET_USER_TASKS_SUCCESS","GET_USER_TASKS_FAILED","getBatchTasks","getBatchTasksSuccess","getBatchTasksFailed","editBatchTask","editBatchTaskSuccess","editBatchTaskFailed","deleteBatchTask","deleteBatchTaskSuccess","deleteBatchTaskFailed","clearBatchTaskMessage","getCurrentBatchTask","getCurrentBatchTaskSuccess","getCurrentBatchTaskFailed","removeBatchQ","removeBatchQSuccess","removeBatchQFailed","removeQFromBatch","removeQFromBatchSuccess","removeQFromBatchFailed","batchReplyAction","batchReplyActionSuccess","batchReplyActionFailed","replyData","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","qid","allocation_cause","getVipOffers","getVipOffersSuccess","getVipOffersFailed","getVipProductsByGameId","getVipProductsByGameIdSuccess","getVipProductsByGameIdFailed","getVipOrders","getVipOrdersSuccess","getVipOrdersFailed","getCurrentVipReport","getCurrentVipReportSuccess","getCurrentVipReportFailed","editVipWireReport","editVipWireReportSuccess","editVipWireReportFailed","deleteVipWireReport","deleteVipWireReportSuccess","deleteVipWireReportFailed","report_id","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","updatePassword","updatePasswordSuccess","updatePasswordFailed","getPresetMessage","getPresetMessageSuccess","getPresetMessageFailed","editPresetMessage","editPresetMessageSuccess","editPresetMessageFailed","deletePresetMessage","deletePresetMessageSuccess","deletePresetMessageFailed","clearPresetMessageMessage","account","password","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","fullname","email","passwordResetStatus","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","getUserTasks","getUserTasksSuccess","role","users","tasks","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","getServersByGameId","getServersSuccess","getServersFailed","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","ErrorForbidden","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","TestTable","GoogleMaps","ModifyPassword","PresetMessageHome","CplCaseHome","CplCaseForm","CplCaseView","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","ServiceStatisticsByHour","QuestionsQueryHome","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","BatchListPage","BatchTaskView","WhaleUserHome","WhaleUserDashboard","RequestReportHome","VipOfferHome","VipOfferForm","VipOrdersHome","VipOrdersForm","GamesHome","GamesEditForm","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","objectSpread","Auth","AppMenu","stat","Dashboard","updated","preset_messages","updateOKMessage","Platform","msg","updField","toString","filter","deleted_id","currentRecord","OfflineCS","list","config_status","replies","re","mediations","attachments","act","mediation","refs","ref_case_list","reply","Games","Servers","user_tasks","AdminUsers","allocation","allocation_logs","allocation_quick_msg","allocationStatus","cs_members","ServiceAllocate","newList","logs","log","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","updatedField","newLog","all_records","game_list","vip_list","currentWhaleUser","requestData","not_allowed","VIP","vip","s","request_data","newRecord","newReqData","vip_offer_list","vip_orders_list","vip_prods","current_report","affectedRecord","VipOffers","report","current","allgames","antsHandleData","qCountData","csHandleData","csHandleAllocationData","antsHandleAllocationData","statReportData","games_list","user_history","add_favor_ok","Service","tmpGameIds","keys","status","q_batch_info","batch_info","q","is_batch","Number","parseInt","removed_q_id","question","is_favorite","updateQuestionData","question_type","question_status","reduce","prev","curr","game_name","statReplyData","_action$payload","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","test_list","BatchTasks","task","q_list","affectedRow","mode","batch_tasks","games","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","getPresetMessageData","editPresetMessageData","deletePresetMessageData","watchChangePassword","watchgetPresetMessageData","watchUpdatePresetMessageData","watchDeletePresetMessageData","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","platform_saga_marked4","platform_saga_marked5","platform_saga_marked6","platform_saga_marked7","platform_saga_marked8","platform_saga_marked9","moveCplRecord","addCplAttach","delCplCase","delCplCaseReply","delCplCaseAttachment","delCplMd","watchGetCurrentRecordData","watchEditRecord","watchEditCplReply","watchEditCplMediation","watchDeleteCpl","watchDeleteCplReply","watchDeleteCplMediation","watchMoveCplStatus","watchEditCplRef","watchDeleteCplRef","watchAddCplAttach","watchDelCplAttach","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","_ref5","offlinecs_saga_marked5","_ref6","offlinecs_saga_marked6","_ref7","offlinecs_saga_marked7","_ref8","offlinecs_saga_marked8","_ref9","offlinecs_saga_marked9","_ref10","_ref10$payload","saga_marked10","_ref11","saga_marked11","_ref12","saga_marked12","_ref13","saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","getUserTask","watchGetUserTasks","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","adminUsers_saga_marked4","adminUsers_saga_marked5","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","serviceAllocate_saga_marked10","serviceAllocate_saga_marked11","serviceAllocate_saga_marked12","serviceAllocate_saga_marked13","getQuestionsData","getCurrentQuestionData","getQuestionsByUserData","getTestData","getServiceStat","getServiceStatByHour","updateType","updateStatus","updateQuestionFavorite","addIdsToBatch","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchStatDataByHour","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","watchGetServiceConfig","watchGetRelaventUserData","watchupdateQuestionFavorite","watchAddQuestionToBatch","watchRemoveQuestionFromBatch","watchAddMultiToBatch","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","service_saga_marked7","service_saga_marked8","service_saga_marked9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","service_saga_marked14","_ref14","service_saga_marked15","saga_marked16","_ref15","_ref15$payload","saga_marked17","saga_marked18","saga_marked19","saga_marked20","saga_marked21","saga_marked22","saga_marked23","saga_marked24","saga_marked25","saga_marked26","saga_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","_marked33","_context34","_marked34","_context35","_marked35","getVipReqData","getVIP","getSingleVip","putVIP","updateVIPInfo","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","watchGetCurrentWhaleUser","watchUpdateVIPInfo","watchGetVipReqData","vipSaga","vip_saga_marked","beginTime","endTime","vip_saga_marked2","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","_ref5$payload","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","vip_saga_marked12","vip_saga_marked13","vip_saga_marked14","vip_saga_marked15","vip_saga_marked16","vip_saga_marked17","getVipOrder","getProdsByGameId","delVIPWReport","watchGetOffers","watchGetOrders","watchGetCurrentReport","watchGetProdsByGameId","watchEditVipWireReport","watchDeleteVipWireReport","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","vipoffers_saga_marked4","vipoffers_saga_marked5","vipoffers_saga_marked6","vipoffers_saga_marked7","vipoffers_saga_marked8","vipoffers_saga_marked9","vipoffers_saga_marked10","vipoffers_saga_marked11","vipoffers_saga_marked12","vipoffers_saga_marked13","getCurrentBatch","batchReply","delBatchTask","removeBatchQuestions","watchGetBatchTasksData","watchEditBatchRecord","watchDeleteBatchRecord","watchgetCurrentBatch","watchgetRemoveBatchQ","watchgetRemoveQFromBatch","watchBatchReply","batchTaskSaga","batch_saga_marked","batch_saga_marked2","batch_saga_marked3","batch_saga_marked4","batch_saga_marked5","batch_saga_marked6","batch_saga_marked7","batch_saga_marked8","batch_saga_marked9","batch_saga_marked10","batch_saga_marked11","batch_saga_marked12","batch_saga_marked13","batch_saga_marked14","batch_saga_marked15","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e97c0489.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS = \"GET_SERVICE_STATISTICS\";\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = \"GET_SERVICE_STATISTICS_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_FAILED = \"GET_SERVICE_STATISTICS_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR = \"GET_SERVICE_STATISTICS_BY_HOUR\";\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS =\r\n  \"GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_FAILED =\r\n  \"GET_SERVICE_STATISTICS_BY_HOUR_FAILED\";\r\n\r\nexport const GET_SERVICE_CONFIG = \"GET_SERVICE_CONFIG\";\r\nexport const GET_SERVICE_CONFIG_SUCCESS = \"GET_SERVICE_CONFIG_SUCCESS\";\r\n\r\nexport const GET_QUESTIONS_BY_USER = \"GET_QUESTIONS_BY_USER\";\r\nexport const GET_QUESTIONS_BY_USER_SUCCESS = \"GET_QUESTIONS_BY_USER_SUCCESS\";\r\nexport const GET_QUESTIONS_BY_USER_FAILED = \"GET_QUESTIONS_BY_USER_FAILED\";\r\n\r\nexport const FAVORITE_QUESTION_ACTION = \"FAVORITE_QUESTION_ACTION\";\r\nexport const FAVORITE_QUESTION_ACTION_SUCCESS =\r\n  \"FAVORITE_QUESTION_ACTION_SUCCESS\";\r\nexport const FAVORITE_QUESTION_ACTION_FAILED =\r\n  \"FAVORITE_QUESTION_ACTION_FAILED\";\r\n\r\nexport const ADD_QUESTION_TO_BATCH = \"ADD_QUESTION_TO_BATCH\";\r\nexport const ADD_QUESTION_TO_BATCH_SUCCESS = \"ADD_QUESTION_TO_BATCH_SUCCESS\";\r\nexport const ADD_QUESTION_TO_BATCH_FAILED = \"ADD_QUESTION_TO_BATCH_FAILED\";\r\n\r\nexport const REMOVE_QUESTION_FROM_BATCH = \"REMOVE_QUESTION_FROM_BATCH\";\r\nexport const REMOVE_QUESTION_FROM_BATCH_SUCCESS =\r\n  \"REMOVE_QUESTION_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_QUESTION_FROM_BATCH_FAILED =\r\n  \"REMOVE_QUESTION_FROM_BATCH_FAILED\";\r\n\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH\";\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS\";\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED =\r\n  \"ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\";\r\n","export const GET_OCSDATA_SUCCESS = \"GET_OCSDATA_SUCCESS\";\r\nexport const GET_OCSDATA_FAILED = \"GET_OCSDATA_FAILED\";\r\nexport const ADD_OCSDATA_SUCCESS = \"ADD_OCSDATA_SUCCESS\";\r\nexport const ADD_OCSDATA_FAILED = \"ADD_OCSDATA_FAILED\";\r\nexport const LOADING_BEGIN = \"LOADING_BEGIN\";\r\nexport const LOADING_END = \"LOADING_END\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";\r\nexport const GET_CURRENT_RECORD = \"GET_CURRENT_RECORD\";\r\nexport const CLEAR_CURRENT_RECORD = \"CLEAR_CURRENT_RECORD\";\r\nexport const GET_CSMASTER_SUCCESS = \"GET_CSMASTER_SUCCESS\";\r\nexport const GET_CSMASTER_FAILED = \"GET_CSMASTER_FAILED\";\r\n\r\nexport const GET_GOV_DATA = \"GET_GOV_DATA\";\r\nexport const GET_GOV_DATA_SUCCESS = \"GET_GOV_DATA_SUCCESS\";\r\nexport const GET_GOV_DATA_FAILED = \"GET_GOV_DATA_FAILED\";\r\n\r\nexport const EDIT_RECORD = \"EDIT_RECORD\";\r\nexport const EDIT_RECORD_SUCCESS = \"EDIT_RECORD_SUCCESS\";\r\nexport const EDIT_RECORD_FAILED = \"EDIT_RECORD_FAILED\";\r\n\r\nexport const GET_CURRENT = \"GET_CURRENT\";\r\nexport const GET_CURRENT_SUCCESS = \"GET_CURRENT_SUCCESS\";\r\nexport const GET_CURRENT_FAILED = \"GET_CURRENT_FAILED\";\r\n\r\nexport const EDIT_CPL_REPLY = \"EDIT_CPL_REPLY\";\r\nexport const EDIT_CPL_REPLY_SUCCESS = \"EDIT_CPL_REPLY_SUCCESS\";\r\nexport const EDIT_CPL_REPLY_FAILED = \"EDIT_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL = \"DELETE_CPL\";\r\nexport const DELETE_CPL_SUCCESS = \"DELETE_CPL_SUCCESS\";\r\nexport const DELETE_CPL_FAILED = \"DELETE_CPL_FAILED\";\r\n\r\nexport const MOVE_CPL = \"MOVE_CPL\";\r\nexport const MOVE_CPL_SUCCESS = \"MOVE_CPL_SUCCESS\";\r\nexport const MOVE_CPL_FAILED = \"MOVE_CPL_FAILED\";\r\n\r\nexport const EDIT_CPL_MEDIATION = \"EDIT_CPL_MEDIATION\";\r\nexport const EDIT_CPL_MEDIATION_SUCCESS = \"EDIT_CPL_MEDIATION_SUCCESS\";\r\nexport const EDIT_CPL_MEDIATION_FAILED = \"EDIT_CPL_MEDIATION_FAILED\";\r\n\r\nexport const DELETE_CPL_REPLY = \"DELETE_CPL_REPLY\";\r\nexport const DELETE_CPL_REPLY_SUCCESS = \"DELETE_CPL_REPLY_SUCCESS\";\r\nexport const DELETE_CPL_REPLY_FAILED = \"DELETE_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL_MEDIATION = \"DELETE_CPL_MEDIATION\";\r\nexport const DELETE_CPL_MEDIATION_SUCCESS = \"DELETE_CPL_MEDIATION_SUCCESS\";\r\nexport const DELETE_CPL_MEDIATION_FAILED = \"DELETE_CPL_MEDIATION_FAILED\";\r\n\r\nexport const EDIT_CPL_REF = \"EDIT_CPL_REF\";\r\nexport const EDIT_CPL_REF_SUCCESS = \"EDIT_CPL_REF_SUCCESS\";\r\nexport const EDIT_CPL_REF_FAILED = \"EDIT_CPL_REF_FAILED\";\r\nexport const DELETE_CPL_REF = \"DELETE_CPL_REF\";\r\nexport const DELETE_CPL_REF_SUCCESS = \"DELETE_CPL_REF_SUCCESS\";\r\nexport const DELETE_CPL_REF_FAILED = \"DELETE_CPL_REF_FAILED\";\r\n\r\nexport const ADD_CPL_ATTACHMENT = \"ADD_CPL_ATTACHMENT\";\r\nexport const ADD_CPL_ATTACHMENT_SUCCESS = \"ADD_CPL_ATTACHMENT_SUCCESS\";\r\nexport const ADD_CPL_ATTACHMENT_FAILED = \"ADD_CPL_ATTACHMENT_FAILED\";\r\n\r\nexport const DELETE_CPL_ATTACHMENT = \"DELETE_CPL_ATTACHMENT\";\r\nexport const DELETE_CPL_ATTACHMENT_SUCCESS = \"DELETE_CPL_ATTACHMENT_SUCCESS\";\r\nexport const DELETE_CPL_ATTACHMENT_FAILED = \"DELETE_CPL_ATTACHMENT_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n\r\nexport const GET_CURRENT_WHALE_USER = \"GET_CURRENT_WHALE_USER\";\r\nexport const GET_CURRENT_WHALE_USER_SUCCESS = \"GET_CURRENT_WHALE_USER_SUCCESS\";\r\nexport const GET_CURRENT_WHALE_USER_FAILED = \"GET_CURRENT_WHALE_USER_FAILED\";\r\n\r\nexport const UPDATE_VIP_INFO = \"UPDATE_VIP_INFO\";\r\nexport const UPDATE_VIP_INFO_SUCCESS = \"UPDATE_VIP_INFO_SUCCESS\";\r\nexport const UPDATE_VIP_INFO_FAILED = \"UPDATE_VIP_INFO_FAILED\";\r\n\r\nexport const GET_VIP_REQUESTS = \"GET_VIP_REQUESTS\";\r\nexport const GET_VIP_REQUESTS_SUCCESS = \"GET_VIP_REQUESTS_SUCCESS\";\r\nexport const GET_VIP_REQUESTS_FAILED = \"GET_VIP_REQUESTS_FAILED\";\r\n","export const GET_BATCH_TASKS = \"GET_BATCH_TASKS\";\r\nexport const GET_BATCH_TASKS_SUCCESS = \"GET_BATCH_TASKS_SUCCESS\";\r\nexport const GET_BATCH_TASKS_FAILED = \"GET_BATCH_TASKS_FAILED\";\r\n\r\nexport const EDIT_BATCH_TASK = \"EDIT_BATCH_TASK\";\r\nexport const EDIT_BATCH_TASK_SUCCESS = \"EDIT_BATCH_TASK_SUCCESS\";\r\nexport const EDIT_BATCH_TASK_FAILED = \"EDIT_BATCH_TASK_FAILED\";\r\nexport const DELETE_BATCH_TASK = \"DELETE_BATCH_TASK\";\r\nexport const DELETE_BATCH_TASK_SUCCESS = \"DELETE_BATCH_TASK_SUCCESS\";\r\nexport const DELETE_BATCH_TASK_FAILED = \"DELETE_BATCH_TASK_FAILED\";\r\n\r\nexport const CLEAR_BATCH_TASK_MESSAGE = \"CLEAR_BATCH_TASK_MESSAGE\";\r\n\r\nexport const GET_CURRENT_BATCH_TASK = \"GET_CURRENT_BATCH_TASK\";\r\nexport const GET_CURRENT_BATCH_TASK_SUCCESS = \"GET_CURRENT_BATCH_TASK_SUCCESS\";\r\nexport const GET_CURRENT_BATCH_TASK_FAILED = \"GET_CURRENT_BATCH_TASK_FAILED\";\r\n\r\nexport const REMOVE_BATCH_Q = \"REMOVE_BATCH_Q\";\r\nexport const REMOVE_BATCH_Q_SUCCESS = \"REMOVE_BATCH_Q_SUCCESS\";\r\nexport const REMOVE_BATCH_Q_FAILED = \"REMOVE_BATCH_Q_FAILED\";\r\nexport const REMOVE_Q_FROM_BATCH = \"REMOVE_Q_FROM_BATCH\";\r\nexport const REMOVE_Q_FROM_BATCH_SUCCESS = \"REMOVE_Q_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_Q_FROM_BATCH_FAILED = \"REMOVE_Q_FROM_BATCH_FAILED\";\r\n\r\nexport const BATCH_REPLY_ACTION = \"BATCH_REPLY_ACTION\";\r\nexport const BATCH_REPLY_ACTION_SUCCESS = \"BATCH_REPLY_ACTION_SUCCESS\";\r\nexport const BATCH_REPLY_ACTION_FAILED = \"BATCH_REPLY_ACTION_FAILED\";\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n\r\nexport const GET_VIP_ORDERS = \"GET_VIP_ORDERS\";\r\nexport const GET_VIP_ORDERS_SUCCESS = \"GET_VIP_ORDERS_SUCCESS\";\r\nexport const GET_VIP_ORDERS_FAILED = \"GET_VIP_ORDERS_FAILED\";\r\n\r\nexport const GET_CURRENT_VIP_REPORT = \"GET_CURRENT_VIP_REPORT\";\r\nexport const GET_CURRENT_VIP_REPORT_SUCCESS = \"GET_CURRENT_VIP_REPORT_SUCCESS\";\r\nexport const GET_CURRENT_VIP_REPORT_FAILED = \"GET_CURRENT_VIP_REPORT_FAILED\";\r\n\r\nexport const GET_VIP_PRODS_BY_GAMEID = \"GET_VIP_PRODS_BY_GAMEID\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_SUCCESS =\r\n  \"GET_VIP_PRODS_BY_GAMEID_SUCCESS\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_FAILED = \"GET_VIP_PRODS_BY_GAMEID_FAILED\";\r\n\r\nexport const EDIT_VIP_WIRE_REPORT = \"EDIT_VIP_WIRE_REPORT\";\r\nexport const EDIT_VIP_WIRE_REPORT_SUCCESS = \"EDIT_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const EDIT_VIP_WIRE_REPORT_FAILED = \"EDIT_VIP_WIRE_REPORT_FAILED\";\r\n\r\nexport const DELETE_VIP_WIRE_REPORT = \"DELETE_VIP_WIRE_REPORT\";\r\nexport const DELETE_VIP_WIRE_REPORT_SUCCESS = \"DELETE_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const DELETE_VIP_WIRE_REPORT_FAILED = \"DELETE_VIP_WIRE_REPORT_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getQuestionsByUser = (question_id: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER,\r\n  payload: question_id\r\n});\r\n\r\nexport const getQuestionsByUserSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsByUserFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatisticsByHour = (sDate: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR,\r\n  payload: { sDate }\r\n});\r\n\r\nexport const getServiceStatisticsByHourSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsByHourFailed = (\r\n  error: string\r\n): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n\r\nexport const getServiceConfig = (): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG\r\n});\r\n\r\nexport const getServiceConfigSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const favorQuestion = (qId: number, action: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION,\r\n  payload: { qId, action }\r\n});\r\n\r\nexport const favorQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const favorQuestionFailed = (error: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addQuestionToBatch = (\r\n  question_id: Number,\r\n  batch_id: Number\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH,\r\n  payload: { question_id, batch_id }\r\n});\r\n\r\nexport const addQuestionToBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addQuestionToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQuestionFromBatch = (\r\n  question_id: Number\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQuestionFromBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQuestionFromBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//將多個問題一次加入某個批次\r\n\r\nexport const addMultipleQuestionsToBatch = (\r\n  batch_id: number,\r\n  ids: []\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  payload: { batch_id, ids }\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\nexport const UPDATE_PASSWORD_FAILED = \"UPDATE_PASSWORD_FAILED\";\n\nexport const GET_PRESET_MESSAGE = \"GET_PRESET_MESSAGE\";\nexport const GET_PRESET_MESSAGE_SUCCESS = \"GET_PRESET_MESSAGE_SUCCESS\";\nexport const GET_PRESET_MESSAGE_FAILED = \"GET_PRESET_MESSAGE_FAILED\";\nexport const EDIT_PRESET_MESSAGE = \"EDIT_PRESET_MESSAGE\";\nexport const EDIT_PRESET_MESSAGE_SUCCESS = \"EDIT_PRESET_MESSAGE_SUCCESS\";\nexport const EDIT_PRESET_MESSAGE_FAILED = \"EDIT_PRESET_MESSAGE_FAILED\";\nexport const DELETE_PRESET_MESSAGE = \"DELETE_PRESET_MESSAGE\";\nexport const DELETE_PRESET_MESSAGE_SUCCESS = \"DELETE_PRESET_MESSAGE_SUCCESS\";\nexport const DELETE_PRESET_MESSAGE_FAILED = \"DELETE_PRESET_MESSAGE_FAILED\";\n\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA,\r\n  payload: dataType\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_SUCCESS,\r\n  payload: records\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editRecord = (\r\n  dataType: string,\r\n  record: FormData\r\n): OfflineCsAction => ({\r\n  type: EDIT_RECORD,\r\n  payload: { dataType, record }\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_RECORD_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_RECORD_FAILED,\r\n  payload: errors\r\n});\r\nexport const getCurrentRecord = (\r\n  dataType: string,\r\n  record_id: int,\r\n  history: {}\r\n): OfflineCsAction => ({\r\n  type: GET_CURRENT,\r\n  payload: { dataType, record_id, history }\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n  type: GET_CURRENT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_CURRENT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editCplReply = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY,\r\n  payload: record\r\n});\r\n\r\nexport const editCplReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplReplyFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplMediation = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION,\r\n  payload: record\r\n});\r\n\r\nexport const editCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCase = (id: string, history: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCaseReply = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplCaseReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseReplyFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\nexport const deleteCplMediation = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const moveCplCase = (id: string, record: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL,\r\n  payload: { id, record }\r\n});\r\n\r\nexport const moveCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const moveCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: MOVE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const editCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const deleteCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//add_attachment_json\r\n\r\nexport const addCplAttachment = (record: FormData): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT,\r\n  payload: record\r\n});\r\n\r\nexport const addCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplAttachment = (\r\n  attachment_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT,\r\n  payload: attachment_id\r\n});\r\n\r\nexport const deleteCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentWhaleUser = (\r\n  game_id: string,\r\n  role_id: string,\r\n  history: {}\r\n): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER,\r\n  payload: { game_id, role_id, history }\r\n});\r\n\r\nexport const getCurrentWhaleUserSuccess = (record: {}): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentWhaleUserFailed = (error: string): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateVipInfo = (\r\n  game_id: string,\r\n  role_id: String,\r\n  fields: {}\r\n): VipAction => ({\r\n  type: UPDATE_VIP_INFO,\r\n  payload: { game_id, role_id, fields }\r\n});\r\n\r\nexport const updateVipInfoSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_INFO_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const updateVipInfoFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_INFO_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipRequests = (condition: {}): VipAction => ({\r\n  type: GET_VIP_REQUESTS,\r\n  payload: condition\r\n});\r\n\r\nexport const getVipRequestsSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_REQUESTS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipRequestsFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_REQUESTS_FAILED,\r\n  payload: error\r\n});\r\n","export const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILED = \"GET_USERS_FAILED\";\r\n\r\nexport const GET_USER_TASKS = \"GET_USER_TASKS\";\r\nexport const GET_USER_TASKS_SUCCESS = \"GET_USER_TASKS_SUCCESS\";\r\nexport const GET_USER_TASKS_FAILED = \"GET_USER_TASKS_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\ntype BatchTaskAction = { type: string, payload: {} | string };\r\n\r\nexport const getBatchTasks = (): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS\r\n});\r\n\r\nexport const getBatchTasksSuccess = (data: []): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getBatchTasksFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editBatchTask = (record: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK,\r\n  payload: record\r\n});\r\n\r\nexport const editBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editBatchTaskFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteBatchTask = (id: string, history: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteBatchTaskFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const clearBatchTaskMessage = (): BatchTaskAction => ({\r\n  type: CLEAR_BATCH_TASK_MESSAGE\r\n});\r\n\r\nexport const getCurrentBatchTask = (\r\n  record_id: int,\r\n  history: {}\r\n): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK,\r\n  payload: { record_id, history }\r\n});\r\n\r\nexport const getCurrentBatchTaskSuccess = (record: {}): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentBatchTaskFailed = (error: string): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const removeBatchQ = (batch_id: number): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q,\r\n  payload: batch_id\r\n});\r\n\r\nexport const removeBatchQSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeBatchQFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQFromBatch = (question_id: number): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQFromBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQFromBatchFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//回覆批次問題\r\n//data: `batch_id=${batch_id}&new_type=${new_type}&post_content=${post_content}&mode=${mode}`,\r\nexport const batchReplyAction = (replyData: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION,\r\n  payload: replyData\r\n});\r\n\r\nexport const batchReplyActionSuccess = (result: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const batchReplyActionFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_FAILED,\r\n  payload: errors\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipProductsByGameId = (game_id: string): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipProductsByGameIdSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipProductsByGameIdFailed = (\r\n  error: string\r\n): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipOrders = (): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS\r\n});\r\n\r\nexport const getVipOrdersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOrdersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentVipReport = (\r\n  report_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT,\r\n  payload: { report_id, history }\r\n});\r\n\r\nexport const getCurrentVipReportSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentVipReportFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editVipWireReport = (record: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT,\r\n  payload: { record }\r\n});\r\n\r\nexport const editVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteVipWireReport = (record_id: string): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (\n  account: string,\n  password: string\n): PlatformAction => ({\n  type: UPDATE_PASSWORD,\n  payload: { account, password }\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n  type: UPDATE_PASSWORD_SUCCESS\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n  type: UPDATE_PASSWORD_FAILED,\n  payload: error\n});\n\nexport const getPresetMessage = (): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE\n});\n\nexport const getPresetMessageSuccess = (records: []): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_SUCCESS,\n  payload: records\n});\n\nexport const getPresetMessageFailed = (error: string): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_FAILED,\n  payload: error\n});\n\nexport const editPresetMessage = (record: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE,\n  payload: record\n});\n\nexport const editPresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const editPresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_FAILED,\n  payload: errors\n});\n\nexport const deletePresetMessage = (id: string): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE,\n  payload: id\n});\n\nexport const deletePresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const deletePresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: errors\n});\n\nexport const clearPresetMessageMessage = (): ServiceAction => ({\n  type: CLEAR_MESSAGE\n});\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from \"jwt-decode\";\nimport { Cookies } from \"react-cookie\";\n\nimport axios from \"axios\";\n\nconst setAuthToken = token => {\n  //console.log(\"setAuthToken\", token);\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n  const user = getLoggedInUser();\n  if (!user) {\n    return false;\n  }\n  const decoded = jwtDecode(user.token);\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    console.warn(\"access token expired\");\n    return false;\n  } else {\n    setAuthToken(user.token);\n    return true;\n  }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n  const cookies = new Cookies();\n  const user = cookies.get(\"user\");\n  //console.log(\"getLoggedInUser\", user);\n  return user ? (typeof user == \"object\" ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n  type: GET_USERS,\r\n  payload: role\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getUserTasks = (): AdminUserAction => ({\r\n  type: GET_USER_TASKS\r\n});\r\n\r\nexport const getUserTasksSuccess = (tasks: {}): AdminUserAction => ({\r\n  type: GET_USER_TASKS_SUCCESS,\r\n  payload: tasks\r\n});\r\n\r\nexport const getUserTasksFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USER_TASKS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Route } from \"react-router-dom\";\n\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\nconst Register = React.lazy(() => import(\"../pages/auth/Register\"));\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\nconst Confirm = React.lazy(() => import(\"../pages/auth/Confirm\"));\n// dashboard\nconst EcommerceDashboard = React.lazy(() =>\n  import(\"../pages/dashboards/Ecommerce\")\n);\nconst CRMDashboard = React.lazy(() => import(\"../pages/dashboards/CRM\"));\n//*add new\nconst AdminDashboard = React.lazy(() => import(\"../pages/dashboards/Admin\"));\n// apps\nconst CalendarApp = React.lazy(() => import(\"../pages/apps/Calendar\"));\nconst Projects = React.lazy(() => import(\"../pages/apps/Projects\"));\nconst ProjectDetail = React.lazy(() => import(\"../pages/apps/ProjectDetail\"));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/Products\")\n);\nconst ProductDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/ProductDetails\")\n);\nconst Orders = React.lazy(() => import(\"../pages/apps/Ecommerce/Orders\"));\nconst OrderDetails = React.lazy(() =>\n  import(\"../pages/apps/Ecommerce/OrderDetails\")\n);\nconst Customers = React.lazy(() => import(\"../pages/apps/Ecommerce/Customers\"));\nconst Cart = React.lazy(() => import(\"../pages/apps/Ecommerce/Cart\"));\nconst Checkout = React.lazy(() => import(\"../pages/apps/Ecommerce/Checkout/\"));\nconst Sellers = React.lazy(() => import(\"../pages/apps/Ecommerce/Sellers\"));\n// - kanban\nconst Kanban = React.lazy(() => import(\"../pages/apps/Kanban/\"));\n\n// - email\nconst Inbox = React.lazy(() => import(\"../pages/apps/Email/Inbox\"));\nconst EmailDetail = React.lazy(() => import(\"../pages/apps/Email/Detail\"));\n\n// pages\nconst Starter = React.lazy(() => import(\"../pages/Starter\"));\nconst Profile = React.lazy(() => import(\"../pages/profile\"));\nconst ErrorPageNotFound = React.lazy(() =>\n  import(\"../pages/error/PageNotFound\")\n);\nconst ServerError = React.lazy(() => import(\"../pages/error/ServerError\"));\nconst ErrorForbidden = React.lazy(() =>\n  import(\"../pages/error/ErrorForbidden\")\n);\n\n// - other\nconst Invoice = React.lazy(() => import(\"../pages/other/Invoice\"));\nconst FAQ = React.lazy(() => import(\"../pages/other/FAQ\"));\nconst Pricing = React.lazy(() => import(\"../pages/other/Pricing\"));\n\n// uikit\nconst Cards = React.lazy(() => import(\"../pages/uikit/Cards\"));\nconst Buttons = React.lazy(() => import(\"../pages/uikit/Buttons\"));\nconst Modals = React.lazy(() => import(\"../pages/uikit/Modals\"));\nconst Tabs = React.lazy(() => import(\"../pages/uikit/Tabs\"));\nconst Notifications = React.lazy(() => import(\"../pages/uikit/Notifications\"));\nconst Grid = React.lazy(() => import(\"../pages/uikit/Grid\"));\nconst General = React.lazy(() => import(\"../pages/uikit/General\"));\nconst Typography = React.lazy(() => import(\"../pages/uikit/Typography\"));\nconst Icons = React.lazy(() => import(\"../pages/uikit/Icons\"));\nconst Spinners = React.lazy(() => import(\"../pages/uikit/Spinners\"));\nconst Widgets = React.lazy(() => import(\"../pages/uikit/Widgets\"));\n// forms\nconst BasicForms = React.lazy(() => import(\"../pages/forms/Basic\"));\nconst FormValidation = React.lazy(() => import(\"../pages/forms/Validation\"));\nconst FormAdvanced = React.lazy(() => import(\"../pages/forms/Advanced\"));\nconst FormWizard = React.lazy(() => import(\"../pages/forms/Wizard\"));\nconst FileUpload = React.lazy(() => import(\"../pages/forms/FileUpload\"));\nconst Editors = React.lazy(() => import(\"../pages/forms/Editors\"));\n// charts\nconst ApexChart = React.lazy(() => import(\"../pages/charts/Apex\"));\nconst BriteChart = React.lazy(() => import(\"../pages/charts/Brite\"));\nconst ChartJs = React.lazy(() => import(\"../pages/charts/ChartJs\"));\n// tables\nconst BasicTables = React.lazy(() => import(\"../pages/tables/Basic\"));\nconst AdvancedTables = React.lazy(() => import(\"../pages/tables/Advanced\"));\nconst TestTable = React.lazy(() => import(\"../pages/tables/TestTable\"));\n\n// maps\nconst GoogleMaps = React.lazy(() => import(\"../pages/GoogleMaps\"));\n\n//platform\nconst ModifyPassword = React.lazy(() =>\n  import(\"../pages/platform/ModifyPassword\")\n);\n\nconst PresetMessageHome = React.lazy(() =>\n  import(\"../pages/platform/preset_messages/index\")\n);\n\n//offline cs\nconst CplCaseHome = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseHome\")\n);\nconst CplCaseForm = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseForm\")\n);\n\nconst CplCaseView = React.lazy(() =>\n  import(\"../pages/offline/cpl_case/CplCaseView\")\n);\n\nconst GovLetterHome = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterHome\")\n);\nconst PersonalVisitHome = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitHome\")\n);\nconst PersonalVisitForm = React.lazy(() =>\n  import(\"../pages/offline/personal_visit/PersonalVisitForm\")\n);\n\nconst GovLetterForm = React.lazy(() =>\n  import(\"../pages/offline/gov_letter/GovLetterForm\")\n);\n\n//service\n\nconst ServiceOverview = React.lazy(() =>\n  import(\"../pages/service/questions/overview\")\n);\nconst ServiceStatistics = React.lazy(() =>\n  import(\"../pages/service/statistics\")\n);\n\nconst ServiceStatisticsByHour = React.lazy(() =>\n  import(\"../pages/service/statistics/ServiceStatisticsByHour\")\n);\n\nconst QuestionsQueryHome = React.lazy(() =>\n  import(\"../pages/service/questions/query/QueryHome\")\n);\n\nconst AllocateListPage = React.lazy(() => import(\"../pages/service/allocate\"));\nconst QuesionsListPage = React.lazy(() => import(\"../pages/service/questions\"));\nconst SingleQuestionPage = React.lazy(() =>\n  import(\"../pages/service/questions/view\")\n);\n\nconst TestPage = React.lazy(() =>\n  import(\"../pages/service/questions/TestPage\")\n);\n\nconst BatchListPage = React.lazy(() => import(\"../pages/service/batch\"));\nconst BatchTaskView = React.lazy(() =>\n  import(\"../pages/service/batch/BatchTaskView\")\n);\n\n//vip\nconst WhaleUserHome = React.lazy(() =>\n  import(\"../pages/vip/whale_users/WhaleUserHome\")\n);\n\n///vip/user_dashboard/${gameId}?\nconst WhaleUserDashboard = React.lazy(() =>\n  import(\"../pages/vip/whale_users/UserDashboard\")\n);\n\nconst RequestReportHome = React.lazy(() =>\n  import(\"../pages/vip/whale_users/RequestReportHome\")\n);\n\nconst VipOfferHome = React.lazy(() => import(\"../pages/vip/offers/index\"));\nconst VipOfferForm = React.lazy(() => import(\"../pages/vip/offers/form\"));\nconst VipOrdersHome = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersHome\")\n);\nconst VipOrdersForm = React.lazy(() =>\n  import(\"../pages/vip/offers/VipOrdersForm\")\n);\n\n//Games\nconst GamesHome = React.lazy(() => import(\"../pages/games\"));\nconst GamesEditForm = React.lazy(() => import(\"../pages/games/form\"));\nconst ServerHome = React.lazy(() => import(\"../pages/games/ServerHome\"));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      if (!isUserAuthenticated()) {\n        // not logged in so redirect to login page with the return url\n        return (\n          <Redirect\n            to={{ pathname: \"/account/login\", state: { from: props.location } }}\n          />\n        );\n      }\n\n      const loggedInUser = getLoggedInUser();\n      // check if route is restricted by role\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\n        // role not authorised so redirect to home page\n        return <Redirect to={{ pathname: \"/\" }} />;\n      }\n\n      // authorised so return component\n      return <Component {...props} />;\n    }}\n  />\n);\n\n// root routes\nconst rootRoute = {\n  path: \"/\",\n  exact: true,\n  component: () => <Redirect to=\"/dashboard/service\" />,\n  route: PrivateRoute\n};\n\n// dashboards\nconst myDashboardRoutes = {\n  path: \"/mydashboard\",\n  name: \"我的\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/mydashboard/ecommerce\",\n      name: \"Ecommerce\",\n      badge: {\n        variant: \"success\",\n        text: \"3\"\n      },\n      component: EcommerceDashboard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/mydashboard/crm\",\n      name: \"CRM\",\n      component: CRMDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n//official dashboards\nconst dashboardRoutes = {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  icon: \"dripicons-meter\",\n  header: \"Navigation\",\n  children: [\n    {\n      path: \"/dashboard/service\",\n      name: \"客服相關\",\n      component: AdminDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n// apps\nconst appRoutes = {\n  path: \"/apps\",\n  name: \"Apps\",\n  icon: \"dripicons-view-apps\",\n  children: [\n    {\n      path: \"/apps/calendar\",\n      name: \"Calendar\",\n      component: CalendarApp,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/projects\",\n      name: \"Projects\",\n      children: [\n        {\n          path: \"/apps/projects/list\",\n          name: \"List\",\n          component: Projects,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/projects/detail\",\n          name: \"Detail\",\n          component: ProjectDetail,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/ecommerce\",\n      name: \"eCommerce\",\n      children: [\n        {\n          path: \"/apps/ecommerce/products\",\n          name: \"Products\",\n          component: EcommerceProducts,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/details\",\n          name: \"Product Details\",\n          component: ProductDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/orders\",\n          name: \"Orders\",\n          component: Orders,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/order/details\",\n          name: \"Order Details\",\n          component: OrderDetails,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/customers\",\n          name: \"Customers\",\n          component: Customers,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/shopping-cart\",\n          name: \"Shopping Cart\",\n          component: Cart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/checkout\",\n          name: \"Checkout\",\n          component: Checkout,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/ecommerce/sellers\",\n          name: \"Sellers\",\n          component: Sellers,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/apps/kanban\",\n      name: \"Kanban\",\n      component: Kanban,\n      route: PrivateRoute\n    },\n    {\n      path: \"/apps/email\",\n      name: \"Email\",\n      children: [\n        {\n          path: \"/apps/email/inbox\",\n          name: \"Inbox\",\n          component: Inbox,\n          route: PrivateRoute\n        },\n        {\n          path: \"/apps/email/details\",\n          name: \"Email Details\",\n          component: EmailDetail,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n\n// pages\nconst pageRoutes = {\n  path: \"/pages\",\n  name: \"Pages\",\n  icon: \"dripicons-copy\",\n  children: [\n    {\n      path: \"/pages/starter\",\n      name: \"Starter\",\n      component: Starter,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/profile\",\n      name: \"Profile\",\n      component: Profile,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/invoice\",\n      name: \"Invoice\",\n      component: Invoice,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/faq\",\n      name: \"FAQ\",\n      component: FAQ,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/pricing\",\n      name: \"Pricing\",\n      component: Pricing,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-403\",\n      name: \"Error - 403\",\n      component: ErrorForbidden,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-404\",\n      name: \"Error - 404\",\n      component: ErrorPageNotFound,\n      route: PrivateRoute\n    },\n    {\n      path: \"/pages/error-500\",\n      name: \"Error - 500\",\n      component: ServerError,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// auth\nconst authRoutes = {\n  path: \"/account\",\n  name: \"Auth\",\n  children: [\n    {\n      path: \"/account/login\",\n      name: \"Login\",\n      component: Login,\n      route: Route\n    },\n    {\n      path: \"/account/logout\",\n      name: \"Logout\",\n      component: Logout,\n      route: Route\n    },\n    {\n      path: \"/account/register\",\n      name: \"Register\",\n      component: Register,\n      route: Route\n    },\n    {\n      path: \"/account/confirm\",\n      name: \"Confirm\",\n      component: Confirm,\n      route: Route\n    },\n    {\n      path: \"/account/forget-password\",\n      name: \"Forget Password\",\n      component: ForgetPassword,\n      route: Route\n    }\n  ]\n};\n\n// ui\nconst uiRoutes = {\n  path: \"/ui\",\n  name: \"UI Kit\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/ui/buttons\",\n      name: \"Buttons\",\n      component: Buttons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/cards\",\n      name: \"Cards\",\n      component: Cards,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/general\",\n      name: \"General\",\n      component: General,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/grid\",\n      name: \"Grid\",\n      component: Grid,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/icons\",\n      name: \"Icons\",\n      component: Icons,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/modals\",\n      name: \"Modals\",\n      component: Modals,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/notifications\",\n      name: \"Notifications\",\n      component: Notifications,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/spinners\",\n      name: \"Spinners\",\n      component: Spinners,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/tabs\",\n      name: \"Tabs\",\n      component: Tabs,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/typography\",\n      name: \"Typography\",\n      component: Typography,\n      route: PrivateRoute\n    },\n    {\n      path: \"/ui/widgets\",\n      name: \"Widgets\",\n      component: Widgets,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// forms\nconst formsRoutes = {\n  path: \"/forms\",\n  name: \"Forms\",\n  icon: \"dripicons-document\",\n  children: [\n    {\n      path: \"/forms/basic\",\n      name: \"Basic Elements\",\n      component: BasicForms,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/advanced\",\n      name: \"Form Advanced\",\n      component: FormAdvanced,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/validation\",\n      name: \"Form validation\",\n      component: FormValidation,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/wizard\",\n      name: \"Form Wizard\",\n      component: FormWizard,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/upload\",\n      name: \"File Upload\",\n      component: FileUpload,\n      route: PrivateRoute\n    },\n    {\n      path: \"/forms/editors\",\n      name: \"Editors\",\n      component: Editors,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// other features\nconst featuresRoutes = {\n  path: \"/features\",\n  name: \"Features\",\n  icon: \"dripicons-view-list-large\",\n  children: [\n    {\n      path: \"/features/charts\",\n      name: \"Charts\",\n      children: [\n        {\n          path: \"/features/charts/apex\",\n          name: \"Apex\",\n          component: ApexChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/brite\",\n          name: \"Brite\",\n          component: BriteChart,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/charts/chartjs\",\n          name: \"Chartjs\",\n          component: ChartJs,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/tables\",\n      name: \"Tables\",\n      children: [\n        {\n          path: \"/features/tables/basic\",\n          name: \"Basic\",\n          component: BasicTables,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/tables/advanced\",\n          name: \"Advanced\",\n          component: AdvancedTables,\n          route: PrivateRoute\n        },\n        {\n          path: \"/features/tables/testtable\",\n          name: \"測試表格\",\n          component: TestTable,\n          route: PrivateRoute\n        }\n      ]\n    },\n    {\n      path: \"/features/googlemaps\",\n      name: \"Google Maps\",\n      component: GoogleMaps,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst platformRoutesSub = {\n  path: \"/platform\",\n  name: \"Platform\",\n  children: [\n    {\n      path: \"/platform/modify_password\",\n      name: \"修改密碼\",\n      component: ModifyPassword,\n      route: PrivateRoute\n    },\n    {\n      path: \"/platform/preset_messages\",\n      name: \"自訂快速回覆\",\n      component: PresetMessageHome,\n      route: PrivateRoute\n    }\n  ]\n};\n// online cs\n\nconst serviceRoutesSub = {\n  path: \"/service\",\n  name: \"Service\",\n  children: [\n    {\n      path: \"/service/view/:question_id\",\n      name: \"客服案件檢視\",\n      component: SingleQuestionPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/batch_handler/:record_id\",\n      name: \"批次處理-項目檢視\",\n      component: BatchTaskView,\n      route: PrivateRoute\n    }\n  ]\n};\nconst serviceRoutes = {\n  path: \"/service\",\n  name: \"客服\",\n  icon: \" dripicons-device-desktop\",\n  children: [\n    {\n      exact: true,\n      path: \"/service/overview\",\n      name: \"總覽\",\n      component: ServiceOverview,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/questions/todo\",\n      name: \"待處理案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/get_list\",\n      name: \"等待中案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/closed\",\n      name: \"近期結案案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/hidden\",\n      name: \"隱藏案件\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      path: \"/service/questions/favorite\",\n      name: \"我收藏的案件\",\n      icon: \"dripicons-star\",\n      component: QuesionsListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/allocate/list\",\n      name: \"派單系統- 案件列表\",\n      component: AllocateListPage,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/statistics\",\n      name: \"件數統計\",\n      component: ServiceStatistics,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/pivot_tbl\",\n      name: \"時間別統計\",\n      component: ServiceStatisticsByHour,\n      route: PrivateRoute\n    },\n\n    {\n      exact: true,\n      path: \"/service/questions/query\",\n      name: \"案件查詢\",\n      icon: \"dripicons-search\",\n      component: QuestionsQueryHome,\n      route: PrivateRoute\n    },\n    {\n      exact: true,\n      path: \"/service/batch_list\",\n      name: \"批次處理\",\n      icon: \"dripicons-basket\",\n      component: BatchListPage,\n      route: PrivateRoute\n    }\n  ]\n};\n// offline cs\nconst offlineRoutes = {\n  path: \"/offline\",\n  name: \"線下客服區\",\n  icon: \"dripicons-briefcase\",\n  children: [\n    {\n      path: \"/offline/cpl_case/home\",\n      name: \"消保\",\n      component: CplCaseHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/home\",\n      name: \"公函\",\n      component: GovLetterHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/home\",\n      name: \"親訪\",\n      component: PersonalVisitHome,\n      route: PrivateRoute\n    }\n  ]\n};\nconst offlineRoutesSub = {\n  path: \"/offline\",\n  name: \"offlineCS\",\n  children: [\n    {\n      path: \"/offline/personal_visit/create\",\n      name: \"新增親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/personal_visit/edit/:record_id\",\n      name: \"編輯親訪紀錄\",\n      component: PersonalVisitForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/create\",\n      name: \"新增公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/gov_letter/edit/:record_id\",\n      name: \"編輯公函\",\n      component: GovLetterForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/create\",\n      name: \"新增消保紀錄\",\n      component: CplCaseForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/edit/:record_id\",\n      name: \"編輯消保紀錄\",\n      component: CplCaseForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/offline/cpl_case/view/:record_id\",\n      name: \"檢視消保紀錄\",\n      component: CplCaseView,\n      route: PrivateRoute\n    },\n    {\n      path: \"/test\",\n      name: \"測試\",\n      component: TestPage,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// VIP\nconst vipRoutes = {\n  path: \"/vip\",\n  name: \"VIP\",\n  icon: \"dripicons-trophy\",\n  children: [\n    {\n      path: \"/vip/whale_users\",\n      name: \"鯨魚用戶\",\n      component: WhaleUserHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/requests_report\",\n      name: \"鯨魚用戶服務紀錄\",\n      component: RequestReportHome,\n      route: PrivateRoute\n    },\n\n    {\n      path: \"/vip/wire_report/list\",\n      name: \"VIP 訂單\",\n      component: VipOrdersHome,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/offers\",\n      name: \"VIP方案\",\n      children: [\n        {\n          path: \"/vip/offers/offer_list\",\n          name: \"方案列表\",\n          component: VipOfferHome,\n          route: PrivateRoute\n        },\n        {\n          path: \"/vip/offers/add_offer\",\n          name: \"方案明細\",\n          component: VipOfferForm,\n          route: PrivateRoute\n        }\n      ]\n    }\n  ]\n};\n//games\n\nconst gamesRoutes = {\n  path: \"/games\",\n  name: \"遊戲管理\",\n  icon: \"dripicons-archive\",\n  children: [\n    {\n      path: \"/games/home\",\n      name: \"遊戲設定\",\n      component: GamesHome,\n      route: PrivateRoute,\n      exact: true\n    },\n    {\n      path: \"/games/create\",\n      name: \"新增遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/games/servers\",\n      name: \"伺服器設定\",\n      component: ServerHome,\n      route: PrivateRoute,\n      exact: true\n    }\n  ]\n};\n\n// online cs\n\nconst gameRoutesSub = {\n  path: \"/games\",\n  name: \"games\",\n  children: [\n    {\n      path: \"/games/edit/:game_id\",\n      name: \"編輯遊戲\",\n      component: GamesEditForm,\n      route: PrivateRoute\n    }\n  ]\n};\n\nconst vipRoutesSub = {\n  path: \"/vip\",\n  name: \"VIP\",\n  children: [\n    {\n      path: \"/vip/wire_report/edit/:report_id\",\n      name: \"編輯vip訂單\",\n      component: VipOrdersForm,\n      route: PrivateRoute\n    },\n    {\n      path: \"/vip/user_dashboard/:game_id\",\n      name: \"維護鯨魚用戶資料\",\n      component: WhaleUserDashboard,\n      route: PrivateRoute\n    }\n  ]\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n  let flatRoutes = [];\n\n  routes = routes || [];\n  routes.forEach(item => {\n    flatRoutes.push(item);\n\n    if (typeof item.children !== \"undefined\") {\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n    }\n  });\n  return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n  rootRoute,\n  dashboardRoutes,\n  appRoutes,\n  authRoutes,\n  pageRoutes,\n  uiRoutes,\n  formsRoutes,\n  featuresRoutes,\n  platformRoutesSub,\n  offlineRoutes,\n  offlineRoutesSub,\n  myDashboardRoutes,\n  serviceRoutes,\n  serviceRoutesSub,\n  vipRoutes,\n  gamesRoutes,\n  gameRoutesSub,\n  vipRoutesSub\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n  loggedInUser !== null && loggedInUser.uid === 112\n    ? [\n        dashboardRoutes,\n        appRoutes,\n        pageRoutes,\n        uiRoutes,\n        formsRoutes,\n        featuresRoutes,\n        offlineRoutes,\n        myDashboardRoutes,\n        serviceRoutes,\n        vipRoutes,\n        gamesRoutes\n      ]\n    : [dashboardRoutes, offlineRoutes, serviceRoutes, vipRoutes, gamesRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from \"react\";\nimport Routes from \"./routes/Routes\";\n\n// Themes\nimport \"./assets/scss/DefaultTheme.scss\";\n\n// For Dark import DarkTheme.scss\n// import \"./assets/scss/DarkTheme.scss\";\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\nconst INIT_STATE = {\n  updated: null,\n  loading: true,\n  error: \"\",\n  preset_messages: [],\n  updateOKMessage: null\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = {\n  user?: {} | null,\n  loading?: boolean,\n  +value?: boolean,\n  preset_messages?: [] | null,\n  updateOKMessage?: string\n};\n\n// {\n//   \"msg\": \"編輯成功\",\n//   \"affectedId\": \"3\",\n//   \"updField\": {\n//       \"rank\": \"1\",\n//       \"message\": \"first message UPDATED 1223\"\n//   }\n// }\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n  switch (action.type) {\n    case UPDATE_PASSWORD:\n    case GET_PRESET_MESSAGE:\n      return { ...state, loading: true };\n    case CLEAR_MESSAGE:\n      return { ...state, updateOKMessage: null };\n    case UPDATE_PASSWORD_SUCCESS:\n      return { ...state, updated: true, loading: false, error: null };\n    case EDIT_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages:\n          action.payload.action === \"add\"\n            ? [\n                ...state.preset_messages,\n                { id: action.payload.affectedId, ...action.payload.updField }\n              ]\n            : state.preset_messages.map(item =>\n                item.id.toString() === action.payload.affectedId\n                  ? { ...item, ...action.payload.updField }\n                  : item\n              ),\n        loading: false,\n        error: null\n      };\n\n    case DELETE_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages: state.preset_messages.filter(\n          item => item.id.toString() !== action.payload.deleted_id\n        ),\n        loading: false,\n        error: null\n      };\n    case UPDATE_PASSWORD_FAILED:\n    case GET_PRESET_MESSAGE_FAILED:\n    case EDIT_PRESET_MESSAGE_FAILED:\n    case DELETE_PRESET_MESSAGE_FAILED:\n      return { ...state, error: action.payload, loading: false };\n\n    case GET_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        preset_messages: action.payload,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  records: [],\r\n  loading: true,\r\n  affectedId: 0,\r\n  error: {},\r\n  currentRecord: {}\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n  switch (action.type) {\r\n    case GET_GOV_DATA:\r\n      return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n    case GET_GOV_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        records: action.payload.list,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_GOV_DATA_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_RECORD:\r\n    case EDIT_CPL_REPLY:\r\n    case DELETE_CPL_REPLY:\r\n    case DELETE_CPL_MEDIATION:\r\n    case MOVE_CPL:\r\n    case DELETE_CPL:\r\n    case EDIT_CPL_MEDIATION:\r\n    case EDIT_CPL_REF:\r\n    case DELETE_CPL_REF:\r\n    case ADD_CPL_ATTACHMENT:\r\n    case DELETE_CPL_ATTACHMENT:\r\n      return { ...state, loading: true };\r\n    case MOVE_CPL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          ...action.payload.updField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_RECORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies: state.currentRecord.replies.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations: state.currentRecord.mediations.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: state.currentRecord.attachments.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.mediations, action.payload.mediation]\r\n              : [\r\n                  ...state.currentRecord.mediations.filter(\r\n                    re => re.id !== action.payload.mediation.id\r\n                  ),\r\n                  action.payload.mediation\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ADD_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: action.payload.attachments\r\n        },\r\n\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: action.payload.refs,\r\n          ref_case_list: action.payload.ref_case_list\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case DELETE_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: state.currentRecord.refs.filter(\r\n            re => re.ref_id.toString() !== action.payload.deleted_id.toString()\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.replies, action.payload.reply]\r\n              : [\r\n                  ...state.currentRecord.replies.filter(\r\n                    re => re.id !== action.payload.reply.id\r\n                  ),\r\n                  action.payload.reply\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case EDIT_RECORD_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_CPL_REPLY_FAILED:\r\n    case DELETE_CPL_REPLY_FAILED:\r\n    case EDIT_CPL_MEDIATION_FAILED:\r\n    case DELETE_CPL_MEDIATION_FAILED:\r\n    case EDIT_CPL_REF_FAILED:\r\n    case DELETE_CPL_REF_FAILED:\r\n    case ADD_CPL_ATTACHMENT_FAILED:\r\n    case DELETE_CPL_ATTACHMENT_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_CURRENT:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload.record,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_FAILED:\r\n    case MOVE_CPL_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  loading: true,\r\n  user_tasks: {}\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  user?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  user_tasks?: {} | null\r\n};\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return { ...state, loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false, error: null };\r\n    case GET_USERS_FAILED:\r\n    case GET_USER_TASKS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_USER_TASKS:\r\n      return { ...state };\r\n    case GET_USER_TASKS_SUCCESS:\r\n      //console.log(\"GET_USER_TASKS_SUCCESS action.payload\", action.payload);\r\n      return { ...state, user_tasks: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocation_quick_msg: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocation_quick_msg?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocation_quick_msg: action.payload.allocation_quick_msg,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  currentWhaleUser: null,\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n\r\n    case UPDATE_VIP_INFO:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_REQUESTS:\r\n      return { ...state, requestData: [], loading: true, error: null };\r\n    case GET_CURRENT_WHALE_USER:\r\n      return { ...state, currentWhaleUser: null, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        requestData: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case UPDATE_VIP_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          ...action.payload.updatedField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data: [\r\n            ...state.currentWhaleUser.request_data.filter(\r\n              s => s.id.toString() !== action.payload.updatedField\r\n            )\r\n          ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data:\r\n            action.payload.act === \"add\"\r\n              ? [\r\n                  ...state.currentWhaleUser.request_data,\r\n                  action.payload.updatedField\r\n                ]\r\n              : [\r\n                  ...state.currentWhaleUser.request_data.filter(\r\n                    re => re.id !== action.payload.id\r\n                  ),\r\n                  action.payload.updatedField\r\n                ]\r\n        },\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_WHALE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentWhaleUser: {\r\n          ...action.payload.vip,\r\n          request_data: action.payload.requestData\r\n        },\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case GET_CURRENT_WHALE_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        currentWhaleUser: null,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_VIP_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n\r\n    case GET_VIP_REQUESTS_FAILED:\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  vip_orders_list: [],\r\n  vip_prods: [],\r\n  current_report: {},\r\n  loading: true,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  affectedRecord: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  vip_prods?: [] | null,\r\n  vip_orders_list?: [] | null,\r\n  current_report?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n    case GET_VIP_ORDERS:\r\n\r\n    case GET_VIP_PRODS_BY_GAMEID:\r\n    case EDIT_VIP_WIRE_REPORT:\r\n    case DELETE_VIP_WIRE_REPORT:\r\n      return { ...state, loading: true, error: null, errors: {} };\r\n\r\n    case GET_CURRENT_VIP_REPORT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        errors: {},\r\n        current_report: {}\r\n      };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        vip_orders_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_VIP_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_report: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_PRODS_BY_GAMEID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_prods: action.payload\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedRecord: action.payload.updatedField,\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: \"編輯成功!\"\r\n      };\r\n    case DELETE_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_orders_list: state.vip_orders_list.filter(\r\n          report => report.report_id !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_FAILED:\r\n    case DELETE_VIP_WIRE_REPORT_FAILED:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        errors: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n    case GET_VIP_ORDERS_FAILED:\r\n    case GET_CURRENT_VIP_REPORT_FAILED:\r\n    case GET_VIP_PRODS_BY_GAMEID_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null\r\n      };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\",\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: [],\r\n  csHandleAllocationData: [],\r\n  antsHandleAllocationData: [],\r\n  statReportData: [],\r\n  games_list: [],\r\n  user_history: [],\r\n  vip: null,\r\n  add_favor_ok: false,\r\n  tasks: []\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  add_favor_ok?: boolean,\r\n  tasks?: [] | null,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  games_list?: [] | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  user_history?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  let tmpGameIds = [];\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n    case GET_SERVICE_STATISTICS_BY_HOUR:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH:\r\n    case ADD_QUESTION_TO_BATCH:\r\n    case FAVORITE_QUESTION_ACTION:\r\n      return { ...state };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        loading:\r\n          Object.keys(action.payload).length === 1 &&\r\n          action.payload.status === \"1\"\r\n            ? false\r\n            : true,\r\n        error: null\r\n      };\r\n    case ADD_QUESTION_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: [action.payload.batch_info]\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.batch_info.question_id) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (action.payload.ids.indexOf(q.id) > -1) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: []\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === Number.parseInt(action.payload.removed_q_id)) {\r\n            return { ...q, is_batch: 0 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case FAVORITE_QUESTION_ACTION_SUCCESS:\r\n      //res.json({question_id:qId, is_favorite: action === \"add\" ? 1 : 0});\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.question_id) {\r\n            return { ...q, is_favorite: action.payload.is_favorite };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            is_favorite: action.payload.is_favorite\r\n          }\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: action.payload.updateQuestionData\r\n            ? [\r\n                ...state.current.replies,\r\n                { id: action.payload.id, ...action.payload.updatedField }\r\n              ]\r\n            : [\r\n                ...state.current.replies.map(reply =>\r\n                  reply.id !== action.payload.id\r\n                    ? reply\r\n                    : { ...reply, ...action.payload.updatedField }\r\n                )\r\n              ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user_history: action.payload.list,\r\n        vip: action.payload.vip\r\n      };\r\n    case GET_QUESTIONS_BY_USER_FAILED:\r\n    case GET_QUESTIONS_BY_USER:\r\n      return {\r\n        ...state,\r\n        user_history: []\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_CONFIG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        games_list: action.payload.games_list,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: action.payload.statReportData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        statReplyData: action.payload.statReplyData,\r\n        statReportData: action.payload.statReportData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const {\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData\r\n      } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n    case FAVORITE_QUESTION_ACTION_FAILED:\r\n    case ADD_QUESTION_TO_BATCH_FAILED:\r\n    case REMOVE_QUESTION_FROM_BATCH_FAILED:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  error: {},\r\n  question_type: {}\r\n};\r\n\r\ntype batchAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  affectedId?: number | null,\r\n  currentRecord?: {} | null,\r\n  question_type?: {} | null,\r\n  updateOKMessage?: string | null,\r\n  error?: {} | null\r\n};\r\n\r\nconst BatchTasks = (state: State = INIT_STATE, action: batchAction) => {\r\n  switch (action.type) {\r\n    case GET_BATCH_TASKS:\r\n    case EDIT_BATCH_TASK:\r\n    case DELETE_BATCH_TASK:\r\n    case GET_CURRENT_BATCH_TASK:\r\n    case REMOVE_BATCH_Q:\r\n    case REMOVE_Q_FROM_BATCH:\r\n    case BATCH_REPLY_ACTION:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...action.payload.task,\r\n          q_list: action.payload.q_list\r\n        },\r\n        question_type: action.payload.question_type\r\n      };\r\n    case CLEAR_BATCH_TASK_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case REMOVE_BATCH_Q_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: []\r\n        }\r\n      };\r\n    case REMOVE_Q_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: [\r\n            ...state.currentRecord.q_list.filter(\r\n              q =>\r\n                q.question_id !== Number.parseInt(action.payload.removed_q_id)\r\n            )\r\n          ]\r\n        }\r\n      };\r\n    case EDIT_BATCH_TASK_SUCCESS:\r\n      //console.log(\"action.payload.affectedRow\", action.payload.action);\r\n      return {\r\n        ...state,\r\n        list:\r\n          action.payload.action === \"add\"\r\n            ? [\r\n                ...state.list,\r\n                { id: action.payload.affectedId, ...action.payload.affectedRow }\r\n              ]\r\n            : state.list.map(task =>\r\n                task.id === action.payload.affectedId\r\n                  ? action.payload.affectedRow\r\n                  : task\r\n              ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    case BATCH_REPLY_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          status: action.payload.mode\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case GET_BATCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.batch_tasks,\r\n        games: action.payload.games\r\n      };\r\n    case BATCH_REPLY_ACTION_FAILED:\r\n    case GET_BATCH_TASKS_FAILED:\r\n    case EDIT_BATCH_TASK_FAILED:\r\n    case DELETE_BATCH_TASK_FAILED:\r\n    case GET_CURRENT_BATCH_TASK_FAILED:\r\n    case REMOVE_BATCH_Q_FAILED:\r\n    case REMOVE_Q_FROM_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case DELETE_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(\r\n          task => task.id !== Number.parseInt(action.payload.deleted_id)\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default BatchTasks;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nimport BatchTasks from \"./batch/reducers\";\n\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers,\n  BatchTasks\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  GET_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE\r\n} from \"./constants\";\r\nimport {\r\n  updatePasswordSuccess,\r\n  updatePasswordFailed,\r\n  getPresetMessageSuccess,\r\n  getPresetMessageFailed,\r\n  editPresetMessageSuccess,\r\n  editPresetMessageFailed,\r\n  deletePresetMessageSuccess,\r\n  deletePresetMessageFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/modify_password\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updatePasswordSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(updatePasswordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getPresetMessageData() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/preset_messages/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - record , update with id, or insert with no id\r\n */\r\nfunction* editPresetMessageData({ payload }) {\r\n  const record = payload;\r\n\r\n  const options = {\r\n    method: record.id ? \"PUT\" : \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${record.id ? record.id : \"\"}`,\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deletePresetMessageData({ payload }) {\r\n  const id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deletePresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deletePresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n  yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nexport function* watchgetPresetMessageData(): any {\r\n  yield takeEvery(GET_PRESET_MESSAGE, getPresetMessageData);\r\n}\r\nexport function* watchUpdatePresetMessageData(): any {\r\n  yield takeEvery(EDIT_PRESET_MESSAGE, editPresetMessageData);\r\n}\r\n\r\nexport function* watchDeletePresetMessageData(): any {\r\n  yield takeEvery(DELETE_PRESET_MESSAGE, deletePresetMessageData);\r\n}\r\nfunction* PlatformSaga(): any {\r\n  yield all([\r\n    fork(watchChangePassword),\r\n    fork(watchgetPresetMessageData),\r\n    fork(watchUpdatePresetMessageData),\r\n    fork(watchDeletePresetMessageData)\r\n  ]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_GOV_DATA,\r\n  EDIT_RECORD,\r\n  GET_CURRENT,\r\n  EDIT_CPL_REPLY,\r\n  DELETE_CPL,\r\n  MOVE_CPL,\r\n  EDIT_CPL_MEDIATION,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_MEDIATION,\r\n  EDIT_CPL_REF,\r\n  DELETE_CPL_REF,\r\n  ADD_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getOfflineCsDataSuccess,\r\n  getOfflineCsDataFailed,\r\n  editRecordSuccess,\r\n  editRecordFailed,\r\n  getCurrentRecordSuccess,\r\n  getCurrentRecordFailed,\r\n  editCplReplySuccess,\r\n  editCplReplyFailed,\r\n  deleteCplCaseSuccess,\r\n  deleteCplCaseFailed,\r\n  moveCplCaseSuccess,\r\n  moveCplCaseFailed,\r\n  editCplMediationSuccess,\r\n  editCplMediationFailed,\r\n  deleteCplCaseReplyFailed,\r\n  deleteCplCaseReplySuccess,\r\n  deleteCplMediationSuccess,\r\n  deleteCplMediationFailed,\r\n  editCplRefSuccess,\r\n  editCplRefFailed,\r\n  deleteCplRefSuccess,\r\n  deleteCplRefFailed,\r\n  addCplAttachmentFailed,\r\n  addCplAttachmentSuccess,\r\n  deleteCplAttachmentSuccess,\r\n  deleteCplAttachmentFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/${\r\n      type === \"govletter\" ? \"gov_list\" : type === \"pv\" ? \"pv_list\" : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOfflineCsDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 403:\r\n        message = error.response.data;\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOfflineCsDataFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log('editGovRecord *****', payload);\r\n  const { dataType, record } = payload;\r\n\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editRecordSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* moveCplRecord({ payload }) {\r\n  console.log(\"moveCplRecord *****\", payload);\r\n  const { id, record } = payload;\r\n  //record: { status, close_date }\r\n  const options = {\r\n    data: record,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/move_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(moveCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(moveCplCaseFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl reply\r\n */\r\nfunction* editCplReply({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplReplyFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplMediation({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplMediationFailed(message));\r\n  }\r\n}\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { dataType, record_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentRecordSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 400:\r\n        message = error.response.data.msg;\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplRefFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* addCplAttach({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/add`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addCplAttachmentFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deleteCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref/remove`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deleteCplRefFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCase({ payload: { id, history } }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    history.push(\"/offline/cpl_case/home\");\r\n    yield put(deleteCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseReply({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplCaseReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseReplyFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseAttachment({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplAttachmentFailed(message));\r\n  }\r\n}\r\nfunction* delCplMd({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplMediationFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n  yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n  yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nexport function* watchEditCplReply(): any {\r\n  yield takeEvery(EDIT_CPL_REPLY, editCplReply);\r\n}\r\nexport function* watchEditCplMediation(): any {\r\n  yield takeEvery(EDIT_CPL_MEDIATION, editCplMediation);\r\n}\r\n\r\nexport function* watchDeleteCpl(): any {\r\n  yield takeEvery(DELETE_CPL, delCplCase);\r\n}\r\n\r\nexport function* watchDeleteCplReply(): any {\r\n  yield takeEvery(DELETE_CPL_REPLY, delCplCaseReply);\r\n}\r\nexport function* watchDeleteCplMediation(): any {\r\n  yield takeEvery(DELETE_CPL_MEDIATION, delCplMd);\r\n}\r\n\r\nexport function* watchMoveCplStatus(): any {\r\n  yield takeEvery(MOVE_CPL, moveCplRecord);\r\n}\r\n\r\nexport function* watchEditCplRef(): any {\r\n  yield takeEvery(EDIT_CPL_REF, editCplRef);\r\n}\r\nexport function* watchDeleteCplRef(): any {\r\n  yield takeEvery(DELETE_CPL_REF, deleteCplRef);\r\n}\r\nexport function* watchAddCplAttach(): any {\r\n  yield takeEvery(ADD_CPL_ATTACHMENT, addCplAttach);\r\n}\r\n\r\nexport function* watchDelCplAttach(): any {\r\n  yield takeEvery(DELETE_CPL_ATTACHMENT, delCplCaseAttachment);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchEditRecord),\r\n    fork(watchGetCurrentRecordData),\r\n    fork(watchEditCplReply),\r\n    fork(watchDeleteCpl),\r\n    fork(watchMoveCplStatus),\r\n    fork(watchDeleteCplReply),\r\n    fork(watchEditCplMediation),\r\n    fork(watchDeleteCplMediation),\r\n    fork(watchEditCplRef),\r\n    fork(watchDeleteCplRef),\r\n    fork(watchAddCplAttach),\r\n    fork(watchDelCplAttach)\r\n  ]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_USERS, GET_USER_TASKS } from \"./constants\";\r\n\r\nimport {\r\n  getAdminUsersSuccess,\r\n  getAdminUsersFailed,\r\n  getUserTasksSuccess,\r\n  getUserTasksFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getAdminUsersByRole/${role}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAdminUsersSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get user tasks, like favourite, allocation tasks\r\n * @param {*} payload - uid\r\n */\r\nfunction* getUserTask() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getUserTasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getUserTasksSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nexport function* watchGetUserTasks(): any {\r\n  yield takeEvery(GET_USER_TASKS, getUserTask);\r\n}\r\nfunction* adminUsersSaga(): any {\r\n  yield all([fork(watchGetData), fork(watchGetUserTasks)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION,\r\n  GET_SERVICE_CONFIG,\r\n  GET_QUESTIONS_BY_USER,\r\n  FAVORITE_QUESTION_ACTION,\r\n  ADD_QUESTION_TO_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getServiceStatisticsByHourFailed,\r\n  getServiceStatisticsByHourSuccess,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed,\r\n  getServiceConfigSuccess,\r\n  getQuestionsByUserSuccess,\r\n  getQuestionsByUserFailed,\r\n  favorQuestionFailed,\r\n  favorQuestionSuccess,\r\n  addQuestionToBatchSuccess,\r\n  addQuestionToBatchFailed,\r\n  removeQuestionFromBatchSuccess,\r\n  removeQuestionFromBatchFailed,\r\n  addMultipleQuestionsToBatchSuccess,\r\n  addMultipleQuestionsToBatchFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  //console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    console.log(\"getCurrentQuestionData\", response.data);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(\" getCurrentQuestionData error \", error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getQuestionsByUserData({ payload: question_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/list_by_user/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsByUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.msg;\r\n    }\r\n    yield put(getQuestionsByUserFailed(message));\r\n  }\r\n}\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\nfunction* getServiceStatByHour({ payload: { sDate } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/stat_hourly_count?sDate=${sDate}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsByHourSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsByHourFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add question to batch\r\n */\r\nfunction* addQuestionToBatch({ payload }) {\r\n  //const { question_id, batch_id } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/add_to_batch\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addQuestionToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(addQuestionToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * remove from batch //@route: DELETE /api/batch/remove_from_batch/:question_id\r\n */\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  //question_id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${payload}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQuestionFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(removeQuestionFromBatchFailed(message));\r\n  }\r\n}\r\n\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or remove question type\r\n */\r\nfunction* updateQuestionFavorite({ payload }) {\r\n  //const { qId, action } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionFavorite`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(favorQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(favorQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceConfig() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/config`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceConfigSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add more than one question to a batch\r\n */\r\nfunction* addIdsToBatch({ payload: { batch_id, ids } }) {\r\n  const options = {\r\n    data: { batch_id, ids },\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_add_to_batch\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(addMultipleQuestionsToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addMultipleQuestionsToBatchFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\nexport function* watchStatDataByHour(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS_BY_HOUR, getServiceStatByHour);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nexport function* watchGetServiceConfig(): any {\r\n  yield takeEvery(GET_SERVICE_CONFIG, getServiceConfig);\r\n}\r\n\r\nexport function* watchGetRelaventUserData(): any {\r\n  yield takeEvery(GET_QUESTIONS_BY_USER, getQuestionsByUserData);\r\n}\r\nexport function* watchupdateQuestionFavorite(): any {\r\n  yield takeEvery(FAVORITE_QUESTION_ACTION, updateQuestionFavorite);\r\n}\r\n\r\nexport function* watchAddQuestionToBatch(): any {\r\n  yield takeEvery(ADD_QUESTION_TO_BATCH, addQuestionToBatch);\r\n}\r\n\r\nexport function* watchRemoveQuestionFromBatch(): any {\r\n  yield takeEvery(REMOVE_QUESTION_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\nexport function* watchAddMultiToBatch(): any {\r\n  yield takeEvery(ADD_MULTIPLE_QUESTIONS_TO_BATCH, addIdsToBatch);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData),\r\n    fork(watchGetServiceConfig),\r\n    fork(watchGetRelaventUserData),\r\n    fork(watchupdateQuestionFavorite),\r\n    fork(watchAddQuestionToBatch),\r\n    fork(watchRemoveQuestionFromBatch),\r\n    fork(watchAddMultiToBatch),\r\n    fork(watchStatDataByHour)\r\n  ]);\r\n}\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_INFO,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_VIP_REQUESTS\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed,\r\n  getCurrentWhaleUserSuccess,\r\n  getCurrentWhaleUserFailed,\r\n  updateVipInfoSuccess,\r\n  updateVipInfoFailed,\r\n  getVipRequestsSuccess,\r\n  getVipRequestsFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipReqData({ payload: { gameId, beginTime, endTime } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/request_report?gameId=${gameId}&beginTime=${beginTime}&endTime=${endTime}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipRequestsSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipRequestsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getSingleVip({ payload: { game_id, role_id, history } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/user_dashboard/${game_id}?user=${role_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentWhaleUserSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getCurrentWhaleUserFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* updateVIPInfo({ payload: { game_id, role_id, fields } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update_vip_info\",\r\n    data: { game_id, role_id, fields }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updateVipInfoSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(updateVipInfoFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  //console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nexport function* watchGetCurrentWhaleUser(): any {\r\n  yield takeEvery(GET_CURRENT_WHALE_USER, getSingleVip);\r\n}\r\nexport function* watchUpdateVIPInfo(): any {\r\n  yield takeEvery(UPDATE_VIP_INFO, updateVIPInfo);\r\n}\r\n\r\nexport function* watchGetVipReqData(): any {\r\n  yield takeEvery(GET_VIP_REQUESTS, getVipReqData);\r\n}\r\n\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest),\r\n    fork(watchGetCurrentWhaleUser),\r\n    fork(watchUpdateVIPInfo),\r\n    fork(watchGetVipReqData)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_ORDERS,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipOffersFailed,\r\n  getVipOffersSuccess,\r\n  getVipOrdersSuccess,\r\n  getVipOrdersFailed,\r\n  getCurrentVipReportSuccess,\r\n  getCurrentVipReportFailed,\r\n  getVipProductsByGameIdSuccess,\r\n  getVipProductsByGameIdFailed,\r\n  editVipWireReportSuccess,\r\n  editVipWireReportFailed,\r\n  deleteVipWireReportSuccess,\r\n  deleteVipWireReportFailed\r\n} from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipOrder() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/order_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOrdersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOrdersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { report_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/detail/${report_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipReportFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getProdsByGameId({ payload: gameId }) {\r\n  //console.log('getServersByGameId', gameId);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods_list/${gameId}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipProductsByGameIdSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getVipProductsByGameIdFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/wire_report/update\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPWReport({ payload: record_id }) {\r\n  console.log(\"delVIPWReport\", record_id);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/delete_wire_report/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nexport function* watchGetOrders(): any {\r\n  yield takeEvery(GET_VIP_ORDERS, getVipOrder);\r\n}\r\n\r\nexport function* watchGetCurrentReport(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_REPORT, getCurrentRecord);\r\n}\r\nexport function* watchGetProdsByGameId(): any {\r\n  yield takeEvery(GET_VIP_PRODS_BY_GAMEID, getProdsByGameId);\r\n}\r\n\r\nexport function* watchEditVipWireReport(): any {\r\n  yield takeEvery(EDIT_VIP_WIRE_REPORT, editRecord);\r\n}\r\n\r\nexport function* watchDeleteVipWireReport(): any {\r\n  yield takeEvery(DELETE_VIP_WIRE_REPORT, delVIPWReport);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([\r\n    fork(watchGetOffers),\r\n    fork(watchGetOrders),\r\n    fork(watchGetCurrentReport),\r\n    fork(watchGetProdsByGameId),\r\n    fork(watchEditVipWireReport),\r\n    fork(watchDeleteVipWireReport)\r\n  ]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","import axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  EDIT_BATCH_TASK,\r\n  DELETE_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_Q_FROM_BATCH,\r\n  BATCH_REPLY_ACTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getBatchTasksSuccess,\r\n  getBatchTasksFailed,\r\n  editBatchTaskSuccess,\r\n  editBatchTaskFailed,\r\n  deleteBatchTaskSuccess,\r\n  deleteBatchTaskFailed,\r\n  getCurrentBatchTaskSuccess,\r\n  getCurrentBatchTaskFailed,\r\n  removeBatchQSuccess,\r\n  removeBatchQFailed,\r\n  removeQFromBatchSuccess,\r\n  removeQFromBatchFailed,\r\n  batchReplyActionSuccess,\r\n  batchReplyActionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get batch tasks list\r\n * @param {*} payload - task list & game list\r\n */\r\nfunction* getBatchTasks() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getBatchTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getBatchTasksFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentBatch({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  //http://localhost:5000/api/batch/detail/80\r\n  const { record_id, history } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 403:\r\n        message = \"權限不符合操作\";\r\n        //錯誤\r\n        history.push(\"/pages/error-403\");\r\n        break;\r\n\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  const record = payload;\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/task\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(editBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* batchReply({ payload }) {\r\n  const replyData = payload;\r\n  const options = {\r\n    data: replyData,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_reply_json\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(batchReplyActionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(batchReplyActionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delBatchTask({ payload: { id, history } }) {\r\n  //console.log(\"delBatchTask\", payload);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/task/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeBatchQuestions({ payload }) {\r\n  const batch_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_batch_q/${batch_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeBatchQSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeBatchQFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  const question_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeQFromBatchFailed(message));\r\n  }\r\n}\r\nexport function* watchGetBatchTasksData(): any {\r\n  yield takeEvery(GET_BATCH_TASKS, getBatchTasks);\r\n}\r\n\r\nexport function* watchEditBatchRecord(): any {\r\n  yield takeEvery(EDIT_BATCH_TASK, editRecord);\r\n}\r\nexport function* watchDeleteBatchRecord(): any {\r\n  yield takeEvery(DELETE_BATCH_TASK, delBatchTask);\r\n}\r\n\r\nexport function* watchgetCurrentBatch(): any {\r\n  yield takeEvery(GET_CURRENT_BATCH_TASK, getCurrentBatch);\r\n}\r\n\r\nexport function* watchgetRemoveBatchQ(): any {\r\n  yield takeEvery(REMOVE_BATCH_Q, removeBatchQuestions);\r\n}\r\n\r\nexport function* watchgetRemoveQFromBatch(): any {\r\n  yield takeEvery(REMOVE_Q_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\n\r\nexport function* watchBatchReply(): any {\r\n  yield takeEvery(BATCH_REPLY_ACTION, batchReply);\r\n}\r\n\r\nfunction* batchTaskSaga(): any {\r\n  yield all([\r\n    fork(watchGetBatchTasksData),\r\n    fork(watchEditBatchRecord),\r\n    fork(watchDeleteBatchRecord),\r\n    fork(watchgetCurrentBatch),\r\n    fork(watchgetRemoveBatchQ),\r\n    fork(watchgetRemoveQFromBatch),\r\n    fork(watchBatchReply)\r\n  ]);\r\n}\r\n\r\nexport default batchTaskSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nimport batchTaskSaga from \"./batch/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga(),\n    batchTaskSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}