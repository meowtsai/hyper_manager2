{"version":3,"sources":["../node_modules/react-popper/lib/esm/Manager.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/react-popper/lib/esm/Popper.js","../node_modules/react-popper/lib/esm/Reference.js","../node_modules/react-popper/lib/esm/index.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/warning/warning.js","../node_modules/popper.js/dist/esm/popper.js","../node_modules/react-popper/node_modules/create-react-context/lib/index.js","../node_modules/react-popper/node_modules/create-react-context/lib/implementation.js"],"names":["ManagerContext","lib_default","setReferenceNode","undefined","referenceNode","Manager_Manager","_React$Component","Manager","_this","call","this","defineProperty_default","assertThisInitialized_default","state","context","setState","_ref","extends_default","inheritsLoose_default","prototype","render","react","Provider","value","props","children","unwrapArray","arg","Array","isArray","safeInvoke","fn","_len","arguments","length","args","_key","apply","initialStyle","position","top","left","opacity","pointerEvents","initialArrowStyle","Popper_InnerPopper","InnerPopper","concat","data","placement","popperNode","innerRef","updatePopperInstance","arrowNode","enabled","order","eventsEnabled","positionFixed","modifiers","arrow","element","applyStyle","updateStateModifier","offsets","popper","styles","arrowStyles","hide","popperInstance","destroy","destroyPopperInstance","referenceElement","getOptions","scheduleUpdate","_proto","componentDidUpdate","prevProps","prevState","enableEventListeners","disableEventListeners","componentWillUnmount","ref","setPopperNode","style","getPopperStyle","getPopperPlacement","outOfBoundaries","getOutOfBoundariesState","arrowProps","setArrowNode","getArrowStyle","placements","Popper","objectWithoutPropertiesLoose_default","Consumer","_ref2","Reference_InnerReference","InnerReference","node","warning_default","Boolean","refHandler","Reference","__webpack_require__","d","__webpack_exports__","_extends","module","exports","Object","assign","target","i","source","key","hasOwnProperty","obj","defineProperty","enumerable","configurable","writable","excluded","sourceKeys","keys","indexOf","self","ReferenceError","warning","global","isBrowser","window","document","longerTimeoutBrowsers","timeoutDuration","navigator","userAgent","debounce","Promise","called","resolve","then","scheduled","setTimeout","isFunction","functionToCheck","toString","getStyleComputedProperty","property","nodeType","css","ownerDocument","defaultView","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","_getStyleComputedProp","overflow","overflowX","overflowY","test","isIE11","MSInputMethodContext","documentMode","isIE10","isIE","version","getOffsetParent","documentElement","noOffsetParent","offsetParent","nextElementSibling","getRoot","findCommonOffsetParent","element1","element2","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","firstElementChild","isOffsetContainer","element1root","getScroll","upperSide","html","scrollingElement","getBordersSize","axis","sideA","sideB","parseFloat","getSize","computedStyle","Math","max","parseInt","getWindowSizes","height","width","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","descriptor","protoProps","staticProps","getClientRect","right","bottom","getBoundingClientRect","rect","scrollTop","scrollLeft","e","result","sizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","subtract","modifier","includeScroll","getFixedPositionOffsetParent","parentElement","el","getBoundaries","reference","padding","boundariesElement","boundaries","excludeScroll","relativeOffset","innerWidth","innerHeight","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","isFixed","_getWindowSizes","isPaddingNumber","computeAutoPlacement","refRect","rects","sortedAreas","map","area","sort","a","b","filteredAreas","filter","computedPlacement","variation","split","getReferenceOffsets","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","runModifiers","ends","slice","prop","findIndex","cur","match","forEach","console","warn","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","getWindow","setupEventListeners","options","updateBound","addEventListener","passive","scrollElement","attachToScrollParents","event","callback","scrollParents","isBody","push","cancelAnimationFrame","removeEventListener","isNumeric","n","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","validPlacements","clockwise","counter","index","reverse","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","parseOffset","offset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","str","toValue","index2","Defaults","removeOnDestroy","onCreate","onUpdate","shift","shiftvariation","_data$offsets","isVertical","side","shiftOffsets","preventOverflow","transformProp","popperStyles","transform","priority","primary","escapeWithReference","secondary","min","keepTogether","floor","opSide","_data$offsets$arrow","arrowElement","querySelector","len","sideCapitalized","toLowerCase","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","round","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","inner","subtractLength","bound","attributes","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","getRoundedOffsets","devicePixelRatio","prefixedProperty","willChange","invertTop","invertLeft","x-placement","setAttribute","removeAttribute","onLoad","modifierOptions","requestAnimationFrame","update","bind","isDestroyed","isCreated","jquery","removeChild","Utils","PopperUtils","__esModule","_react2","_interopRequireDefault","_implementation2","default","createContext","_react","_propTypes2","_gud2","_classCallCheck","_possibleConstructorReturn","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","MAX_SIGNED_31_BIT_INT","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","_Component","_temp","emitter","handlers","on","handler","off","h","get","set","newValue","changedBits","createEventEmitter","getChildContext","componentWillReceiveProps","nextProps","oldValue","Component","childContextTypes","object","_Component2","_temp2","_this2","_len2","_key2","getValue","observedBits","componentDidMount","contextTypes"],"mappings":"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","file":"static/js/1.0377532b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport createContext from 'create-react-context';\nexport var ManagerContext = createContext({\n  setReferenceNode: undefined,\n  referenceNode: undefined\n});\n\nvar Manager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Manager, _React$Component);\n\n  function Manager() {\n    var _this;\n\n    _this = _React$Component.call(this) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"setReferenceNode\", function (referenceNode) {\n      if (!referenceNode || _this.state.context.referenceNode === referenceNode) {\n        return;\n      }\n\n      _this.setState(function (_ref) {\n        var context = _ref.context;\n        return {\n          context: _extends({}, context, {\n            referenceNode: referenceNode\n          })\n        };\n      });\n    });\n\n    _this.state = {\n      context: {\n        setReferenceNode: _this.setReferenceNode,\n        referenceNode: undefined\n      }\n    };\n    return _this;\n  }\n\n  var _proto = Manager.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(ManagerContext.Provider, {\n      value: this.state.context\n    }, this.props.children);\n  };\n\n  return Manager;\n}(React.Component);\n\nexport { Manager as default };","/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === \"function\") {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PopperJS from 'popper.js';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\nvar initialStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  opacity: 0,\n  pointerEvents: 'none'\n};\nvar initialArrowStyle = {};\nexport var InnerPopper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerPopper, _React$Component);\n\n  function InnerPopper() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: undefined,\n      placement: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"popperInstance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"popperNode\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"arrowNode\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"setPopperNode\", function (popperNode) {\n      if (!popperNode || _this.popperNode === popperNode) return;\n      safeInvoke(_this.props.innerRef, popperNode);\n      _this.popperNode = popperNode;\n\n      _this.updatePopperInstance();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setArrowNode\", function (arrowNode) {\n      _this.arrowNode = arrowNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateStateModifier\", {\n      enabled: true,\n      order: 900,\n      fn: function fn(data) {\n        var placement = data.placement;\n\n        _this.setState({\n          data: data,\n          placement: placement\n        });\n\n        return data;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOptions\", function () {\n      return {\n        placement: _this.props.placement,\n        eventsEnabled: _this.props.eventsEnabled,\n        positionFixed: _this.props.positionFixed,\n        modifiers: _extends({}, _this.props.modifiers, {\n          arrow: _extends({}, _this.props.modifiers && _this.props.modifiers.arrow, {\n            enabled: !!_this.arrowNode,\n            element: _this.arrowNode\n          }),\n          applyStyle: {\n            enabled: false\n          },\n          updateStateModifier: _this.updateStateModifier\n        })\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPopperStyle\", function () {\n      return !_this.popperNode || !_this.state.data ? initialStyle : _extends({\n        position: _this.state.data.offsets.popper.position\n      }, _this.state.data.styles);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPopperPlacement\", function () {\n      return !_this.state.data ? undefined : _this.state.placement;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getArrowStyle\", function () {\n      return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOutOfBoundariesState\", function () {\n      return _this.state.data ? _this.state.data.hide : undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"destroyPopperInstance\", function () {\n      if (!_this.popperInstance) return;\n\n      _this.popperInstance.destroy();\n\n      _this.popperInstance = null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updatePopperInstance\", function () {\n      _this.destroyPopperInstance();\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          popperNode = _assertThisInitialize.popperNode;\n\n      var referenceElement = _this.props.referenceElement;\n      if (!referenceElement || !popperNode) return;\n      _this.popperInstance = new PopperJS(referenceElement, popperNode, _this.getOptions());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scheduleUpdate\", function () {\n      if (_this.popperInstance) {\n        _this.popperInstance.scheduleUpdate();\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerPopper.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // If the Popper.js options have changed, update the instance (destroy + create)\n    if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed) {\n      this.updatePopperInstance();\n    } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {\n      this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();\n    } // A placement difference in state means popper determined a new placement\n    // apart from the props value. By the time the popper element is rendered with\n    // the new position Popper has already measured it, if the place change triggers\n    // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n    if (prevState.placement !== this.state.placement) {\n      this.scheduleUpdate();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    safeInvoke(this.props.innerRef, null);\n    this.destroyPopperInstance();\n  };\n\n  _proto.render = function render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      outOfBoundaries: this.getOutOfBoundariesState(),\n      scheduleUpdate: this.scheduleUpdate,\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle()\n      }\n    });\n  };\n\n  return InnerPopper;\n}(React.Component);\n\n_defineProperty(InnerPopper, \"defaultProps\", {\n  placement: 'bottom',\n  eventsEnabled: true,\n  referenceElement: undefined,\n  positionFixed: false\n});\n\nvar placements = PopperJS.placements;\nexport { placements };\nexport default function Popper(_ref) {\n  var referenceElement = _ref.referenceElement,\n      props = _objectWithoutPropertiesLoose(_ref, [\"referenceElement\"]);\n\n  return React.createElement(ManagerContext.Consumer, null, function (_ref2) {\n    var referenceNode = _ref2.referenceNode;\n    return React.createElement(InnerPopper, _extends({\n      referenceElement: referenceElement !== undefined ? referenceElement : referenceNode\n    }, props));\n  });\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport warning from 'warning';\nimport { ManagerContext } from './Manager';\nimport { safeInvoke, unwrapArray } from './utils';\n\nvar InnerReference =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerReference, _React$Component);\n\n  function InnerReference() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"refHandler\", function (node) {\n      safeInvoke(_this.props.innerRef, node);\n      safeInvoke(_this.props.setReferenceNode, node);\n    });\n\n    return _this;\n  }\n\n  var _proto = InnerReference.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    safeInvoke(this.props.innerRef, null);\n  };\n\n  _proto.render = function render() {\n    warning(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n    return unwrapArray(this.props.children)({\n      ref: this.refHandler\n    });\n  };\n\n  return InnerReference;\n}(React.Component);\n\nexport default function Reference(props) {\n  return React.createElement(ManagerContext.Consumer, null, function (_ref) {\n    var setReferenceNode = _ref.setReferenceNode;\n    return React.createElement(InnerReference, _extends({\n      setReferenceNode: setReferenceNode\n    }, props));\n  });\n}","// Public components\nimport Popper, { placements } from './Popper';\nimport Manager from './Manager';\nimport Reference from './Reference';\nexport { Popper, placements, Manager, Reference }; // Public types","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.15.0\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\n\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\n\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\n\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\n\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\n\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n\n  if (version === 10) {\n    return isIE10;\n  }\n\n  return isIE11 || isIE10;\n}\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here\n\n  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n\n\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1; // Get common ancestor container\n\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  var element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\n\n\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\n\n\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\n\n\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\n\n\nfunction getBoundingClientRect(element) {\n  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop, 10);\n    var marginLeft = parseFloat(styles.marginLeft, 10);\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\n\n\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  var parentNode = getParentNode(element);\n\n  if (!parentNode) {\n    return false;\n  }\n\n  return isFixed(parentNode);\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n\n  var el = element.parentElement;\n\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\n\n\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here\n\n  var boundaries = {\n    top: 0,\n    left: 0\n  };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width * height;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n  var variation = placement.split('-')[1];\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\n\n\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\n\n\nfunction getOppositePlacement(placement) {\n  var hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\n\n\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0]; // Get popper node sizes\n\n  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object\n\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  }; // depending by the popper placement we have to compute its offsets slightly differently\n\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  } // use `filter` to obtain the same behavior of `find`\n\n\n  return arr.filter(check)[0];\n}\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\n\n\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  } // use `find` + `indexOf` if `findIndex` isn't supported\n\n\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\n\n\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n      data = fn(data, modifier);\n    }\n  });\n  return data;\n}\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\n\n\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  }; // compute reference element offsets\n\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`\n\n  data.originalPlacement = data.placement;\n  data.positionFixed = this.options.positionFixed; // compute the popper offsets\n\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers\n\n  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\n\n\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\n\n\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n\n  return null;\n}\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\n\n\nfunction destroy() {\n  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled\n\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n\n  return this;\n}\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\n\n\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, {\n    passive: true\n  });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n\n  scrollParents.push(target);\n}\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, {\n    passive: true\n  }); // Scroll event listener on scroll parents\n\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n  return state;\n}\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\n\n\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\n\n\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents\n\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  }); // Reset state\n\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\n\n\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\n\n\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\n\n\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n\n  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties\n\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\n\n\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n\n  setStyles(popper, {\n    position: options.positionFixed ? 'fixed' : 'absolute'\n  });\n  return options;\n}\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\n\n\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles\n\n  var styles = {\n    position: popper.position\n  };\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n\n  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n\n  var left = void 0,\n      top = void 0;\n\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  } // Attributes\n\n\n  var attributes = {\n    'x-placement': data.placement\n  }; // Update `data` attributes, styles and arrowStyles\n\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n  return data;\n}\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\n\n\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n\n  return isRequired;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction arrow(data, options) {\n  var _data$offsets$arrow; // arrow depends on keepTogether in order to work\n\n\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier\n\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len]; //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n  // top/left side\n\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  } // bottom/right side\n\n\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper\n\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper\n\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n  return data;\n}\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n\n  return variation;\n}\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\n\n\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`\n\nvar validPlacements = placements.slice(3);\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\n\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here\n\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries\n\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries\n\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\n\n\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2]; // If it's not a number it's an operator, I guess\n\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\n\n\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  }); // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  } // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n\n\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations\n\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, []) // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  }); // Loop trough the offsets arrays and execute the operations\n\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var basePlacement = placement.split('-')[0];\n  var offsets = void 0;\n\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  } // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n\n\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n  options.boundaries = boundaries;\n  var order = options.priority;\n  var popper = data.offsets.popper;\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n\n      return defineProperty({}, mainSide, value);\n    }\n  };\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n  data.offsets.popper = popper;\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier\n\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\n\n\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n  return data;\n}\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\n\n\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: offset,\n\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: arrow,\n\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: flip,\n\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\n\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n// Utils\n// Methods\n\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    }; // make update() debounced, so that it only runs at most once-per-tick\n\n\n    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it\n\n    this.options = _extends({}, Popper.Defaults, options); // init state\n\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    }; // get reference and popper elements (allow jQuery wrappers)\n\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options\n\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    }); // Refactoring modifiers' list (Object => Array)\n\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    }) // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    }); // fire the first update to position the popper in the right place\n\n    this.update();\n    var eventsEnabled = this.options.eventsEnabled;\n\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  } // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\nexport default Popper;","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _implementation = require('./implementation');\n\nvar _implementation2 = _interopRequireDefault(_implementation);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = _react2.default.createContext || _implementation2.default;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _gud = require('gud');\n\nvar _gud2 = _interopRequireDefault(_gud);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823; // Inlined Object.is polyfill.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';\n\n  var Provider = function (_Component) {\n    _inherits(Provider, _Component);\n\n    function Provider() {\n      var _temp, _this, _ret;\n\n      _classCallCheck(this, Provider);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    Provider.prototype.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits = void 0;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0; // No change\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    Provider.prototype.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(_react.Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);\n\n  var Consumer = function (_Component2) {\n    _inherits(Consumer, _Component2);\n\n    function Consumer() {\n      var _temp2, _this2, _ret2;\n\n      _classCallCheck(this, Consumer);\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {\n        value: _this2.getValue()\n      }, _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n    }\n\n    Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT // Subscribe to all changes by default\n      : observedBits;\n    };\n\n    Consumer.prototype.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    Consumer.prototype.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    Consumer.prototype.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(_react.Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nexports.default = createReactContext;\nmodule.exports = exports['default'];"],"sourceRoot":""}