{"version":3,"sources":["redux/service/constants.js","redux/offlinecs/constants.js","redux/vip/constants.js","redux/batch/constants.js","redux/vipoffers/constants.js","redux/serviceAllocate/constants.js","redux/service/actions.js","redux/platform/constants.js","redux/offlinecs/actions.js","redux/auth/constants.js","redux/games/constants.js","redux/layout/constants.js","redux/vip/actions.js","redux/adminUsers/constants.js","redux/batch/actions.js","redux/serviceAllocate/actions.js","redux/vipoffers/actions.js","redux/appMenu/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/event/constants.js","redux/platform/actions.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/games/actions.js","redux/adminUsers/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/servers/actions.js","redux/event/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/batch/reducers.js","redux/event/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/batch/saga.js","redux/event/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_SERVICE_STATISTICS_BY_HOUR","GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS","GET_SERVICE_STATISTICS_BY_HOUR_FAILED","GET_SERVICE_CONFIG","GET_SERVICE_CONFIG_SUCCESS","GET_QUESTIONS_BY_USER","GET_QUESTIONS_BY_USER_SUCCESS","GET_QUESTIONS_BY_USER_FAILED","FAVORITE_QUESTION_ACTION","FAVORITE_QUESTION_ACTION_SUCCESS","FAVORITE_QUESTION_ACTION_FAILED","ADD_QUESTION_TO_BATCH","ADD_QUESTION_TO_BATCH_SUCCESS","ADD_QUESTION_TO_BATCH_FAILED","REMOVE_QUESTION_FROM_BATCH","REMOVE_QUESTION_FROM_BATCH_SUCCESS","REMOVE_QUESTION_FROM_BATCH_FAILED","ADD_MULTIPLE_QUESTIONS_TO_BATCH","ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS","ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED","ADD_USER_ACTION_LOG","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","EDIT_CPL_REPLY","EDIT_CPL_REPLY_SUCCESS","EDIT_CPL_REPLY_FAILED","DELETE_CPL","DELETE_CPL_SUCCESS","DELETE_CPL_FAILED","MOVE_CPL","MOVE_CPL_SUCCESS","MOVE_CPL_FAILED","EDIT_CPL_MEDIATION","EDIT_CPL_MEDIATION_SUCCESS","EDIT_CPL_MEDIATION_FAILED","DELETE_CPL_REPLY","DELETE_CPL_REPLY_SUCCESS","DELETE_CPL_REPLY_FAILED","DELETE_CPL_MEDIATION","DELETE_CPL_MEDIATION_SUCCESS","DELETE_CPL_MEDIATION_FAILED","EDIT_CPL_REF","EDIT_CPL_REF_SUCCESS","EDIT_CPL_REF_FAILED","DELETE_CPL_REF","DELETE_CPL_REF_SUCCESS","DELETE_CPL_REF_FAILED","ADD_CPL_ATTACHMENT","ADD_CPL_ATTACHMENT_SUCCESS","ADD_CPL_ATTACHMENT_FAILED","DELETE_CPL_ATTACHMENT","DELETE_CPL_ATTACHMENT_SUCCESS","DELETE_CPL_ATTACHMENT_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","GET_CURRENT_WHALE_USER","GET_CURRENT_WHALE_USER_SUCCESS","GET_CURRENT_WHALE_USER_FAILED","UPDATE_VIP_INFO","UPDATE_VIP_INFO_SUCCESS","UPDATE_VIP_INFO_FAILED","GET_VIP_REQUESTS","GET_VIP_REQUESTS_SUCCESS","GET_VIP_REQUESTS_FAILED","GET_BATCH_TASKS","GET_BATCH_TASKS_SUCCESS","GET_BATCH_TASKS_FAILED","EDIT_BATCH_TASK","EDIT_BATCH_TASK_SUCCESS","EDIT_BATCH_TASK_FAILED","DELETE_BATCH_TASK","DELETE_BATCH_TASK_SUCCESS","DELETE_BATCH_TASK_FAILED","CLEAR_BATCH_TASK_MESSAGE","GET_CURRENT_BATCH_TASK","GET_CURRENT_BATCH_TASK_SUCCESS","GET_CURRENT_BATCH_TASK_FAILED","REMOVE_BATCH_Q","REMOVE_BATCH_Q_SUCCESS","REMOVE_BATCH_Q_FAILED","REMOVE_Q_FROM_BATCH","REMOVE_Q_FROM_BATCH_SUCCESS","REMOVE_Q_FROM_BATCH_FAILED","BATCH_REPLY_ACTION","BATCH_REPLY_ACTION_SUCCESS","BATCH_REPLY_ACTION_FAILED","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","GET_VIP_ORDERS","GET_VIP_ORDERS_SUCCESS","GET_VIP_ORDERS_FAILED","GET_CURRENT_VIP_REPORT","GET_CURRENT_VIP_REPORT_SUCCESS","GET_CURRENT_VIP_REPORT_FAILED","GET_VIP_PRODS_BY_GAMEID","GET_VIP_PRODS_BY_GAMEID_SUCCESS","GET_VIP_PRODS_BY_GAMEID_FAILED","EDIT_VIP_WIRE_REPORT","EDIT_VIP_WIRE_REPORT_SUCCESS","EDIT_VIP_WIRE_REPORT_FAILED","DELETE_VIP_WIRE_REPORT","DELETE_VIP_WIRE_REPORT_SUCCESS","DELETE_VIP_WIRE_REPORT_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getQuestionsByUser","getQuestionsByUserSuccess","getQuestionsByUserFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","getServiceStatisticsByHour","getServiceStatisticsByHourSuccess","getServiceStatisticsByHourFailed","clearMessage","getServiceConfig","getServiceConfigSuccess","favorQuestion","favorQuestionSuccess","favorQuestionFailed","addQuestionToBatch","addQuestionToBatchSuccess","addQuestionToBatchFailed","removeQuestionFromBatch","removeQuestionFromBatchSuccess","removeQuestionFromBatchFailed","addMultipleQuestionsToBatch","addMultipleQuestionsToBatchSuccess","addMultipleQuestionsToBatchFailed","addUserActionLog","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","sDate","action","batch_id","errors","ids","act","func","desc","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_PRESET_MESSAGE","GET_PRESET_MESSAGE_SUCCESS","GET_PRESET_MESSAGE_FAILED","EDIT_PRESET_MESSAGE","EDIT_PRESET_MESSAGE_SUCCESS","EDIT_PRESET_MESSAGE_FAILED","DELETE_PRESET_MESSAGE","DELETE_PRESET_MESSAGE_SUCCESS","DELETE_PRESET_MESSAGE_FAILED","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","editCplReply","editCplReplySuccess","editCplReplyFailed","editCplMediation","editCplMediationSuccess","editCplMediationFailed","deleteCplCase","deleteCplCaseSuccess","deleteCplCaseFailed","deleteCplCaseReply","deleteCplCaseReplySuccess","deleteCplCaseReplyFailed","deleteCplMediation","deleteCplMediationSuccess","deleteCplMediationFailed","moveCplCase","moveCplCaseSuccess","moveCplCaseFailed","editCplRef","editCplRefSuccess","editCplRefFailed","deleteCplRef","deleteCplRefSuccess","deleteCplRefFailed","addCplAttachment","addCplAttachmentSuccess","addCplAttachmentFailed","deleteCplAttachment","deleteCplAttachmentSuccess","deleteCplAttachmentFailed","dataType","records","record","affectedId","record_id","history","id","case_id","ref_id","attachment_id","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","getCurrentWhaleUser","getCurrentWhaleUserSuccess","getCurrentWhaleUserFailed","updateVipInfo","updateVipInfoSuccess","updateVipInfoFailed","getVipRequests","getVipRequestsSuccess","getVipRequestsFailed","game_id","uid","command","role_id","fields","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_USER_TASKS","GET_USER_TASKS_SUCCESS","GET_USER_TASKS_FAILED","getBatchTasks","getBatchTasksSuccess","getBatchTasksFailed","editBatchTask","editBatchTaskSuccess","editBatchTaskFailed","deleteBatchTask","deleteBatchTaskSuccess","deleteBatchTaskFailed","clearBatchTaskMessage","getCurrentBatchTask","getCurrentBatchTaskSuccess","getCurrentBatchTaskFailed","removeBatchQ","removeBatchQSuccess","removeBatchQFailed","removeQFromBatch","removeQFromBatchSuccess","removeQFromBatchFailed","batchReplyAction","batchReplyActionSuccess","batchReplyActionFailed","replyData","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","qid","allocation_cause","getVipOffers","getVipOffersSuccess","getVipOffersFailed","getVipProductsByGameId","getVipProductsByGameIdSuccess","getVipProductsByGameIdFailed","getVipOrders","getVipOrdersSuccess","getVipOrdersFailed","getCurrentVipReport","getCurrentVipReportSuccess","getCurrentVipReportFailed","editVipWireReport","editVipWireReportSuccess","editVipWireReportFailed","deleteVipWireReport","deleteVipWireReportSuccess","deleteVipWireReportFailed","report_id","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","GET_SERIAL_RECORDS","GET_SERIAL_RECORDS_SUCCESS","GET_SERIAL_RECORDS_FAILED","updatePassword","updatePasswordSuccess","updatePasswordFailed","getPresetMessage","getPresetMessageSuccess","getPresetMessageFailed","editPresetMessage","editPresetMessageSuccess","editPresetMessageFailed","deletePresetMessage","deletePresetMessageSuccess","deletePresetMessageFailed","clearPresetMessageMessage","account","password","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","fullname","email","passwordResetStatus","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","getUserTasks","getUserTasksSuccess","role","users","tasks","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","getServersByGameId","getServersSuccess","getServersFailed","getSerialEventRecords","getSerialEventRecordsSuccess","getSerialEventRecordsFailed","event_id","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","ErrorForbidden","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","TestTable","GoogleMaps","ModifyPassword","PresetMessageHome","CplCaseHome","CplCaseForm","CplCaseView","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","ServiceStatisticsByHour","QuestionsQueryHome","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","BatchListPage","BatchTaskView","WhaleUserHome","WhaleUserDashboard","RequestReportHome","VipOfferHome","VipOfferForm","VipOrdersHome","VipOrdersForm","GamesHome","GamesEditForm","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","eventsRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","objectSpread","Auth","AppMenu","stat","Dashboard","updated","preset_messages","updateOKMessage","Platform","msg","updField","toString","filter","deleted_id","currentRecord","OfflineCS","list","config_status","replies","re","mediations","attachments","mediation","refs","ref_case_list","reply","Games","Servers","user_tasks","AdminUsers","allocation","allocation_logs","allocation_quick_msg","allocationStatus","cs_members","ServiceAllocate","newList","logs","log","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","updatedField","newLog","all_records","game_list","vip_list","currentWhaleUser","requestData","not_allowed","VIP","vip","s","request_data","newRecord","newReqData","vip_offer_list","vip_orders_list","vip_prods","current_report","affectedRecord","VipOffers","report","current","allgames","antsHandleData","qCountData","csHandleData","csHandleAllocationData","antsHandleAllocationData","statReportData","games_list","user_history","add_favor_ok","Service","tmpGameIds","keys","status","q_batch_info","batch_info","q","is_batch","Number","parseInt","removed_q_id","question","is_favorite","updateQuestionData","question_type","question_status","cs_admins","ants_admins","reduce","prev","curr","game_name","statReplyData","_action$payload","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","test_list","BatchTasks","task","q_list","affectedRow","mode","batch_tasks","games","serial_list","Event","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","getPresetMessageData","editPresetMessageData","deletePresetMessageData","watchChangePassword","watchgetPresetMessageData","watchUpdatePresetMessageData","watchDeletePresetMessageData","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","platform_saga_marked4","platform_saga_marked5","platform_saga_marked6","platform_saga_marked7","platform_saga_marked8","platform_saga_marked9","moveCplRecord","addCplAttach","delCplCase","delCplCaseReply","delCplCaseAttachment","delCplMd","watchGetCurrentRecordData","watchEditRecord","watchEditCplReply","watchEditCplMediation","watchDeleteCpl","watchDeleteCplReply","watchDeleteCplMediation","watchMoveCplStatus","watchEditCplRef","watchDeleteCplRef","watchAddCplAttach","watchDelCplAttach","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","_ref5","offlinecs_saga_marked5","_ref6","offlinecs_saga_marked6","_ref7","offlinecs_saga_marked7","_ref8","offlinecs_saga_marked8","_ref9","offlinecs_saga_marked9","_ref10","_ref10$payload","saga_marked10","_ref11","saga_marked11","_ref12","saga_marked12","_ref13","saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","getUserTask","watchGetUserTasks","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","adminUsers_saga_marked4","adminUsers_saga_marked5","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","serviceAllocate_saga_marked10","serviceAllocate_saga_marked11","serviceAllocate_saga_marked12","serviceAllocate_saga_marked13","getQuestionsData","getCurrentQuestionData","getQuestionsByUserData","getTestData","getServiceStat","getServiceStatByHour","updateType","updateStatus","updateQuestionFavorite","addIdsToBatch","logUserAction","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchStatDataByHour","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","watchGetServiceConfig","watchGetRelaventUserData","watchupdateQuestionFavorite","watchAddQuestionToBatch","watchRemoveQuestionFromBatch","watchAddMultiToBatch","watchUserActionLog","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","service_saga_marked7","service_saga_marked8","service_saga_marked9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","service_saga_marked14","_ref14","service_saga_marked15","saga_marked16","_ref15","_ref15$payload","saga_marked17","_ref16","_ref16$payload","saga_marked18","saga_marked19","saga_marked20","saga_marked21","saga_marked22","saga_marked23","saga_marked24","saga_marked25","saga_marked26","saga_marked27","_context28","_marked28","_context29","_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","_marked33","_context34","_marked34","_context35","_marked35","_context36","_marked36","_context37","_marked37","getVipReqData","getVIP","getSingleVip","putVIP","updateVIPInfo","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","watchGetCurrentWhaleUser","watchUpdateVIPInfo","watchGetVipReqData","vipSaga","vip_saga_marked","beginTime","endTime","vip_saga_marked2","vip_saga_marked3","encodeURIComponent","vip_saga_marked4","vip_saga_marked5","_ref5$payload","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","vip_saga_marked12","vip_saga_marked13","vip_saga_marked14","vip_saga_marked15","vip_saga_marked16","vip_saga_marked17","getVipOrder","getProdsByGameId","delVIPWReport","watchGetOffers","watchGetOrders","watchGetCurrentReport","watchGetProdsByGameId","watchEditVipWireReport","watchDeleteVipWireReport","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","vipoffers_saga_marked4","vipoffers_saga_marked5","vipoffers_saga_marked6","vipoffers_saga_marked7","vipoffers_saga_marked8","vipoffers_saga_marked9","vipoffers_saga_marked10","vipoffers_saga_marked11","vipoffers_saga_marked12","vipoffers_saga_marked13","getCurrentBatch","batchReply","delBatchTask","removeBatchQuestions","watchGetBatchTasksData","watchEditBatchRecord","watchDeleteBatchRecord","watchgetCurrentBatch","watchgetRemoveBatchQ","watchgetRemoveQFromBatch","watchBatchReply","batchTaskSaga","batch_saga_marked","batch_saga_marked2","batch_saga_marked3","batch_saga_marked4","batch_saga_marked5","batch_saga_marked6","batch_saga_marked7","batch_saga_marked8","batch_saga_marked9","batch_saga_marked10","batch_saga_marked11","batch_saga_marked12","batch_saga_marked13","batch_saga_marked14","batch_saga_marked15","getSerialRecords","watchGetSerialRecords","EventSaga","event_saga_marked","event_saga_marked2","event_saga_marked3","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3afcb169.chunk.js","sourcesContent":["export const GET_QUESTIONS = 'GET_QUESTIONS';\r\nexport const GET_QUESTIONS_SUCCESS = 'GET_QUESTIONS_SUCCESS';\r\nexport const GET_QUESTIONS_FAILED = 'GET_QUESTIONS_FAILED';\r\n\r\nexport const UPDATE_QUESTION_TYPE = 'UPDATE_QUESTION_TYPE';\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = 'UPDATE_QUESTION_TYPE_SUCCESS';\r\nexport const UPDATE_QUESTION_TYPE_FAILED = 'UPDATE_QUESTION_TYPE_FAILED';\r\n\r\nexport const UPDATE_QUESTION_STATUS = 'UPDATE_QUESTION_STATUS';\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = 'UPDATE_QUESTION_STATUS_SUCCESS';\r\nexport const UPDATE_QUESTION_STATUS_FAILED = 'UPDATE_QUESTION_STATUS_FAILED';\r\n\r\nexport const GET_TEST_DATA = 'GET_TEST_DATA';\r\nexport const GET_TEST_DATA_SUCCESS = 'GET_TEST_DATA_SUCCESS';\r\nexport const GET_TEST_DATA_FAILED = 'GET_TEST_DATA_FAILED';\r\n\r\nexport const GET_OVERVIEW = 'GET_OVERVIEW';\r\nexport const GET_OVERVIEW_SUCCESS = 'GET_OVERVIEW_SUCCESS';\r\nexport const GET_OVERVIEW_FAILED = 'GET_OVERVIEW_FAILED';\r\n\r\nexport const GET_CURRENT_QUESTION = 'GET_CURRENT_QUESTION';\r\nexport const GET_CURRENT_QUESTION_SUCCESS = 'GET_CURRENT_QUESTION_SUCCESS';\r\nexport const GET_CURRENT_QUESTION_FAILED = 'GET_CURRENT_QUESTION_FAILED';\r\n\r\nexport const ALLOCATE_QUESTION = 'ALLOCATE_QUESTION';\r\nexport const ALLOCATE_QUESTION_SUCCESS = 'ALLOCATE_QUESTION_SUCCESS';\r\nexport const ALLOCATE_QUESTION_FAILED = 'ALLOCATE_QUESTION_FAILED';\r\n\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n\r\nexport const REPLY_QUESTION = 'REPLY_QUESTION';\r\nexport const REPLY_QUESTION_SUCCESS = 'REPLY_QUESTION_SUCCESS';\r\nexport const REPLY_QUESTION_FAILED = 'REPLY_QUESTION_FAILED';\r\n\r\nexport const CLOSE_QUESTION = 'CLOSE_QUESTION';\r\nexport const CLOSE_QUESTION_SUCCESS = 'CLOSE_QUESTION_SUCCESS';\r\nexport const CLOSE_QUESTION_FAILED = 'CLOSE_QUESTION_FAILED';\r\n\r\nexport const GET_SERVICE_STATISTICS = 'GET_SERVICE_STATISTICS';\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = 'GET_SERVICE_STATISTICS_SUCCESS';\r\nexport const GET_SERVICE_STATISTICS_FAILED = 'GET_SERVICE_STATISTICS_FAILED';\r\n\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR = 'GET_SERVICE_STATISTICS_BY_HOUR';\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS =\r\n  'GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS';\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_FAILED =\r\n  'GET_SERVICE_STATISTICS_BY_HOUR_FAILED';\r\n\r\nexport const GET_SERVICE_CONFIG = 'GET_SERVICE_CONFIG';\r\nexport const GET_SERVICE_CONFIG_SUCCESS = 'GET_SERVICE_CONFIG_SUCCESS';\r\n\r\nexport const GET_QUESTIONS_BY_USER = 'GET_QUESTIONS_BY_USER';\r\nexport const GET_QUESTIONS_BY_USER_SUCCESS = 'GET_QUESTIONS_BY_USER_SUCCESS';\r\nexport const GET_QUESTIONS_BY_USER_FAILED = 'GET_QUESTIONS_BY_USER_FAILED';\r\n\r\nexport const FAVORITE_QUESTION_ACTION = 'FAVORITE_QUESTION_ACTION';\r\nexport const FAVORITE_QUESTION_ACTION_SUCCESS =\r\n  'FAVORITE_QUESTION_ACTION_SUCCESS';\r\nexport const FAVORITE_QUESTION_ACTION_FAILED =\r\n  'FAVORITE_QUESTION_ACTION_FAILED';\r\n\r\nexport const ADD_QUESTION_TO_BATCH = 'ADD_QUESTION_TO_BATCH';\r\nexport const ADD_QUESTION_TO_BATCH_SUCCESS = 'ADD_QUESTION_TO_BATCH_SUCCESS';\r\nexport const ADD_QUESTION_TO_BATCH_FAILED = 'ADD_QUESTION_TO_BATCH_FAILED';\r\n\r\nexport const REMOVE_QUESTION_FROM_BATCH = 'REMOVE_QUESTION_FROM_BATCH';\r\nexport const REMOVE_QUESTION_FROM_BATCH_SUCCESS =\r\n  'REMOVE_QUESTION_FROM_BATCH_SUCCESS';\r\nexport const REMOVE_QUESTION_FROM_BATCH_FAILED =\r\n  'REMOVE_QUESTION_FROM_BATCH_FAILED';\r\n\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH';\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS';\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED';\r\n\r\nexport const ADD_USER_ACTION_LOG = 'ADD_USER_ACTION_LOG';\r\n","export const GET_OCSDATA_SUCCESS = \"GET_OCSDATA_SUCCESS\";\r\nexport const GET_OCSDATA_FAILED = \"GET_OCSDATA_FAILED\";\r\nexport const ADD_OCSDATA_SUCCESS = \"ADD_OCSDATA_SUCCESS\";\r\nexport const ADD_OCSDATA_FAILED = \"ADD_OCSDATA_FAILED\";\r\nexport const LOADING_BEGIN = \"LOADING_BEGIN\";\r\nexport const LOADING_END = \"LOADING_END\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";\r\nexport const GET_CURRENT_RECORD = \"GET_CURRENT_RECORD\";\r\nexport const CLEAR_CURRENT_RECORD = \"CLEAR_CURRENT_RECORD\";\r\nexport const GET_CSMASTER_SUCCESS = \"GET_CSMASTER_SUCCESS\";\r\nexport const GET_CSMASTER_FAILED = \"GET_CSMASTER_FAILED\";\r\n\r\nexport const GET_GOV_DATA = \"GET_GOV_DATA\";\r\nexport const GET_GOV_DATA_SUCCESS = \"GET_GOV_DATA_SUCCESS\";\r\nexport const GET_GOV_DATA_FAILED = \"GET_GOV_DATA_FAILED\";\r\n\r\nexport const EDIT_RECORD = \"EDIT_RECORD\";\r\nexport const EDIT_RECORD_SUCCESS = \"EDIT_RECORD_SUCCESS\";\r\nexport const EDIT_RECORD_FAILED = \"EDIT_RECORD_FAILED\";\r\n\r\nexport const GET_CURRENT = \"GET_CURRENT\";\r\nexport const GET_CURRENT_SUCCESS = \"GET_CURRENT_SUCCESS\";\r\nexport const GET_CURRENT_FAILED = \"GET_CURRENT_FAILED\";\r\n\r\nexport const EDIT_CPL_REPLY = \"EDIT_CPL_REPLY\";\r\nexport const EDIT_CPL_REPLY_SUCCESS = \"EDIT_CPL_REPLY_SUCCESS\";\r\nexport const EDIT_CPL_REPLY_FAILED = \"EDIT_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL = \"DELETE_CPL\";\r\nexport const DELETE_CPL_SUCCESS = \"DELETE_CPL_SUCCESS\";\r\nexport const DELETE_CPL_FAILED = \"DELETE_CPL_FAILED\";\r\n\r\nexport const MOVE_CPL = \"MOVE_CPL\";\r\nexport const MOVE_CPL_SUCCESS = \"MOVE_CPL_SUCCESS\";\r\nexport const MOVE_CPL_FAILED = \"MOVE_CPL_FAILED\";\r\n\r\nexport const EDIT_CPL_MEDIATION = \"EDIT_CPL_MEDIATION\";\r\nexport const EDIT_CPL_MEDIATION_SUCCESS = \"EDIT_CPL_MEDIATION_SUCCESS\";\r\nexport const EDIT_CPL_MEDIATION_FAILED = \"EDIT_CPL_MEDIATION_FAILED\";\r\n\r\nexport const DELETE_CPL_REPLY = \"DELETE_CPL_REPLY\";\r\nexport const DELETE_CPL_REPLY_SUCCESS = \"DELETE_CPL_REPLY_SUCCESS\";\r\nexport const DELETE_CPL_REPLY_FAILED = \"DELETE_CPL_REPLY_FAILED\";\r\n\r\nexport const DELETE_CPL_MEDIATION = \"DELETE_CPL_MEDIATION\";\r\nexport const DELETE_CPL_MEDIATION_SUCCESS = \"DELETE_CPL_MEDIATION_SUCCESS\";\r\nexport const DELETE_CPL_MEDIATION_FAILED = \"DELETE_CPL_MEDIATION_FAILED\";\r\n\r\nexport const EDIT_CPL_REF = \"EDIT_CPL_REF\";\r\nexport const EDIT_CPL_REF_SUCCESS = \"EDIT_CPL_REF_SUCCESS\";\r\nexport const EDIT_CPL_REF_FAILED = \"EDIT_CPL_REF_FAILED\";\r\nexport const DELETE_CPL_REF = \"DELETE_CPL_REF\";\r\nexport const DELETE_CPL_REF_SUCCESS = \"DELETE_CPL_REF_SUCCESS\";\r\nexport const DELETE_CPL_REF_FAILED = \"DELETE_CPL_REF_FAILED\";\r\n\r\nexport const ADD_CPL_ATTACHMENT = \"ADD_CPL_ATTACHMENT\";\r\nexport const ADD_CPL_ATTACHMENT_SUCCESS = \"ADD_CPL_ATTACHMENT_SUCCESS\";\r\nexport const ADD_CPL_ATTACHMENT_FAILED = \"ADD_CPL_ATTACHMENT_FAILED\";\r\n\r\nexport const DELETE_CPL_ATTACHMENT = \"DELETE_CPL_ATTACHMENT\";\r\nexport const DELETE_CPL_ATTACHMENT_SUCCESS = \"DELETE_CPL_ATTACHMENT_SUCCESS\";\r\nexport const DELETE_CPL_ATTACHMENT_FAILED = \"DELETE_CPL_ATTACHMENT_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n\r\nexport const GET_CURRENT_WHALE_USER = \"GET_CURRENT_WHALE_USER\";\r\nexport const GET_CURRENT_WHALE_USER_SUCCESS = \"GET_CURRENT_WHALE_USER_SUCCESS\";\r\nexport const GET_CURRENT_WHALE_USER_FAILED = \"GET_CURRENT_WHALE_USER_FAILED\";\r\n\r\nexport const UPDATE_VIP_INFO = \"UPDATE_VIP_INFO\";\r\nexport const UPDATE_VIP_INFO_SUCCESS = \"UPDATE_VIP_INFO_SUCCESS\";\r\nexport const UPDATE_VIP_INFO_FAILED = \"UPDATE_VIP_INFO_FAILED\";\r\n\r\nexport const GET_VIP_REQUESTS = \"GET_VIP_REQUESTS\";\r\nexport const GET_VIP_REQUESTS_SUCCESS = \"GET_VIP_REQUESTS_SUCCESS\";\r\nexport const GET_VIP_REQUESTS_FAILED = \"GET_VIP_REQUESTS_FAILED\";\r\n","export const GET_BATCH_TASKS = \"GET_BATCH_TASKS\";\r\nexport const GET_BATCH_TASKS_SUCCESS = \"GET_BATCH_TASKS_SUCCESS\";\r\nexport const GET_BATCH_TASKS_FAILED = \"GET_BATCH_TASKS_FAILED\";\r\n\r\nexport const EDIT_BATCH_TASK = \"EDIT_BATCH_TASK\";\r\nexport const EDIT_BATCH_TASK_SUCCESS = \"EDIT_BATCH_TASK_SUCCESS\";\r\nexport const EDIT_BATCH_TASK_FAILED = \"EDIT_BATCH_TASK_FAILED\";\r\nexport const DELETE_BATCH_TASK = \"DELETE_BATCH_TASK\";\r\nexport const DELETE_BATCH_TASK_SUCCESS = \"DELETE_BATCH_TASK_SUCCESS\";\r\nexport const DELETE_BATCH_TASK_FAILED = \"DELETE_BATCH_TASK_FAILED\";\r\n\r\nexport const CLEAR_BATCH_TASK_MESSAGE = \"CLEAR_BATCH_TASK_MESSAGE\";\r\n\r\nexport const GET_CURRENT_BATCH_TASK = \"GET_CURRENT_BATCH_TASK\";\r\nexport const GET_CURRENT_BATCH_TASK_SUCCESS = \"GET_CURRENT_BATCH_TASK_SUCCESS\";\r\nexport const GET_CURRENT_BATCH_TASK_FAILED = \"GET_CURRENT_BATCH_TASK_FAILED\";\r\n\r\nexport const REMOVE_BATCH_Q = \"REMOVE_BATCH_Q\";\r\nexport const REMOVE_BATCH_Q_SUCCESS = \"REMOVE_BATCH_Q_SUCCESS\";\r\nexport const REMOVE_BATCH_Q_FAILED = \"REMOVE_BATCH_Q_FAILED\";\r\nexport const REMOVE_Q_FROM_BATCH = \"REMOVE_Q_FROM_BATCH\";\r\nexport const REMOVE_Q_FROM_BATCH_SUCCESS = \"REMOVE_Q_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_Q_FROM_BATCH_FAILED = \"REMOVE_Q_FROM_BATCH_FAILED\";\r\n\r\nexport const BATCH_REPLY_ACTION = \"BATCH_REPLY_ACTION\";\r\nexport const BATCH_REPLY_ACTION_SUCCESS = \"BATCH_REPLY_ACTION_SUCCESS\";\r\nexport const BATCH_REPLY_ACTION_FAILED = \"BATCH_REPLY_ACTION_FAILED\";\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n\r\nexport const GET_VIP_ORDERS = \"GET_VIP_ORDERS\";\r\nexport const GET_VIP_ORDERS_SUCCESS = \"GET_VIP_ORDERS_SUCCESS\";\r\nexport const GET_VIP_ORDERS_FAILED = \"GET_VIP_ORDERS_FAILED\";\r\n\r\nexport const GET_CURRENT_VIP_REPORT = \"GET_CURRENT_VIP_REPORT\";\r\nexport const GET_CURRENT_VIP_REPORT_SUCCESS = \"GET_CURRENT_VIP_REPORT_SUCCESS\";\r\nexport const GET_CURRENT_VIP_REPORT_FAILED = \"GET_CURRENT_VIP_REPORT_FAILED\";\r\n\r\nexport const GET_VIP_PRODS_BY_GAMEID = \"GET_VIP_PRODS_BY_GAMEID\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_SUCCESS =\r\n  \"GET_VIP_PRODS_BY_GAMEID_SUCCESS\";\r\nexport const GET_VIP_PRODS_BY_GAMEID_FAILED = \"GET_VIP_PRODS_BY_GAMEID_FAILED\";\r\n\r\nexport const EDIT_VIP_WIRE_REPORT = \"EDIT_VIP_WIRE_REPORT\";\r\nexport const EDIT_VIP_WIRE_REPORT_SUCCESS = \"EDIT_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const EDIT_VIP_WIRE_REPORT_FAILED = \"EDIT_VIP_WIRE_REPORT_FAILED\";\r\n\r\nexport const DELETE_VIP_WIRE_REPORT = \"DELETE_VIP_WIRE_REPORT\";\r\nexport const DELETE_VIP_WIRE_REPORT_SUCCESS = \"DELETE_VIP_WIRE_REPORT_SUCCESS\";\r\nexport const DELETE_VIP_WIRE_REPORT_FAILED = \"DELETE_VIP_WIRE_REPORT_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  ADD_USER_ACTION_LOG\r\n} from './constants';\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getQuestionsByUser = (question_id: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER,\r\n  payload: question_id\r\n});\r\n\r\nexport const getQuestionsByUserSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsByUserFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatisticsByHour = (sDate: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR,\r\n  payload: { sDate }\r\n});\r\n\r\nexport const getServiceStatisticsByHourSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsByHourFailed = (\r\n  error: string\r\n): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n\r\nexport const getServiceConfig = (): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG\r\n});\r\n\r\nexport const getServiceConfigSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const favorQuestion = (qId: number, action: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION,\r\n  payload: { qId, action }\r\n});\r\n\r\nexport const favorQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const favorQuestionFailed = (error: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addQuestionToBatch = (\r\n  question_id: Number,\r\n  batch_id: Number\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH,\r\n  payload: { question_id, batch_id }\r\n});\r\n\r\nexport const addQuestionToBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addQuestionToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQuestionFromBatch = (\r\n  question_id: Number\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQuestionFromBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQuestionFromBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//將多個問題一次加入某個批次\r\n\r\nexport const addMultipleQuestionsToBatch = (\r\n  batch_id: number,\r\n  ids: []\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  payload: { batch_id, ids }\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const addUserActionLog = (\r\n  act: string,\r\n  func: string,\r\n  desc: string\r\n): ServiceAction => ({\r\n  type: ADD_USER_ACTION_LOG,\r\n  payload: { act, func, desc }\r\n});\r\n","/* AUTH */\r\nexport const UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\r\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\r\nexport const UPDATE_PASSWORD_FAILED = \"UPDATE_PASSWORD_FAILED\";\r\n\r\nexport const GET_PRESET_MESSAGE = \"GET_PRESET_MESSAGE\";\r\nexport const GET_PRESET_MESSAGE_SUCCESS = \"GET_PRESET_MESSAGE_SUCCESS\";\r\nexport const GET_PRESET_MESSAGE_FAILED = \"GET_PRESET_MESSAGE_FAILED\";\r\nexport const EDIT_PRESET_MESSAGE = \"EDIT_PRESET_MESSAGE\";\r\nexport const EDIT_PRESET_MESSAGE_SUCCESS = \"EDIT_PRESET_MESSAGE_SUCCESS\";\r\nexport const EDIT_PRESET_MESSAGE_FAILED = \"EDIT_PRESET_MESSAGE_FAILED\";\r\nexport const DELETE_PRESET_MESSAGE = \"DELETE_PRESET_MESSAGE\";\r\nexport const DELETE_PRESET_MESSAGE_SUCCESS = \"DELETE_PRESET_MESSAGE_SUCCESS\";\r\nexport const DELETE_PRESET_MESSAGE_FAILED = \"DELETE_PRESET_MESSAGE_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA,\r\n  payload: dataType\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_SUCCESS,\r\n  payload: records\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editRecord = (\r\n  dataType: string,\r\n  record: FormData\r\n): OfflineCsAction => ({\r\n  type: EDIT_RECORD,\r\n  payload: { dataType, record }\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_RECORD_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_RECORD_FAILED,\r\n  payload: errors\r\n});\r\nexport const getCurrentRecord = (\r\n  dataType: string,\r\n  record_id: int,\r\n  history: {}\r\n): OfflineCsAction => ({\r\n  type: GET_CURRENT,\r\n  payload: { dataType, record_id, history }\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n  type: GET_CURRENT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_CURRENT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editCplReply = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY,\r\n  payload: record\r\n});\r\n\r\nexport const editCplReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplReplyFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplMediation = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION,\r\n  payload: record\r\n});\r\n\r\nexport const editCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCase = (id: string, history: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCaseReply = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplCaseReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseReplyFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\nexport const deleteCplMediation = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const moveCplCase = (id: string, record: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL,\r\n  payload: { id, record }\r\n});\r\n\r\nexport const moveCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const moveCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: MOVE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const editCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const deleteCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//add_attachment_json\r\n\r\nexport const addCplAttachment = (record: FormData): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT,\r\n  payload: record\r\n});\r\n\r\nexport const addCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplAttachment = (\r\n  attachment_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT,\r\n  payload: attachment_id\r\n});\r\n\r\nexport const deleteCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentWhaleUser = (\r\n  game_id: string,\r\n  role_id: string,\r\n  history: {}\r\n): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER,\r\n  payload: { game_id, role_id, history }\r\n});\r\n\r\nexport const getCurrentWhaleUserSuccess = (record: {}): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentWhaleUserFailed = (error: string): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateVipInfo = (\r\n  game_id: string,\r\n  role_id: String,\r\n  fields: {}\r\n): VipAction => ({\r\n  type: UPDATE_VIP_INFO,\r\n  payload: { game_id, role_id, fields }\r\n});\r\n\r\nexport const updateVipInfoSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_INFO_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const updateVipInfoFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_INFO_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipRequests = (condition: {}): VipAction => ({\r\n  type: GET_VIP_REQUESTS,\r\n  payload: condition\r\n});\r\n\r\nexport const getVipRequestsSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_REQUESTS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipRequestsFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_REQUESTS_FAILED,\r\n  payload: error\r\n});\r\n","export const GET_USERS = \"GET_USERS\";\r\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\";\r\nexport const GET_USERS_FAILED = \"GET_USERS_FAILED\";\r\n\r\nexport const GET_USER_TASKS = \"GET_USER_TASKS\";\r\nexport const GET_USER_TASKS_SUCCESS = \"GET_USER_TASKS_SUCCESS\";\r\nexport const GET_USER_TASKS_FAILED = \"GET_USER_TASKS_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\ntype BatchTaskAction = { type: string, payload: {} | string };\r\n\r\nexport const getBatchTasks = (): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS\r\n});\r\n\r\nexport const getBatchTasksSuccess = (data: []): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getBatchTasksFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editBatchTask = (record: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK,\r\n  payload: record\r\n});\r\n\r\nexport const editBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editBatchTaskFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteBatchTask = (id: string, history: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteBatchTaskFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const clearBatchTaskMessage = (): BatchTaskAction => ({\r\n  type: CLEAR_BATCH_TASK_MESSAGE\r\n});\r\n\r\nexport const getCurrentBatchTask = (\r\n  record_id: int,\r\n  history: {}\r\n): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK,\r\n  payload: { record_id, history }\r\n});\r\n\r\nexport const getCurrentBatchTaskSuccess = (record: {}): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentBatchTaskFailed = (error: string): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const removeBatchQ = (batch_id: number): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q,\r\n  payload: batch_id\r\n});\r\n\r\nexport const removeBatchQSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeBatchQFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQFromBatch = (question_id: number): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQFromBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQFromBatchFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//回覆批次問題\r\n//data: `batch_id=${batch_id}&new_type=${new_type}&post_content=${post_content}&mode=${mode}`,\r\nexport const batchReplyAction = (replyData: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION,\r\n  payload: replyData\r\n});\r\n\r\nexport const batchReplyActionSuccess = (result: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const batchReplyActionFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_FAILED,\r\n  payload: errors\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipProductsByGameId = (game_id: string): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipProductsByGameIdSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipProductsByGameIdFailed = (\r\n  error: string\r\n): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipOrders = (): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS\r\n});\r\n\r\nexport const getVipOrdersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOrdersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentVipReport = (\r\n  report_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT,\r\n  payload: { report_id, history }\r\n});\r\n\r\nexport const getCurrentVipReportSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentVipReportFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editVipWireReport = (record: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT,\r\n  payload: { record }\r\n});\r\n\r\nexport const editVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteVipWireReport = (record_id: string): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors\r\n});\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\nexport const LAYOUT_DETACHED = 'detached';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","export const GET_SERIAL_RECORDS = 'GET_SERIAL_RECORDS';\r\nexport const GET_SERIAL_RECORDS_SUCCESS = 'GET_SERIAL_RECORDS_SUCCESS';\r\nexport const GET_SERIAL_RECORDS_FAILED = 'GET_SERIAL_RECORDS_FAILED';\r\n","// @flow\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_FAILED,\r\n  GET_PRESET_MESSAGE,\r\n  GET_PRESET_MESSAGE_SUCCESS,\r\n  GET_PRESET_MESSAGE_FAILED,\r\n  EDIT_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE_SUCCESS,\r\n  EDIT_PRESET_MESSAGE_FAILED,\r\n  DELETE_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE_SUCCESS,\r\n  DELETE_PRESET_MESSAGE_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype PlatformAction = { type: string, payload: {} | string };\r\n\r\nexport const updatePassword = (\r\n  account: string,\r\n  password: string\r\n): PlatformAction => ({\r\n  type: UPDATE_PASSWORD,\r\n  payload: { account, password }\r\n});\r\n\r\nexport const updatePasswordSuccess = (): PlatformAction => ({\r\n  type: UPDATE_PASSWORD_SUCCESS\r\n});\r\n\r\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\r\n  type: UPDATE_PASSWORD_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getPresetMessage = (): OfflineCsAction => ({\r\n  type: GET_PRESET_MESSAGE\r\n});\r\n\r\nexport const getPresetMessageSuccess = (records: []): OfflineCsAction => ({\r\n  type: GET_PRESET_MESSAGE_SUCCESS,\r\n  payload: records\r\n});\r\n\r\nexport const getPresetMessageFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_PRESET_MESSAGE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editPresetMessage = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_PRESET_MESSAGE,\r\n  payload: record\r\n});\r\n\r\nexport const editPresetMessageSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_PRESET_MESSAGE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editPresetMessageFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: EDIT_PRESET_MESSAGE_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deletePresetMessage = (id: string): OfflineCsAction => ({\r\n  type: DELETE_PRESET_MESSAGE,\r\n  payload: id\r\n});\r\n\r\nexport const deletePresetMessageSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deletePresetMessageFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\r\n  payload: errors\r\n});\r\n\r\nexport const clearPresetMessageMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\n\r\nexport const changeLayout = (layout: string): LayoutAction => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = (): LayoutAction => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = (): LayoutAction => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = (): LayoutAction => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  //console.log(\"setAuthToken\", token);\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n  const user = getLoggedInUser();\r\n  if (!user) {\r\n    return false;\r\n  }\r\n  const decoded = jwtDecode(user.token);\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    console.warn(\"access token expired\");\r\n    return false;\r\n  } else {\r\n    setAuthToken(user.token);\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n  const cookies = new Cookies();\r\n  const user = cookies.get(\"user\");\r\n  //console.log(\"getLoggedInUser\", user);\r\n  return user ? (typeof user == \"object\" ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\ntype AuthAction = { type: string, payload: {} | string };\r\n\r\nexport const loginUser = (username: string, password: string): AuthAction => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user: string): AuthAction => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error: string): AuthAction => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user: {}): AuthAction => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error: string): AuthAction => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history: any): AuthAction => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username: string): AuthAction => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n  type: GET_USERS,\r\n  payload: role\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getUserTasks = (): AdminUserAction => ({\r\n  type: GET_USER_TASKS\r\n});\r\n\r\nexport const getUserTasksSuccess = (tasks: {}): AdminUserAction => ({\r\n  type: GET_USER_TASKS_SUCCESS,\r\n  payload: tasks\r\n});\r\n\r\nexport const getUserTasksFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USER_TASKS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\ntype DefaultMenuAction = { type: string, payload: {} };\r\n\r\nexport const initMenu = (): DefaultMenuAction => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","import {\r\n  GET_SERIAL_RECORDS,\r\n  GET_SERIAL_RECORDS_SUCCESS,\r\n  GET_SERIAL_RECORDS_FAILED\r\n} from './constants';\r\n\r\ntype EventAction = { type: string, payload: {} | string };\r\n\r\nexport const getSerialEventRecords = (event_id: Number): EventAction => ({\r\n  type: GET_SERIAL_RECORDS,\r\n  payload: event_id\r\n});\r\n\r\nexport const getSerialEventRecordsSuccess = (data: []): EventAction => ({\r\n  type: GET_SERIAL_RECORDS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getSerialEventRecordsFailed = (error: string): EventAction => ({\r\n  type: GET_SERIAL_RECORDS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Loadable from 'react-loadable';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst DetachedLayout = Loadable({\r\n    loader: () => import('../layouts/Detached'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent: any) => {\r\n    type HOCProps = {\r\n        layout: { layoutType?: string },\r\n    };\r\n    const HOC = class extends Component<HOCProps> {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                case layoutConstants.LAYOUT_DETACHED:\r\n                    layoutCls = DetachedLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\n\r\n// lazy load all the views\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\nconst EcommerceDashboard = React.lazy(() =>\r\n  import('../pages/dashboards/Ecommerce')\r\n);\r\nconst CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\r\n//*add new\r\nconst AdminDashboard = React.lazy(() => import('../pages/dashboards/Admin'));\r\n// apps\r\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\r\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\r\nconst ProjectDetail = React.lazy(() => import('../pages/apps/ProjectDetail'));\r\n// - ecommece pages\r\nconst EcommerceProducts = React.lazy(() =>\r\n  import('../pages/apps/Ecommerce/Products')\r\n);\r\nconst ProductDetails = React.lazy(() =>\r\n  import('../pages/apps/Ecommerce/ProductDetails')\r\n);\r\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\r\nconst OrderDetails = React.lazy(() =>\r\n  import('../pages/apps/Ecommerce/OrderDetails')\r\n);\r\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\r\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\r\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\r\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\r\n// - kanban\r\nconst Kanban = React.lazy(() => import('../pages/apps/Kanban/'));\r\n\r\n// - email\r\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\r\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\r\n\r\n// pages\r\nconst Starter = React.lazy(() => import('../pages/Starter'));\r\nconst Profile = React.lazy(() => import('../pages/profile'));\r\nconst ErrorPageNotFound = React.lazy(() =>\r\n  import('../pages/error/PageNotFound')\r\n);\r\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\r\nconst ErrorForbidden = React.lazy(() =>\r\n  import('../pages/error/ErrorForbidden')\r\n);\r\n\r\n// - other\r\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\r\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\r\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\r\n\r\n// uikit\r\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\r\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\r\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\r\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\r\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\r\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\r\nconst General = React.lazy(() => import('../pages/uikit/General'));\r\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\r\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\r\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\r\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\r\n// forms\r\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\r\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\r\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\r\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\r\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\r\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\r\n// charts\r\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\r\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\r\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\r\n// tables\r\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\r\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\r\nconst TestTable = React.lazy(() => import('../pages/tables/TestTable'));\r\n\r\n// maps\r\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\r\n\r\n//platform\r\nconst ModifyPassword = React.lazy(() =>\r\n  import('../pages/platform/ModifyPassword')\r\n);\r\n\r\nconst PresetMessageHome = React.lazy(() =>\r\n  import('../pages/platform/preset_messages/index')\r\n);\r\n\r\n//offline cs\r\nconst CplCaseHome = React.lazy(() =>\r\n  import('../pages/offline/cpl_case/CplCaseHome')\r\n);\r\nconst CplCaseForm = React.lazy(() =>\r\n  import('../pages/offline/cpl_case/CplCaseForm')\r\n);\r\n\r\nconst CplCaseView = React.lazy(() =>\r\n  import('../pages/offline/cpl_case/CplCaseView')\r\n);\r\n\r\nconst GovLetterHome = React.lazy(() =>\r\n  import('../pages/offline/gov_letter/GovLetterHome')\r\n);\r\nconst PersonalVisitHome = React.lazy(() =>\r\n  import('../pages/offline/personal_visit/PersonalVisitHome')\r\n);\r\nconst PersonalVisitForm = React.lazy(() =>\r\n  import('../pages/offline/personal_visit/PersonalVisitForm')\r\n);\r\n\r\nconst GovLetterForm = React.lazy(() =>\r\n  import('../pages/offline/gov_letter/GovLetterForm')\r\n);\r\n\r\n//service\r\n\r\nconst ServiceOverview = React.lazy(() =>\r\n  import('../pages/service/questions/overview')\r\n);\r\nconst ServiceStatistics = React.lazy(() =>\r\n  import('../pages/service/statistics')\r\n);\r\n\r\nconst ServiceStatisticsByHour = React.lazy(() =>\r\n  import('../pages/service/statistics/ServiceStatisticsByHour')\r\n);\r\n\r\nconst QuestionsQueryHome = React.lazy(() =>\r\n  import('../pages/service/questions/query/QueryHome')\r\n);\r\n\r\nconst AllocateListPage = React.lazy(() => import('../pages/service/allocate'));\r\nconst QuesionsListPage = React.lazy(() => import('../pages/service/questions'));\r\nconst SingleQuestionPage = React.lazy(() =>\r\n  import('../pages/service/questions/view')\r\n);\r\n\r\nconst TestPage = React.lazy(() =>\r\n  import('../pages/service/questions/TestPage')\r\n);\r\n\r\nconst BatchListPage = React.lazy(() => import('../pages/service/batch'));\r\nconst BatchTaskView = React.lazy(() =>\r\n  import('../pages/service/batch/BatchTaskView')\r\n);\r\n\r\n//vip\r\nconst WhaleUserHome = React.lazy(() =>\r\n  import('../pages/vip/whale_users/WhaleUserHome')\r\n);\r\n\r\n///vip/user_dashboard/${gameId}?\r\nconst WhaleUserDashboard = React.lazy(() =>\r\n  import('../pages/vip/whale_users/UserDashboard')\r\n);\r\n\r\nconst RequestReportHome = React.lazy(() =>\r\n  import('../pages/vip/whale_users/RequestReportHome')\r\n);\r\n\r\nconst VipOfferHome = React.lazy(() => import('../pages/vip/offers/index'));\r\nconst VipOfferForm = React.lazy(() => import('../pages/vip/offers/form'));\r\nconst VipOrdersHome = React.lazy(() =>\r\n  import('../pages/vip/offers/VipOrdersHome')\r\n);\r\nconst VipOrdersForm = React.lazy(() =>\r\n  import('../pages/vip/offers/VipOrdersForm')\r\n);\r\n\r\n//Games\r\nconst GamesHome = React.lazy(() => import('../pages/games'));\r\nconst GamesEditForm = React.lazy(() => import('../pages/games/form'));\r\nconst ServerHome = React.lazy(() => import('../pages/games/ServerHome'));\r\n\r\n//event\r\n\r\nconst SerialRecordsHome = React.lazy(() =>\r\n  import('../pages/events/SerialRecordsHome')\r\n);\r\n\r\n// handle auth and authorization\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      if (!isUserAuthenticated()) {\r\n        // not logged in so redirect to login page with the return url\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: '/account/login', state: { from: props.location } }}\r\n          />\r\n        );\r\n      }\r\n\r\n      const loggedInUser = getLoggedInUser();\r\n      // check if route is restricted by role\r\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\r\n        // role not authorised so redirect to home page\r\n        return <Redirect to={{ pathname: '/' }} />;\r\n      }\r\n\r\n      // authorised so return component\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n  path: '/',\r\n  exact: true,\r\n  component: () => <Redirect to='/dashboard/service' />,\r\n  route: PrivateRoute\r\n};\r\n\r\n// dashboards\r\nconst myDashboardRoutes = {\r\n  path: '/mydashboard',\r\n  name: '我的',\r\n  icon: 'dripicons-meter',\r\n  header: 'Navigation',\r\n  children: [\r\n    {\r\n      path: '/mydashboard/ecommerce',\r\n      name: 'Ecommerce',\r\n      badge: {\r\n        variant: 'success',\r\n        text: '3'\r\n      },\r\n      component: EcommerceDashboard,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/mydashboard/crm',\r\n      name: 'CRM',\r\n      component: CRMDashboard,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n//official dashboards\r\nconst dashboardRoutes = {\r\n  path: '/dashboard',\r\n  name: 'Dashboard',\r\n  icon: 'dripicons-meter',\r\n  header: 'Navigation',\r\n  children: [\r\n    {\r\n      path: '/dashboard/service',\r\n      name: '客服相關',\r\n      component: AdminDashboard,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n// apps\r\nconst appRoutes = {\r\n  path: '/apps',\r\n  name: 'Apps',\r\n  icon: 'dripicons-view-apps',\r\n  children: [\r\n    {\r\n      path: '/apps/calendar',\r\n      name: 'Calendar',\r\n      component: CalendarApp,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/apps/projects',\r\n      name: 'Projects',\r\n      children: [\r\n        {\r\n          path: '/apps/projects/list',\r\n          name: 'List',\r\n          component: Projects,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/projects/detail',\r\n          name: 'Detail',\r\n          component: ProjectDetail,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: '/apps/ecommerce',\r\n      name: 'eCommerce',\r\n      children: [\r\n        {\r\n          path: '/apps/ecommerce/products',\r\n          name: 'Products',\r\n          component: EcommerceProducts,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/details',\r\n          name: 'Product Details',\r\n          component: ProductDetails,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/orders',\r\n          name: 'Orders',\r\n          component: Orders,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/order/details',\r\n          name: 'Order Details',\r\n          component: OrderDetails,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/customers',\r\n          name: 'Customers',\r\n          component: Customers,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/shopping-cart',\r\n          name: 'Shopping Cart',\r\n          component: Cart,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/checkout',\r\n          name: 'Checkout',\r\n          component: Checkout,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/ecommerce/sellers',\r\n          name: 'Sellers',\r\n          component: Sellers,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: '/apps/kanban',\r\n      name: 'Kanban',\r\n      component: Kanban,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/apps/email',\r\n      name: 'Email',\r\n      children: [\r\n        {\r\n          path: '/apps/email/inbox',\r\n          name: 'Inbox',\r\n          component: Inbox,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/apps/email/details',\r\n          name: 'Email Details',\r\n          component: EmailDetail,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\n// pages\r\nconst pageRoutes = {\r\n  path: '/pages',\r\n  name: 'Pages',\r\n  icon: 'dripicons-copy',\r\n  children: [\r\n    {\r\n      path: '/pages/starter',\r\n      name: 'Starter',\r\n      component: Starter,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/profile',\r\n      name: 'Profile',\r\n      component: Profile,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/invoice',\r\n      name: 'Invoice',\r\n      component: Invoice,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/faq',\r\n      name: 'FAQ',\r\n      component: FAQ,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/pricing',\r\n      name: 'Pricing',\r\n      component: Pricing,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/error-403',\r\n      name: 'Error - 403',\r\n      component: ErrorForbidden,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/error-404',\r\n      name: 'Error - 404',\r\n      component: ErrorPageNotFound,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/pages/error-500',\r\n      name: 'Error - 500',\r\n      component: ServerError,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\n// auth\r\nconst authRoutes = {\r\n  path: '/account',\r\n  name: 'Auth',\r\n  children: [\r\n    {\r\n      path: '/account/login',\r\n      name: 'Login',\r\n      component: Login,\r\n      route: Route\r\n    },\r\n    {\r\n      path: '/account/logout',\r\n      name: 'Logout',\r\n      component: Logout,\r\n      route: Route\r\n    },\r\n    {\r\n      path: '/account/register',\r\n      name: 'Register',\r\n      component: Register,\r\n      route: Route\r\n    },\r\n    {\r\n      path: '/account/confirm',\r\n      name: 'Confirm',\r\n      component: Confirm,\r\n      route: Route\r\n    },\r\n    {\r\n      path: '/account/forget-password',\r\n      name: 'Forget Password',\r\n      component: ForgetPassword,\r\n      route: Route\r\n    }\r\n  ]\r\n};\r\n\r\n// ui\r\nconst uiRoutes = {\r\n  path: '/ui',\r\n  name: 'UI Kit',\r\n  icon: 'dripicons-briefcase',\r\n  children: [\r\n    {\r\n      path: '/ui/buttons',\r\n      name: 'Buttons',\r\n      component: Buttons,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/cards',\r\n      name: 'Cards',\r\n      component: Cards,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/general',\r\n      name: 'General',\r\n      component: General,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/grid',\r\n      name: 'Grid',\r\n      component: Grid,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/icons',\r\n      name: 'Icons',\r\n      component: Icons,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/modals',\r\n      name: 'Modals',\r\n      component: Modals,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/notifications',\r\n      name: 'Notifications',\r\n      component: Notifications,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/spinners',\r\n      name: 'Spinners',\r\n      component: Spinners,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/tabs',\r\n      name: 'Tabs',\r\n      component: Tabs,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/typography',\r\n      name: 'Typography',\r\n      component: Typography,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/ui/widgets',\r\n      name: 'Widgets',\r\n      component: Widgets,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\n// forms\r\nconst formsRoutes = {\r\n  path: '/forms',\r\n  name: 'Forms',\r\n  icon: 'dripicons-document',\r\n  children: [\r\n    {\r\n      path: '/forms/basic',\r\n      name: 'Basic Elements',\r\n      component: BasicForms,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/forms/advanced',\r\n      name: 'Form Advanced',\r\n      component: FormAdvanced,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/forms/validation',\r\n      name: 'Form validation',\r\n      component: FormValidation,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/forms/wizard',\r\n      name: 'Form Wizard',\r\n      component: FormWizard,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/forms/upload',\r\n      name: 'File Upload',\r\n      component: FileUpload,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/forms/editors',\r\n      name: 'Editors',\r\n      component: Editors,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\n// other features\r\nconst featuresRoutes = {\r\n  path: '/features',\r\n  name: 'Features',\r\n  icon: 'dripicons-view-list-large',\r\n  children: [\r\n    {\r\n      path: '/features/charts',\r\n      name: 'Charts',\r\n      children: [\r\n        {\r\n          path: '/features/charts/apex',\r\n          name: 'Apex',\r\n          component: ApexChart,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/features/charts/brite',\r\n          name: 'Brite',\r\n          component: BriteChart,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/features/charts/chartjs',\r\n          name: 'Chartjs',\r\n          component: ChartJs,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: '/features/tables',\r\n      name: 'Tables',\r\n      children: [\r\n        {\r\n          path: '/features/tables/basic',\r\n          name: 'Basic',\r\n          component: BasicTables,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/features/tables/advanced',\r\n          name: 'Advanced',\r\n          component: AdvancedTables,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/features/tables/testtable',\r\n          name: '測試表格',\r\n          component: TestTable,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      path: '/features/googlemaps',\r\n      name: 'Google Maps',\r\n      component: GoogleMaps,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\nconst platformRoutesSub = {\r\n  path: '/platform',\r\n  name: 'Platform',\r\n  children: [\r\n    {\r\n      path: '/platform/modify_password',\r\n      name: '修改密碼',\r\n      component: ModifyPassword,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/platform/preset_messages',\r\n      name: '自訂快速回覆',\r\n      component: PresetMessageHome,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n// online cs\r\n\r\nconst serviceRoutesSub = {\r\n  path: '/service',\r\n  name: 'Service',\r\n  children: [\r\n    {\r\n      path: '/service/view/:question_id',\r\n      name: '客服案件檢視',\r\n      component: SingleQuestionPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/service/batch_handler/:record_id',\r\n      name: '批次處理-項目檢視',\r\n      component: BatchTaskView,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\nconst serviceRoutes = {\r\n  path: '/service',\r\n  name: '客服',\r\n  icon: ' dripicons-device-desktop',\r\n  children: [\r\n    {\r\n      exact: true,\r\n      path: '/service/overview',\r\n      name: '總覽',\r\n      component: ServiceOverview,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      exact: true,\r\n      path: '/service/questions/todo',\r\n      name: '待處理案件',\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/service/questions/get_list',\r\n      name: '等待中案件',\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/service/questions/closed',\r\n      name: '近期結案案件',\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/service/questions/hidden',\r\n      name: '隱藏案件',\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/service/questions/favorite',\r\n      name: '我收藏的案件',\r\n      icon: 'dripicons-star',\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      exact: true,\r\n      path: '/service/allocate/list',\r\n      name: '派單系統- 案件列表',\r\n      component: AllocateListPage,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      exact: true,\r\n      path: '/service/statistics',\r\n      name: '件數統計',\r\n      component: ServiceStatistics,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      exact: true,\r\n      path: '/service/pivot_tbl',\r\n      name: '時間別統計',\r\n      component: ServiceStatisticsByHour,\r\n      route: PrivateRoute\r\n    },\r\n\r\n    {\r\n      exact: true,\r\n      path: '/service/questions/query',\r\n      name: '案件查詢',\r\n      icon: 'dripicons-search',\r\n      component: QuestionsQueryHome,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      exact: true,\r\n      path: '/service/batch_list',\r\n      name: '批次處理',\r\n      icon: 'dripicons-basket',\r\n      component: BatchListPage,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n// offline cs\r\nconst offlineRoutes = {\r\n  path: '/offline',\r\n  name: '線下客服區',\r\n  icon: 'dripicons-briefcase',\r\n  children: [\r\n    {\r\n      path: '/offline/cpl_case/home',\r\n      name: '消保',\r\n      component: CplCaseHome,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/gov_letter/home',\r\n      name: '公函',\r\n      component: GovLetterHome,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/personal_visit/home',\r\n      name: '親訪',\r\n      component: PersonalVisitHome,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\nconst offlineRoutesSub = {\r\n  path: '/offline',\r\n  name: 'offlineCS',\r\n  children: [\r\n    {\r\n      path: '/offline/personal_visit/create',\r\n      name: '新增親訪紀錄',\r\n      component: PersonalVisitForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/personal_visit/edit/:record_id',\r\n      name: '編輯親訪紀錄',\r\n      component: PersonalVisitForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/gov_letter/create',\r\n      name: '新增公函',\r\n      component: GovLetterForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/gov_letter/edit/:record_id',\r\n      name: '編輯公函',\r\n      component: GovLetterForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/cpl_case/create',\r\n      name: '新增消保紀錄',\r\n      component: CplCaseForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/cpl_case/edit/:record_id',\r\n      name: '編輯消保紀錄',\r\n      component: CplCaseForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/offline/cpl_case/view/:record_id',\r\n      name: '檢視消保紀錄',\r\n      component: CplCaseView,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/test',\r\n      name: '測試',\r\n      component: TestPage,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\n// VIP\r\nconst vipRoutes = {\r\n  path: '/vip',\r\n  name: 'VIP',\r\n  icon: 'dripicons-trophy',\r\n  children: [\r\n    {\r\n      path: '/vip/whale_users',\r\n      name: '鯨魚用戶',\r\n      component: WhaleUserHome,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/vip/requests_report',\r\n      name: '鯨魚用戶服務紀錄',\r\n      component: RequestReportHome,\r\n      route: PrivateRoute\r\n    },\r\n\r\n    {\r\n      path: '/vip/wire_report/list',\r\n      name: 'VIP 訂單',\r\n      component: VipOrdersHome,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/vip/offers',\r\n      name: 'VIP方案',\r\n      children: [\r\n        {\r\n          path: '/vip/offers/offer_list',\r\n          name: '方案列表',\r\n          component: VipOfferHome,\r\n          route: PrivateRoute\r\n        },\r\n        {\r\n          path: '/vip/offers/add_offer',\r\n          name: '方案明細',\r\n          component: VipOfferForm,\r\n          route: PrivateRoute\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n//games\r\n\r\nconst gamesRoutes = {\r\n  path: '/games',\r\n  name: '遊戲管理',\r\n  icon: 'dripicons-archive',\r\n  children: [\r\n    {\r\n      path: '/games/home',\r\n      name: '遊戲設定',\r\n      component: GamesHome,\r\n      route: PrivateRoute,\r\n      exact: true\r\n    },\r\n    {\r\n      path: '/games/create',\r\n      name: '新增遊戲',\r\n      component: GamesEditForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/games/servers',\r\n      name: '伺服器設定',\r\n      component: ServerHome,\r\n      route: PrivateRoute,\r\n      exact: true\r\n    }\r\n  ]\r\n};\r\n\r\n//events\r\n\r\nconst eventsRoutes = {\r\n  path: '/events',\r\n  name: '活動',\r\n  icon: 'dripicons-broadcast',\r\n  children: [\r\n    {\r\n      path: '/events/serial',\r\n      name: '虛寶活動',\r\n      component: SerialRecordsHome,\r\n      route: PrivateRoute,\r\n      exact: true\r\n    }\r\n  ]\r\n};\r\n// online cs\r\n\r\nconst gameRoutesSub = {\r\n  path: '/games',\r\n  name: 'games',\r\n  children: [\r\n    {\r\n      path: '/games/edit/:game_id',\r\n      name: '編輯遊戲',\r\n      component: GamesEditForm,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\nconst vipRoutesSub = {\r\n  path: '/vip',\r\n  name: 'VIP',\r\n  children: [\r\n    {\r\n      path: '/vip/wire_report/edit/:report_id',\r\n      name: '編輯vip訂單',\r\n      component: VipOrdersForm,\r\n      route: PrivateRoute\r\n    },\r\n    {\r\n      path: '/vip/user_dashboard/:game_id',\r\n      name: '維護鯨魚用戶資料',\r\n      component: WhaleUserDashboard,\r\n      route: PrivateRoute\r\n    }\r\n  ]\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n  let flatRoutes = [];\r\n\r\n  routes = routes || [];\r\n  routes.forEach(item => {\r\n    flatRoutes.push(item);\r\n\r\n    if (typeof item.children !== 'undefined') {\r\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n    }\r\n  });\r\n  return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [\r\n  rootRoute,\r\n  dashboardRoutes,\r\n  appRoutes,\r\n  authRoutes,\r\n  pageRoutes,\r\n  uiRoutes,\r\n  formsRoutes,\r\n  featuresRoutes,\r\n  platformRoutesSub,\r\n  offlineRoutes,\r\n  offlineRoutesSub,\r\n  myDashboardRoutes,\r\n  serviceRoutes,\r\n  serviceRoutesSub,\r\n  vipRoutes,\r\n  gamesRoutes,\r\n  gameRoutesSub,\r\n  vipRoutesSub,\r\n  eventsRoutes\r\n];\r\n\r\n//所有要在leftSideBar顯示的路徑\r\nconst loggedInUser = getLoggedInUser();\r\nconst authProtectedRoutes =\r\n  loggedInUser !== null && loggedInUser.uid === 112\r\n    ? [\r\n        dashboardRoutes,\r\n        appRoutes,\r\n        pageRoutes,\r\n        uiRoutes,\r\n        formsRoutes,\r\n        featuresRoutes,\r\n        offlineRoutes,\r\n        myDashboardRoutes,\r\n        serviceRoutes,\r\n        vipRoutes,\r\n        gamesRoutes,\r\n        eventsRoutes\r\n      ]\r\n    : [\r\n        dashboardRoutes,\r\n        offlineRoutes,\r\n        serviceRoutes,\r\n        vipRoutes,\r\n        gamesRoutes,\r\n        eventsRoutes\r\n      ];\r\n\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\n\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\r\nimport React, { Component } from \"react\";\r\nimport Routes from \"./routes/Routes\";\r\n\r\n// Themes\r\nimport \"./assets/scss/DefaultTheme.scss\";\r\n\r\n// For Dark import DarkTheme.scss\r\n// import \"./assets/scss/DarkTheme.scss\";\r\n\r\n// For green - import GreenTheme.scss\r\n// import './assets/scss/GreenTheme.scss';\r\n\r\n// configure fake backend\r\n//configureFakeBackend();\r\n\r\ntype AppProps = {};\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component<AppProps> {\r\n  render() {\r\n    return <Routes></Routes>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\ntype State = { showRightSidebar?: boolean, +value?: boolean };\r\n\r\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\ntype AuthAction = { type: string, payload: {} | string };\r\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\ntype Action = { type: string, payload: {} };\r\ntype State = { +value: boolean };\r\n\r\nconst AppMenu = (state: State = {}, action: Action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  UPDATE_PASSWORD_SUCCESS,\r\n  UPDATE_PASSWORD_FAILED,\r\n  GET_PRESET_MESSAGE,\r\n  GET_PRESET_MESSAGE_SUCCESS,\r\n  GET_PRESET_MESSAGE_FAILED,\r\n  EDIT_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE_SUCCESS,\r\n  EDIT_PRESET_MESSAGE_FAILED,\r\n  DELETE_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE_SUCCESS,\r\n  DELETE_PRESET_MESSAGE_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  updated: null,\r\n  loading: true,\r\n  error: \"\",\r\n  preset_messages: [],\r\n  updateOKMessage: null\r\n};\r\n\r\ntype PlatformAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  user?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  preset_messages?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\n// {\r\n//   \"msg\": \"編輯成功\",\r\n//   \"affectedId\": \"3\",\r\n//   \"updField\": {\r\n//       \"rank\": \"1\",\r\n//       \"message\": \"first message UPDATED 1223\"\r\n//   }\r\n// }\r\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\r\n  switch (action.type) {\r\n    case UPDATE_PASSWORD:\r\n    case GET_PRESET_MESSAGE:\r\n      return { ...state, loading: true };\r\n    case CLEAR_MESSAGE:\r\n      return { ...state, updateOKMessage: null };\r\n    case UPDATE_PASSWORD_SUCCESS:\r\n      return { ...state, updated: true, loading: false, error: null };\r\n    case EDIT_PRESET_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        preset_messages:\r\n          action.payload.action === \"add\"\r\n            ? [\r\n                ...state.preset_messages,\r\n                { id: action.payload.affectedId, ...action.payload.updField }\r\n              ]\r\n            : state.preset_messages.map(item =>\r\n                item.id.toString() === action.payload.affectedId\r\n                  ? { ...item, ...action.payload.updField }\r\n                  : item\r\n              ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case DELETE_PRESET_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        preset_messages: state.preset_messages.filter(\r\n          item => item.id.toString() !== action.payload.deleted_id\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_PASSWORD_FAILED:\r\n    case GET_PRESET_MESSAGE_FAILED:\r\n    case EDIT_PRESET_MESSAGE_FAILED:\r\n    case DELETE_PRESET_MESSAGE_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    case GET_PRESET_MESSAGE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        preset_messages: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Platform;\r\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  records: [],\r\n  loading: true,\r\n  affectedId: 0,\r\n  error: {},\r\n  currentRecord: {}\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n  switch (action.type) {\r\n    case GET_GOV_DATA:\r\n      return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n    case GET_GOV_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        records: action.payload.list,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_GOV_DATA_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_RECORD:\r\n    case EDIT_CPL_REPLY:\r\n    case DELETE_CPL_REPLY:\r\n    case DELETE_CPL_MEDIATION:\r\n    case MOVE_CPL:\r\n    case DELETE_CPL:\r\n    case EDIT_CPL_MEDIATION:\r\n    case EDIT_CPL_REF:\r\n    case DELETE_CPL_REF:\r\n    case ADD_CPL_ATTACHMENT:\r\n    case DELETE_CPL_ATTACHMENT:\r\n      return { ...state, loading: true };\r\n    case MOVE_CPL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          ...action.payload.updField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_RECORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies: state.currentRecord.replies.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations: state.currentRecord.mediations.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: state.currentRecord.attachments.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.mediations, action.payload.mediation]\r\n              : [\r\n                  ...state.currentRecord.mediations.filter(\r\n                    re => re.id !== action.payload.mediation.id\r\n                  ),\r\n                  action.payload.mediation\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ADD_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: action.payload.attachments\r\n        },\r\n\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: action.payload.refs,\r\n          ref_case_list: action.payload.ref_case_list\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case DELETE_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: state.currentRecord.refs.filter(\r\n            re => re.ref_id.toString() !== action.payload.deleted_id.toString()\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies:\r\n            action.payload.act === \"add\"\r\n              ? [...state.currentRecord.replies, action.payload.reply]\r\n              : [\r\n                  ...state.currentRecord.replies.filter(\r\n                    re => re.id !== action.payload.reply.id\r\n                  ),\r\n                  action.payload.reply\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case EDIT_RECORD_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_CPL_REPLY_FAILED:\r\n    case DELETE_CPL_REPLY_FAILED:\r\n    case EDIT_CPL_MEDIATION_FAILED:\r\n    case DELETE_CPL_MEDIATION_FAILED:\r\n    case EDIT_CPL_REF_FAILED:\r\n    case DELETE_CPL_REF_FAILED:\r\n    case ADD_CPL_ATTACHMENT_FAILED:\r\n    case DELETE_CPL_ATTACHMENT_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_CURRENT:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload.record,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_FAILED:\r\n    case MOVE_CPL_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  loading: true,\r\n  user_tasks: {}\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  user?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  user_tasks?: {} | null\r\n};\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n      return { ...state, loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false, error: null };\r\n    case GET_USERS_FAILED:\r\n    case GET_USER_TASKS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_USER_TASKS:\r\n      return { ...state };\r\n    case GET_USER_TASKS_SUCCESS:\r\n      //console.log(\"GET_USER_TASKS_SUCCESS action.payload\", action.payload);\r\n      return { ...state, user_tasks: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocation_quick_msg: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocation_quick_msg?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocation_quick_msg: action.payload.allocation_quick_msg,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  currentWhaleUser: null,\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n\r\n    case UPDATE_VIP_INFO:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_REQUESTS:\r\n      return { ...state, requestData: [], loading: true, error: null };\r\n    case GET_CURRENT_WHALE_USER:\r\n      return { ...state, currentWhaleUser: null, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        requestData: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case UPDATE_VIP_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          ...action.payload.updatedField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data: [\r\n            ...state.currentWhaleUser.request_data.filter(\r\n              s => s.id.toString() !== action.payload.updatedField\r\n            )\r\n          ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data:\r\n            action.payload.act === \"add\"\r\n              ? [\r\n                  action.payload.updatedField,\r\n                  ...state.currentWhaleUser.request_data\r\n                ]\r\n              : [\r\n                  ...state.currentWhaleUser.request_data.filter(\r\n                    re => re.id !== action.payload.id\r\n                  ),\r\n                  action.payload.updatedField\r\n                ]\r\n        },\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_WHALE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentWhaleUser: {\r\n          ...action.payload.vip,\r\n          request_data: action.payload.requestData\r\n        },\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case GET_CURRENT_WHALE_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        currentWhaleUser: null,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_VIP_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n\r\n    case GET_VIP_REQUESTS_FAILED:\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  vip_orders_list: [],\r\n  vip_prods: [],\r\n  current_report: {},\r\n  loading: true,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  affectedRecord: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  vip_prods?: [] | null,\r\n  vip_orders_list?: [] | null,\r\n  current_report?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n    case GET_VIP_ORDERS:\r\n\r\n    case GET_VIP_PRODS_BY_GAMEID:\r\n    case EDIT_VIP_WIRE_REPORT:\r\n    case DELETE_VIP_WIRE_REPORT:\r\n      return { ...state, loading: true, error: null, errors: {} };\r\n\r\n    case GET_CURRENT_VIP_REPORT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        errors: {},\r\n        current_report: {}\r\n      };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        vip_orders_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_VIP_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_report: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_PRODS_BY_GAMEID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_prods: action.payload\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedRecord: action.payload.updatedField,\r\n        current_report: {\r\n          ...state.current_report,\r\n          ...action.payload.updatedField\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: \"編輯成功!\"\r\n      };\r\n    case DELETE_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_orders_list: state.vip_orders_list.filter(\r\n          report => report.report_id !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_FAILED:\r\n    case DELETE_VIP_WIRE_REPORT_FAILED:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        errors: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n    case GET_VIP_ORDERS_FAILED:\r\n    case GET_CURRENT_VIP_REPORT_FAILED:\r\n    case GET_VIP_PRODS_BY_GAMEID_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null\r\n      };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: '',\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: [],\r\n  csHandleAllocationData: [],\r\n  antsHandleAllocationData: [],\r\n  statReportData: [],\r\n  games_list: [],\r\n  user_history: [],\r\n  vip: null,\r\n  add_favor_ok: false,\r\n  tasks: []\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  add_favor_ok?: boolean,\r\n  tasks?: [] | null,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  games_list?: [] | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  user_history?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  let tmpGameIds = [];\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n    case GET_SERVICE_STATISTICS_BY_HOUR:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH:\r\n    case ADD_QUESTION_TO_BATCH:\r\n    case FAVORITE_QUESTION_ACTION:\r\n      return { ...state };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        loading:\r\n          Object.keys(action.payload).length === 1 &&\r\n          action.payload.status === '1'\r\n            ? false\r\n            : true,\r\n        error: null\r\n      };\r\n    case ADD_QUESTION_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: [action.payload.batch_info]\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.batch_info.question_id) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (action.payload.ids.indexOf(q.id) > -1) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: []\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === Number.parseInt(action.payload.removed_q_id)) {\r\n            return { ...q, is_batch: 0 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case FAVORITE_QUESTION_ACTION_SUCCESS:\r\n      //res.json({question_id:qId, is_favorite: action === \"add\" ? 1 : 0});\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.question_id) {\r\n            return { ...q, is_favorite: action.payload.is_favorite };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            is_favorite: action.payload.is_favorite\r\n          }\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: action.payload.updateQuestionData\r\n            ? [\r\n                ...state.current.replies,\r\n                { id: action.payload.id, ...action.payload.updatedField }\r\n              ]\r\n            : [\r\n                ...state.current.replies.map(reply =>\r\n                  reply.id !== action.payload.id\r\n                    ? reply\r\n                    : { ...reply, ...action.payload.updatedField }\r\n                )\r\n              ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user_history: action.payload.list,\r\n        vip: action.payload.vip\r\n      };\r\n    case GET_QUESTIONS_BY_USER_FAILED:\r\n    case GET_QUESTIONS_BY_USER:\r\n      return {\r\n        ...state,\r\n        user_history: []\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_CONFIG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        games_list: action.payload.games_list,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        cs_admins: action.payload.cs_admins,\r\n        ants_admins: action.payload.ants_admins,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: action.payload.statReportData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        statReplyData: action.payload.statReplyData,\r\n        statReportData: action.payload.statReportData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const {\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData\r\n      } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n    case FAVORITE_QUESTION_ACTION_FAILED:\r\n    case ADD_QUESTION_TO_BATCH_FAILED:\r\n    case REMOVE_QUESTION_FROM_BATCH_FAILED:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  error: {},\r\n  question_type: {}\r\n};\r\n\r\ntype batchAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  affectedId?: number | null,\r\n  currentRecord?: {} | null,\r\n  question_type?: {} | null,\r\n  updateOKMessage?: string | null,\r\n  error?: {} | null\r\n};\r\n\r\nconst BatchTasks = (state: State = INIT_STATE, action: batchAction) => {\r\n  switch (action.type) {\r\n    case GET_BATCH_TASKS:\r\n    case EDIT_BATCH_TASK:\r\n    case DELETE_BATCH_TASK:\r\n    case GET_CURRENT_BATCH_TASK:\r\n    case REMOVE_BATCH_Q:\r\n    case REMOVE_Q_FROM_BATCH:\r\n    case BATCH_REPLY_ACTION:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...action.payload.task,\r\n          q_list: action.payload.q_list\r\n        },\r\n        question_type: action.payload.question_type\r\n      };\r\n    case CLEAR_BATCH_TASK_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case REMOVE_BATCH_Q_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: []\r\n        }\r\n      };\r\n    case REMOVE_Q_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: [\r\n            ...state.currentRecord.q_list.filter(\r\n              q =>\r\n                q.question_id !== Number.parseInt(action.payload.removed_q_id)\r\n            )\r\n          ]\r\n        }\r\n      };\r\n    case EDIT_BATCH_TASK_SUCCESS:\r\n      //console.log(\"action.payload.affectedRow\", action.payload.action);\r\n      return {\r\n        ...state,\r\n        list:\r\n          action.payload.action === \"add\"\r\n            ? [\r\n                ...state.list,\r\n                { id: action.payload.affectedId, ...action.payload.affectedRow }\r\n              ]\r\n            : state.list.map(task =>\r\n                task.id === action.payload.affectedId\r\n                  ? action.payload.affectedRow\r\n                  : task\r\n              ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    case BATCH_REPLY_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          status: action.payload.mode\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case GET_BATCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.batch_tasks,\r\n        games: action.payload.games\r\n      };\r\n    case BATCH_REPLY_ACTION_FAILED:\r\n    case GET_BATCH_TASKS_FAILED:\r\n    case EDIT_BATCH_TASK_FAILED:\r\n    case DELETE_BATCH_TASK_FAILED:\r\n    case GET_CURRENT_BATCH_TASK_FAILED:\r\n    case REMOVE_BATCH_Q_FAILED:\r\n    case REMOVE_Q_FROM_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case DELETE_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(\r\n          task => task.id !== Number.parseInt(action.payload.deleted_id)\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default BatchTasks;\r\n","import {\r\n  GET_SERIAL_RECORDS,\r\n  GET_SERIAL_RECORDS_SUCCESS,\r\n  GET_SERIAL_RECORDS_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  serial_list: [],\r\n  loading: true,\r\n  errors: {}\r\n};\r\ntype EventAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  serial_list?: [] | null,\r\n  loading?: boolean,\r\n  error?: string\r\n};\r\n\r\nconst Event = (state: State = INIT_STATE, action: EventAction) => {\r\n  switch (action.type) {\r\n    case GET_SERIAL_RECORDS:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case GET_SERIAL_RECORDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        serial_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_SERIAL_RECORDS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Event;\r\n","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\nimport Dashboard from './dashboard/reducers';\r\nimport Platform from './platform/reducers';\r\nimport OfflineCs from './offlinecs/reducers';\r\nimport Games from './games/reducers';\r\nimport Servers from './servers/reducers';\r\nimport AdminUsers from './adminUsers/reducers';\r\nimport ServiceAllocate from './serviceAllocate/reducers';\r\nimport VIP from './vip/reducers';\r\nimport VipOffers from './vipoffers/reducers';\r\nimport Service from './service/reducers';\r\nimport BatchTasks from './batch/reducers';\r\nimport Event from './event/reducers';\r\n\r\nexport default combineReducers({\r\n  Auth,\r\n  AppMenu,\r\n  Layout,\r\n  Dashboard,\r\n  Platform,\r\n  OfflineCs,\r\n  Games,\r\n  Servers,\r\n  AdminUsers,\r\n  ServiceAllocate,\r\n  Service,\r\n  VIP,\r\n  VipOffers,\r\n  BatchTasks,\r\n  Event\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport axios from 'axios';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from './constants';\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n  else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/auth'\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    let cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n\r\n    const options = {\r\n      data: JSON.stringify(user),\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      url: '/api/auth/logout'\r\n    };\r\n\r\n    setSession(null);\r\n    yield call(() => {\r\n      axios(options);\r\n      history.push('/account/login');\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, '/users/register', options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, '/users/password-reset', options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\r\n\r\nimport MenuItem from './models';\r\n\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems: Array<MenuItem>) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  GET_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE\r\n} from \"./constants\";\r\nimport {\r\n  updatePasswordSuccess,\r\n  updatePasswordFailed,\r\n  getPresetMessageSuccess,\r\n  getPresetMessageFailed,\r\n  editPresetMessageSuccess,\r\n  editPresetMessageFailed,\r\n  deletePresetMessageSuccess,\r\n  deletePresetMessageFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/modify_password\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updatePasswordSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(updatePasswordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getPresetMessageData() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/preset_messages/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - record , update with id, or insert with no id\r\n */\r\nfunction* editPresetMessageData({ payload }) {\r\n  const record = payload;\r\n\r\n  const options = {\r\n    method: record.id ? \"PUT\" : \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${record.id ? record.id : \"\"}`,\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deletePresetMessageData({ payload }) {\r\n  const id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deletePresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deletePresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n  yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nexport function* watchgetPresetMessageData(): any {\r\n  yield takeEvery(GET_PRESET_MESSAGE, getPresetMessageData);\r\n}\r\nexport function* watchUpdatePresetMessageData(): any {\r\n  yield takeEvery(EDIT_PRESET_MESSAGE, editPresetMessageData);\r\n}\r\n\r\nexport function* watchDeletePresetMessageData(): any {\r\n  yield takeEvery(DELETE_PRESET_MESSAGE, deletePresetMessageData);\r\n}\r\nfunction* PlatformSaga(): any {\r\n  yield all([\r\n    fork(watchChangePassword),\r\n    fork(watchgetPresetMessageData),\r\n    fork(watchUpdatePresetMessageData),\r\n    fork(watchDeletePresetMessageData)\r\n  ]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_GOV_DATA,\r\n  EDIT_RECORD,\r\n  GET_CURRENT,\r\n  EDIT_CPL_REPLY,\r\n  DELETE_CPL,\r\n  MOVE_CPL,\r\n  EDIT_CPL_MEDIATION,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_MEDIATION,\r\n  EDIT_CPL_REF,\r\n  DELETE_CPL_REF,\r\n  ADD_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getOfflineCsDataSuccess,\r\n  getOfflineCsDataFailed,\r\n  editRecordSuccess,\r\n  editRecordFailed,\r\n  getCurrentRecordSuccess,\r\n  getCurrentRecordFailed,\r\n  editCplReplySuccess,\r\n  editCplReplyFailed,\r\n  deleteCplCaseSuccess,\r\n  deleteCplCaseFailed,\r\n  moveCplCaseSuccess,\r\n  moveCplCaseFailed,\r\n  editCplMediationSuccess,\r\n  editCplMediationFailed,\r\n  deleteCplCaseReplyFailed,\r\n  deleteCplCaseReplySuccess,\r\n  deleteCplMediationSuccess,\r\n  deleteCplMediationFailed,\r\n  editCplRefSuccess,\r\n  editCplRefFailed,\r\n  deleteCplRefSuccess,\r\n  deleteCplRefFailed,\r\n  addCplAttachmentFailed,\r\n  addCplAttachmentSuccess,\r\n  deleteCplAttachmentSuccess,\r\n  deleteCplAttachmentFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/${\r\n      type === \"govletter\" ? \"gov_list\" : type === \"pv\" ? \"pv_list\" : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOfflineCsDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 403:\r\n        message = error.response.data;\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOfflineCsDataFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log('editGovRecord *****', payload);\r\n  const { dataType, record } = payload;\r\n\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editRecordSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* moveCplRecord({ payload }) {\r\n  console.log(\"moveCplRecord *****\", payload);\r\n  const { id, record } = payload;\r\n  //record: { status, close_date }\r\n  const options = {\r\n    data: record,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/move_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(moveCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(moveCplCaseFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl reply\r\n */\r\nfunction* editCplReply({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplReplyFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplMediation({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplMediationFailed(message));\r\n  }\r\n}\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { dataType, record_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n\r\n    url: `/api/offline_cs/${\r\n      dataType === \"govletter\"\r\n        ? \"gov_list\"\r\n        : dataType === \"pv\"\r\n        ? \"pv_list\"\r\n        : \"cpl_case\"\r\n    }/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentRecordSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      case 400:\r\n        message = error.response.data.msg;\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplRefFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* addCplAttach({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/add`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addCplAttachmentFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deleteCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/ref/remove`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deleteCplRefFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCase({ payload: { id, history } }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    history.push(\"/offline/cpl_case/home\");\r\n    yield put(deleteCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseReply({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/reply/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplCaseReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseReplyFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseAttachment({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/attachment/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplAttachmentFailed(message));\r\n  }\r\n}\r\nfunction* delCplMd({ payload: id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/offline_cs/cpl_case/mediation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplMediationFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n  yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n  yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nexport function* watchEditCplReply(): any {\r\n  yield takeEvery(EDIT_CPL_REPLY, editCplReply);\r\n}\r\nexport function* watchEditCplMediation(): any {\r\n  yield takeEvery(EDIT_CPL_MEDIATION, editCplMediation);\r\n}\r\n\r\nexport function* watchDeleteCpl(): any {\r\n  yield takeEvery(DELETE_CPL, delCplCase);\r\n}\r\n\r\nexport function* watchDeleteCplReply(): any {\r\n  yield takeEvery(DELETE_CPL_REPLY, delCplCaseReply);\r\n}\r\nexport function* watchDeleteCplMediation(): any {\r\n  yield takeEvery(DELETE_CPL_MEDIATION, delCplMd);\r\n}\r\n\r\nexport function* watchMoveCplStatus(): any {\r\n  yield takeEvery(MOVE_CPL, moveCplRecord);\r\n}\r\n\r\nexport function* watchEditCplRef(): any {\r\n  yield takeEvery(EDIT_CPL_REF, editCplRef);\r\n}\r\nexport function* watchDeleteCplRef(): any {\r\n  yield takeEvery(DELETE_CPL_REF, deleteCplRef);\r\n}\r\nexport function* watchAddCplAttach(): any {\r\n  yield takeEvery(ADD_CPL_ATTACHMENT, addCplAttach);\r\n}\r\n\r\nexport function* watchDelCplAttach(): any {\r\n  yield takeEvery(DELETE_CPL_ATTACHMENT, delCplCaseAttachment);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchEditRecord),\r\n    fork(watchGetCurrentRecordData),\r\n    fork(watchEditCplReply),\r\n    fork(watchDeleteCpl),\r\n    fork(watchMoveCplStatus),\r\n    fork(watchDeleteCplReply),\r\n    fork(watchEditCplMediation),\r\n    fork(watchDeleteCplMediation),\r\n    fork(watchEditCplRef),\r\n    fork(watchDeleteCplRef),\r\n    fork(watchAddCplAttach),\r\n    fork(watchDelCplAttach)\r\n  ]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_USERS, GET_USER_TASKS } from \"./constants\";\r\n\r\nimport {\r\n  getAdminUsersSuccess,\r\n  getAdminUsersFailed,\r\n  getUserTasksSuccess,\r\n  getUserTasksFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getAdminUsersByRole/${role}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAdminUsersSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get user tasks, like favourite, allocation tasks\r\n * @param {*} payload - uid\r\n */\r\nfunction* getUserTask() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/admin_users/getUserTasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getUserTasksSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nexport function* watchGetUserTasks(): any {\r\n  yield takeEvery(GET_USER_TASKS, getUserTask);\r\n}\r\nfunction* adminUsersSaga(): any {\r\n  yield all([fork(watchGetData), fork(watchGetUserTasks)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION,\r\n  GET_SERVICE_CONFIG,\r\n  GET_QUESTIONS_BY_USER,\r\n  FAVORITE_QUESTION_ACTION,\r\n  ADD_QUESTION_TO_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_USER_ACTION_LOG\r\n} from './constants';\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getServiceStatisticsByHourFailed,\r\n  getServiceStatisticsByHourSuccess,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed,\r\n  getServiceConfigSuccess,\r\n  getQuestionsByUserSuccess,\r\n  getQuestionsByUserFailed,\r\n  favorQuestionFailed,\r\n  favorQuestionSuccess,\r\n  addQuestionToBatchSuccess,\r\n  addQuestionToBatchFailed,\r\n  removeQuestionFromBatchSuccess,\r\n  removeQuestionFromBatchFailed,\r\n  addMultipleQuestionsToBatchSuccess,\r\n  addMultipleQuestionsToBatchFailed\r\n} from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  //console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    console.log('getCurrentQuestionData', response.data);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(' getCurrentQuestionData error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getQuestionsByUserData({ payload: question_id }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/list_by_user/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsByUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error.response.msg;\r\n    }\r\n    yield put(getQuestionsByUserFailed(message));\r\n  }\r\n}\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\nfunction* getServiceStatByHour({ payload: { sDate } }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/stat_hourly_count?sDate=${sDate}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsByHourSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsByHourFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? 'finish_allocate_json'\r\n        : allocateStatus === 3\r\n        ? 'request_allocate_json'\r\n        : 'allocate_json'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add question to batch\r\n */\r\nfunction* addQuestionToBatch({ payload }) {\r\n  //const { question_id, batch_id } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/batch/add_to_batch'\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addQuestionToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(addQuestionToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * remove from batch //@route: DELETE /api/batch/remove_from_batch/:question_id\r\n */\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  //question_id = payload;\r\n\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/batch/remove_from_batch/${payload}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQuestionFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(removeQuestionFromBatchFailed(message));\r\n  }\r\n}\r\n\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? 'reserved_question'\r\n        : closeType === 4\r\n        ? 'close_question'\r\n        : closeType === 1\r\n        ? 'restored_question'\r\n        : 'cancel_reserved_question'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or remove question type\r\n */\r\nfunction* updateQuestionFavorite({ payload }) {\r\n  //const { qId, action } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionFavorite`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(favorQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(favorQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceConfig() {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/config`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceConfigSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add more than one question to a batch\r\n */\r\nfunction* addIdsToBatch({ payload: { batch_id, ids } }) {\r\n  const options = {\r\n    data: { batch_id, ids },\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/batch/batch_add_to_batch'\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(addMultipleQuestionsToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addMultipleQuestionsToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add a log when user execute a function\r\n */\r\nfunction* logUserAction({ payload: { act, func, desc } }) {\r\n  console.log('logUserAction', act);\r\n  const options = {\r\n    data: { act, func, desc },\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/admin_users/log_action'\r\n  };\r\n  try {\r\n    yield axios(options);\r\n  } catch (error) {}\r\n}\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\nexport function* watchStatDataByHour(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS_BY_HOUR, getServiceStatByHour);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nexport function* watchGetServiceConfig(): any {\r\n  yield takeEvery(GET_SERVICE_CONFIG, getServiceConfig);\r\n}\r\n\r\nexport function* watchGetRelaventUserData(): any {\r\n  yield takeEvery(GET_QUESTIONS_BY_USER, getQuestionsByUserData);\r\n}\r\nexport function* watchupdateQuestionFavorite(): any {\r\n  yield takeEvery(FAVORITE_QUESTION_ACTION, updateQuestionFavorite);\r\n}\r\n\r\nexport function* watchAddQuestionToBatch(): any {\r\n  yield takeEvery(ADD_QUESTION_TO_BATCH, addQuestionToBatch);\r\n}\r\n\r\nexport function* watchRemoveQuestionFromBatch(): any {\r\n  yield takeEvery(REMOVE_QUESTION_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\nexport function* watchAddMultiToBatch(): any {\r\n  yield takeEvery(ADD_MULTIPLE_QUESTIONS_TO_BATCH, addIdsToBatch);\r\n}\r\nexport function* watchUserActionLog(): any {\r\n  yield takeEvery(ADD_USER_ACTION_LOG, logUserAction);\r\n}\r\n\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData),\r\n    fork(watchGetServiceConfig),\r\n    fork(watchGetRelaventUserData),\r\n    fork(watchupdateQuestionFavorite),\r\n    fork(watchAddQuestionToBatch),\r\n    fork(watchRemoveQuestionFromBatch),\r\n    fork(watchAddMultiToBatch),\r\n    fork(watchStatDataByHour),\r\n    fork(watchUserActionLog)\r\n  ]);\r\n}\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_INFO,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_VIP_REQUESTS\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed,\r\n  getCurrentWhaleUserSuccess,\r\n  getCurrentWhaleUserFailed,\r\n  updateVipInfoSuccess,\r\n  updateVipInfoFailed,\r\n  getVipRequestsSuccess,\r\n  getVipRequestsFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipReqData({ payload: { gameId, beginTime, endTime } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/request_report?gameId=${gameId}&beginTime=${beginTime}&endTime=${endTime}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipRequestsSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipRequestsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getSingleVip({ payload: { game_id, role_id, history } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/user_dashboard/${game_id}?user=${encodeURIComponent(role_id)}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentWhaleUserSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getCurrentWhaleUserFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* updateVIPInfo({ payload: { game_id, role_id, fields } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update_vip_info\",\r\n    data: { game_id, role_id, fields }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updateVipInfoSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(updateVipInfoFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  //console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nexport function* watchGetCurrentWhaleUser(): any {\r\n  yield takeEvery(GET_CURRENT_WHALE_USER, getSingleVip);\r\n}\r\nexport function* watchUpdateVIPInfo(): any {\r\n  yield takeEvery(UPDATE_VIP_INFO, updateVIPInfo);\r\n}\r\n\r\nexport function* watchGetVipReqData(): any {\r\n  yield takeEvery(GET_VIP_REQUESTS, getVipReqData);\r\n}\r\n\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest),\r\n    fork(watchGetCurrentWhaleUser),\r\n    fork(watchUpdateVIPInfo),\r\n    fork(watchGetVipReqData)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_ORDERS,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipOffersFailed,\r\n  getVipOffersSuccess,\r\n  getVipOrdersSuccess,\r\n  getVipOrdersFailed,\r\n  getCurrentVipReportSuccess,\r\n  getCurrentVipReportFailed,\r\n  getVipProductsByGameIdSuccess,\r\n  getVipProductsByGameIdFailed,\r\n  editVipWireReportSuccess,\r\n  editVipWireReportFailed,\r\n  deleteVipWireReportSuccess,\r\n  deleteVipWireReportFailed\r\n} from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipOrder() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/order_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOrdersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOrdersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { report_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/detail/${report_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipReportFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getProdsByGameId({ payload: gameId }) {\r\n  //console.log('getServersByGameId', gameId);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods_list/${gameId}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipProductsByGameIdSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getVipProductsByGameIdFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/wire_report/update\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPWReport({ payload: record_id }) {\r\n  console.log(\"delVIPWReport\", record_id);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/delete_wire_report/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nexport function* watchGetOrders(): any {\r\n  yield takeEvery(GET_VIP_ORDERS, getVipOrder);\r\n}\r\n\r\nexport function* watchGetCurrentReport(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_REPORT, getCurrentRecord);\r\n}\r\nexport function* watchGetProdsByGameId(): any {\r\n  yield takeEvery(GET_VIP_PRODS_BY_GAMEID, getProdsByGameId);\r\n}\r\n\r\nexport function* watchEditVipWireReport(): any {\r\n  yield takeEvery(EDIT_VIP_WIRE_REPORT, editRecord);\r\n}\r\n\r\nexport function* watchDeleteVipWireReport(): any {\r\n  yield takeEvery(DELETE_VIP_WIRE_REPORT, delVIPWReport);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([\r\n    fork(watchGetOffers),\r\n    fork(watchGetOrders),\r\n    fork(watchGetCurrentReport),\r\n    fork(watchGetProdsByGameId),\r\n    fork(watchEditVipWireReport),\r\n    fork(watchDeleteVipWireReport)\r\n  ]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","import axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  EDIT_BATCH_TASK,\r\n  DELETE_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_Q_FROM_BATCH,\r\n  BATCH_REPLY_ACTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getBatchTasksSuccess,\r\n  getBatchTasksFailed,\r\n  editBatchTaskSuccess,\r\n  editBatchTaskFailed,\r\n  deleteBatchTaskSuccess,\r\n  deleteBatchTaskFailed,\r\n  getCurrentBatchTaskSuccess,\r\n  getCurrentBatchTaskFailed,\r\n  removeBatchQSuccess,\r\n  removeBatchQFailed,\r\n  removeQFromBatchSuccess,\r\n  removeQFromBatchFailed,\r\n  batchReplyActionSuccess,\r\n  batchReplyActionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get batch tasks list\r\n * @param {*} payload - task list & game list\r\n */\r\nfunction* getBatchTasks() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getBatchTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getBatchTasksFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentBatch({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  //http://localhost:5000/api/batch/detail/80\r\n  const { record_id, history } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 403:\r\n        message = \"權限不符合操作\";\r\n        //錯誤\r\n        history.push(\"/pages/error-403\");\r\n        break;\r\n\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  const record = payload;\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/task\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(editBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* batchReply({ payload }) {\r\n  const replyData = payload;\r\n  const options = {\r\n    data: replyData,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_reply_json\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(batchReplyActionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(batchReplyActionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delBatchTask({ payload: { id, history } }) {\r\n  //console.log(\"delBatchTask\", payload);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/task/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeBatchQuestions({ payload }) {\r\n  const batch_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_batch_q/${batch_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeBatchQSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeBatchQFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  const question_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeQFromBatchFailed(message));\r\n  }\r\n}\r\nexport function* watchGetBatchTasksData(): any {\r\n  yield takeEvery(GET_BATCH_TASKS, getBatchTasks);\r\n}\r\n\r\nexport function* watchEditBatchRecord(): any {\r\n  yield takeEvery(EDIT_BATCH_TASK, editRecord);\r\n}\r\nexport function* watchDeleteBatchRecord(): any {\r\n  yield takeEvery(DELETE_BATCH_TASK, delBatchTask);\r\n}\r\n\r\nexport function* watchgetCurrentBatch(): any {\r\n  yield takeEvery(GET_CURRENT_BATCH_TASK, getCurrentBatch);\r\n}\r\n\r\nexport function* watchgetRemoveBatchQ(): any {\r\n  yield takeEvery(REMOVE_BATCH_Q, removeBatchQuestions);\r\n}\r\n\r\nexport function* watchgetRemoveQFromBatch(): any {\r\n  yield takeEvery(REMOVE_Q_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\n\r\nexport function* watchBatchReply(): any {\r\n  yield takeEvery(BATCH_REPLY_ACTION, batchReply);\r\n}\r\n\r\nfunction* batchTaskSaga(): any {\r\n  yield all([\r\n    fork(watchGetBatchTasksData),\r\n    fork(watchEditBatchRecord),\r\n    fork(watchDeleteBatchRecord),\r\n    fork(watchgetCurrentBatch),\r\n    fork(watchgetRemoveBatchQ),\r\n    fork(watchgetRemoveQFromBatch),\r\n    fork(watchBatchReply)\r\n  ]);\r\n}\r\n\r\nexport default batchTaskSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERIAL_RECORDS } from './constants';\r\n\r\nimport {\r\n  getSerialEventRecordsSuccess,\r\n  getSerialEventRecordsFailed\r\n} from './actions';\r\n\r\nfunction* getSerialRecords({ payload }) {\r\n  console.log('getSerialRecords', payload);\r\n  const event_id = payload;\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/events/serialRecords/${event_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getSerialEventRecordsSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getSerialEventRecordsFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetSerialRecords(): any {\r\n  yield takeEvery(GET_SERIAL_RECORDS, getSerialRecords);\r\n}\r\n\r\nfunction* EventSaga(): any {\r\n  yield all([fork(watchGetSerialRecords)]);\r\n}\r\n\r\nexport default EventSaga;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\nimport dashboardSaga from './dashboard/saga';\r\nimport platformSaga from './platform/saga';\r\nimport offlineCsSaga from './offlinecs/saga';\r\nimport gamesSaga from './games/saga';\r\nimport serversSaga from './servers/saga';\r\nimport adminUsersSaga from './adminUsers/saga';\r\nimport serviceAllocateSaga from './serviceAllocate/saga';\r\nimport serviceSaga from './service/saga';\r\nimport vipSaga from './vip/saga';\r\nimport vipOfferSaga from './vipoffers/saga';\r\nimport batchTaskSaga from './batch/saga';\r\nimport EventSaga from './event/saga';\r\nexport default function* rootSaga(getState: any): any {\r\n  yield all([\r\n    authSaga(),\r\n    layoutSaga(),\r\n    appMenuSaga(),\r\n    dashboardSaga(),\r\n    platformSaga(),\r\n    offlineCsSaga(),\r\n    gamesSaga(),\r\n    serversSaga(),\r\n    adminUsersSaga(),\r\n    serviceAllocateSaga(),\r\n    serviceSaga(),\r\n    vipSaga(),\r\n    vipOfferSaga(),\r\n    batchTaskSaga(),\r\n    EventSaga()\r\n  ]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}