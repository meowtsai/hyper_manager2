{"version":3,"sources":["pages/service/statistics/index.js","components/PageTitle.js","redux/actions.js","components/Spinner.js"],"names":["connect","state","antsHandleData","Service","csHandleData","qCountData","csHandleAllocationData","antsHandleAllocationData","question_type","allgames","loading","error","user","Auth","getServiceStatistics","_ref","_useState","useState","_useState2","Object","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","gameId","setGameId","_useState3","_useState4","gameName","setGameName","_useState5","concat","Date","getFullYear","getMonth","toString","padStart","_useState6","yyyymm","setYyyymm","_useState7","_useState8","rptCondition","setRptCondition","_useState9","_useState10","activeTab","setActiveTab","useEffect","document","title","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Spinner__WEBPACK_IMPORTED_MODULE_26__","className","color","mmGroup","dd","mIndex","yyyy","push","index","curY","curM","tidyUpMyData","game_id","dates","reduce","prev","curr","indexOf","時間","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","cnt","tmpData","filter","r","sort","b","item","react__WEBPACK_IMPORTED_MODULE_4__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_25__","breadCrumbItems","label","path","active","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","sm","length","reactstrap__WEBPACK_IMPORTED_MODULE_9__","inline","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_12__","type","name","id","value","onChange","e","gameid","target","undefined","g","game_name","map","mItem","key","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onClick","lg","reactstrap__WEBPACK_IMPORTED_MODULE_15__","tabs","icon","tab","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","href","classnames","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","tabId","react_csv__WEBPACK_IMPORTED_MODULE_6__","data","headers","keys","t","filename","getTime","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","bordered","size","statTable","role","statData","condition","dataRaw","admin_name","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","test_cnt","Number","parseInt","d","dt","admin_uid","itemSet","cond","condLabel","_ref2","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","colSpan","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","PageTitle","props","to","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","_layout_actions__WEBPACK_IMPORTED_MODULE_1__","_appMenu_actions__WEBPACK_IMPORTED_MODULE_2__","_dashboard_actions__WEBPACK_IMPORTED_MODULE_3__","_platform_actions__WEBPACK_IMPORTED_MODULE_4__","_offlinecs_actions__WEBPACK_IMPORTED_MODULE_5__","_games_actions__WEBPACK_IMPORTED_MODULE_6__","_servers_actions__WEBPACK_IMPORTED_MODULE_7__","_adminUsers_actions__WEBPACK_IMPORTED_MODULE_8__","_serviceAllocate_actions__WEBPACK_IMPORTED_MODULE_9__","_service_actions__WEBPACK_IMPORTED_MODULE_10__","_vip_actions__WEBPACK_IMPORTED_MODULE_11__","_vipoffers_actions__WEBPACK_IMPORTED_MODULE_12__","_viprpt_actions__WEBPACK_IMPORTED_MODULE_13__","_batch_actions__WEBPACK_IMPORTED_MODULE_14__","_event_actions__WEBPACK_IMPORTED_MODULE_15__","Spinner","children","Tag","tag","react__WEBPACK_IMPORTED_MODULE_1___default","classNames","spinner-border","spinner-grow","defaultProps"],"mappings":"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","file":"static/js/114.c6b9c408.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { CSVLink } from 'react-csv';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  ButtonGroup,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { getServiceStatistics } from '../../../redux/actions';\r\nimport PageTitle from '../../../components/PageTitle';\r\nimport Spinner from '../../../components/Spinner';\r\nconst ServiceStatistics = ({\r\n  getServiceStatistics,\r\n  antsHandleData,\r\n  csHandleData,\r\n  qCountData,\r\n  csHandleAllocationData,\r\n  antsHandleAllocationData,\r\n  question_type,\r\n  loading,\r\n  allgames,\r\n  error,\r\n  user\r\n}) => {\r\n  const mainTitle = '客服案件統計';\r\n  const mainPath = '/service';\r\n\r\n  const [gameId, setGameId] = useState('all_game');\r\n  const [gameName, setGameName] = useState('全產品');\r\n  const [yyyymm, setYyyymm] = useState(\r\n    `${new Date().getFullYear()}-${(new Date().getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, '0')}`\r\n  );\r\n\r\n  const [rptCondition, setRptCondition] = useState('all');\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const tabContents = [\r\n    {\r\n      id: '1',\r\n      title: '提問單',\r\n      icon: 'mdi mdi-home-variant'\r\n    },\r\n    {\r\n      id: '2',\r\n      title: '後送案件',\r\n      icon: 'mdi mdi-account-circle'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getServiceStatistics(yyyymm);\r\n    document.title = mainTitle;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onSearchClick = () => {\r\n    getServiceStatistics(yyyymm);\r\n  };\r\n\r\n  const onGameIDChange = gameid => {\r\n    //console.log(gameid);\r\n    if (gameid !== '' && gameid !== undefined && gameid !== null) {\r\n      setGameId(gameid);\r\n      setGameName(\r\n        gameid === 'all_game'\r\n          ? '全產品'\r\n          : allgames.filter(g => g.game_id === gameid)[0].game_name\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) {\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner className='m-2' color='secondary' />;\r\n  }\r\n  let dates = [];\r\n  let mmGroup = [];\r\n  const dd = new Date();\r\n  const mIndex = dd.getMonth();\r\n  const yyyy = dd.getFullYear();\r\n\r\n  // const mIndex = 0;\r\n  // const yyyy = 2020;\r\n\r\n  mmGroup.push(`${yyyy}-${(mIndex + 1).toString().padStart(2, '0')}`);\r\n\r\n  for (let index = 0; index < 5; index++) {\r\n    let curY = yyyy;\r\n    let curM = mIndex - index;\r\n    if (curM <= 0) {\r\n      curM = 12 - index;\r\n      curY = yyyy - 1;\r\n    }\r\n\r\n    mmGroup.push(`${curY}-${curM.toString().padStart(2, '0')}`);\r\n  }\r\n\r\n  const tidyUpMyData = game_id => {\r\n    let dates = [];\r\n    if (game_id === 'all_game') {\r\n      return qCountData\r\n        .reduce(function(prev, curr) {\r\n          if (dates.indexOf(curr.時間) < 0) {\r\n            dates.push(curr.時間);\r\n            return [...prev, { 時間: curr.時間, cnt: curr.cnt }];\r\n          } else {\r\n            let tmpData = prev.filter(r => r.時間 === curr.時間)[0];\r\n            return [\r\n              ...prev.filter(r => r.時間 !== curr.時間),\r\n              {\r\n                時間: curr.時間,\r\n                cnt: curr.cnt + tmpData.cnt\r\n              }\r\n            ];\r\n          }\r\n        }, [])\r\n        .sort((a, b) => {\r\n          if (a.時間 < b.時間) {\r\n            return -1;\r\n          }\r\n          if (a.時間 > b.時間) {\r\n            return 1;\r\n          }\r\n        });\r\n    } else {\r\n      return qCountData.filter(item => item.game_id === game_id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: '客服', path: mainPath, active: false },\r\n          { label: mainTitle, path: mainPath, active: true }\r\n        ]}\r\n        title={mainTitle}\r\n      />\r\n      <Row className='mt-2'>\r\n        <Col md={6} sm={6}>\r\n          {allgames.length > 0 && (\r\n            <Form inline className='mb-2'>\r\n              <FormGroup className='mb-2 mr-sm-2 mb-sm-0'>\r\n                <Label htmlFor='selGameId' className='mr-sm-2'>\r\n                  遊戲:\r\n                </Label>\r\n                <Input\r\n                  type='select'\r\n                  name='selGameId'\r\n                  id='selGameId'\r\n                  className='custom-select'\r\n                  value={gameId}\r\n                  onChange={e => onGameIDChange(e.target.value)}>\r\n                  <option value=''>選擇遊戲...</option>\r\n                  <option value='all_game'>全產品</option>\r\n                  {allgames.map(mItem => (\r\n                    <option key={`game-` + mItem.game_id} value={mItem.game_id}>\r\n                      {mItem.game_name}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n\r\n              <ButtonGroup className='btn-group mb-2 ml-3'>\r\n                <Button\r\n                  onClick={e => setRptCondition('all')}\r\n                  color={rptCondition === 'all' ? 'danger' : 'light'}>\r\n                  by 日期 + 人員\r\n                </Button>\r\n                <Button\r\n                  onClick={e => setRptCondition('date')}\r\n                  color={rptCondition === 'date' ? 'danger' : 'light'}>\r\n                  by 日期\r\n                </Button>\r\n                <Button\r\n                  onClick={e => setRptCondition('user')}\r\n                  color={rptCondition === 'user' ? 'danger' : 'light'}>\r\n                  by 人員\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n        <Col md={6} sm={6}>\r\n          <Form inline className='mb-2  float-right'>\r\n            <FormGroup className='mb-2 mr-sm-2 mb-sm-0'>\r\n              <Label htmlFor='selMonth' className='mr-sm-2'>\r\n                月份:\r\n              </Label>\r\n              <Input\r\n                type='select'\r\n                name='selMonth'\r\n                id='selMonth'\r\n                className='custom-select'\r\n                value={yyyymm}\r\n                onChange={e => setYyyymm(e.target.value)}>\r\n                {mmGroup.map(mItem => (\r\n                  <option key={`yymm-` + mItem} value={mItem}>\r\n                    {mItem}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <Button\r\n              color='primary'\r\n              className='mb-2 mr-1'\r\n              onClick={onSearchClick}>\r\n              搜尋\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Nav tabs className='nav-bordered'>\r\n            {tabContents.map((tab, index) => {\r\n              return (\r\n                <NavItem key={`tab_${index}`}>\r\n                  <NavLink\r\n                    href='#'\r\n                    className={classnames({\r\n                      active: activeTab === tab.id\r\n                    })}\r\n                    onClick={() => {\r\n                      toggle(tab.id);\r\n                    }}>\r\n                    <i\r\n                      className={classnames(\r\n                        tab.icon,\r\n                        'd-lg-none',\r\n                        'd-block',\r\n                        'mr-1'\r\n                      )}></i>\r\n                    <span className='d-none d-lg-block'>{tab.title}</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId='1'>\r\n          <Row className='mb-2'>\r\n            <Col lg={4}>\r\n              {qCountData.length > 0 && (\r\n                <CSVLink\r\n                  data={tidyUpMyData(gameId)}\r\n                  headers={\r\n                    gameId === 'all_game'\r\n                      ? [\r\n                          { label: '日期', key: '時間' },\r\n                          { label: '數量', key: 'cnt' }\r\n                        ]\r\n                      : [\r\n                          { label: '日期', key: '時間' },\r\n                          { label: '數量', key: 'cnt' },\r\n                          ...Object.keys(question_type).map(t => ({\r\n                            label: question_type[t],\r\n                            key: question_type[t]\r\n                          }))\r\n                        ]\r\n                  }\r\n                  filename={\r\n                    gameName +\r\n                    yyyymm +\r\n                    '提問單進件量' +\r\n                    new Date().getTime() +\r\n                    '.csv'\r\n                  }>\r\n                  下載 csv檔案\r\n                </CSVLink>\r\n              )}\r\n\r\n              {qCountData && (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h4 className='header-title'>{gameName}-提問單進件量</h4>\r\n                    <Table className='mb-0' bordered size='sm'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>日期</th>\r\n                          <th>數量</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {tidyUpMyData(gameId).map((item, index) => (\r\n                          <tr key={`q_${index}`}>\r\n                            <th>{item.時間}</th>\r\n                            <td>{item.cnt}</td>\r\n                          </tr>\r\n                        ))}\r\n\r\n                        <tr>\r\n                          <th>總計</th>\r\n                          <td>\r\n                            {(gameId === 'all_game'\r\n                              ? qCountData\r\n                              : qCountData.filter(\r\n                                  item => item.game_id === gameId\r\n                                )\r\n                            ).reduce((a, b) => a + b.cnt, 0)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n            <Col lg={4}>\r\n              {statTable(\r\n                antsHandleData,\r\n                `${gameName}-蟻力提問單處理量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                question_type\r\n              )}\r\n            </Col>\r\n            <Col lg={4}>\r\n              {statTable(\r\n                csHandleData,\r\n                `${gameName}-客服提問單處理量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                question_type\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId='2'>\r\n          <Row className='mb-2'>\r\n            <Col lg={4}>\r\n              {statTable(\r\n                antsHandleAllocationData,\r\n                `${gameName}-蟻力後送案件量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                {}\r\n              )}\r\n            </Col>\r\n            {(user.role === 'admin' || user.role === 'pm') && (\r\n              <Col lg={4}>\r\n                {statTable(\r\n                  csHandleAllocationData,\r\n                  `${gameName}-客服後送處理量`,\r\n                  gameId,\r\n                  yyyymm,\r\n                  rptCondition,\r\n                  {}\r\n                )}\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nServiceStatistics.propTypes = {\r\n  getServiceStatistics: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  antsHandleData: state.Service.antsHandleData,\r\n  csHandleData: state.Service.csHandleData,\r\n  qCountData: state.Service.qCountData,\r\n  csHandleAllocationData: state.Service.csHandleAllocationData,\r\n  antsHandleAllocationData: state.Service.antsHandleAllocationData,\r\n  question_type: state.Service.question_type,\r\n  allgames: state.Service.allgames,\r\n  loading: state.Service.loading,\r\n  error: state.Service.error,\r\n  user: state.Auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { getServiceStatistics })(\r\n  ServiceStatistics\r\n);\r\n\r\nconst statTable = (\r\n  statData,\r\n  label,\r\n  gameId,\r\n  yyyymm,\r\n  condition,\r\n  question_type\r\n) => {\r\n  let dates = [];\r\n\r\n  const dataRaw = (gameId === 'all_game'\r\n    ? statData\r\n        .reduce(function(prev, curr) {\r\n          if (dates.indexOf(curr.時間 + curr.admin_name) < 0) {\r\n            dates.push(curr.時間 + curr.admin_name);\r\n            //console.log(dates);\r\n            return [...prev, { ...curr }];\r\n          } else {\r\n            let tmpData = prev.filter(\r\n              r => r.時間 === curr.時間 && r.admin_name === curr.admin_name\r\n            )[0];\r\n            // console.log(prev);\r\n            // console.log('curr.時間', curr.時間);\r\n            // console.log('curr.admin_name', curr.admin_name);\r\n            return [\r\n              ...prev.filter(\r\n                r => r.admin_name !== curr.admin_name || r.時間 !== curr.時間\r\n              ),\r\n              {\r\n                ...curr,\r\n                test_cnt:\r\n                  Number.parseInt(curr.test_cnt) +\r\n                  Number.parseInt(tmpData.test_cnt),\r\n                cnt: Number.parseInt(curr.cnt) + Number.parseInt(tmpData.cnt)\r\n              }\r\n            ];\r\n          }\r\n        }, [])\r\n        .sort((a, b) => {\r\n          if (a.時間 < b.時間) {\r\n            return -1;\r\n          }\r\n          if (a.時間 > b.時間) {\r\n            return 1;\r\n          }\r\n        })\r\n    : statData.filter(d => d.game_id === gameId)\r\n  ).map(d => ({\r\n    dt: d.時間,\r\n    admin_name: d.admin_name,\r\n    admin_uid: d.admin_uid,\r\n    test_cnt: d.test_cnt,\r\n    cnt: d.cnt,\r\n    ...d\r\n  }));\r\n\r\n  let itemSet = [];\r\n  let cond =\r\n    condition === 'all' ? 'all' : condition === 'date' ? 'dt' : 'admin_name';\r\n  //let cond = condition ======\"date\" ? \"dt\" : \"admin_name\";\r\n  const condLabel = condition === 'all' ? '日期' : '人員';\r\n\r\n  const data =\r\n    cond === 'all'\r\n      ? dataRaw\r\n      : dataRaw.reduce(function(prev, curr) {\r\n          if (itemSet.indexOf(curr[cond]) < 0) {\r\n            itemSet.push(curr[cond]);\r\n            return [...prev, { ...curr }];\r\n          } else {\r\n            prev = prev.map(user => {\r\n              if (user[cond] === curr[cond]) {\r\n                return {\r\n                  [cond]: user[cond],\r\n                  test_cnt:\r\n                    Number.parseInt(user.test_cnt) +\r\n                    Number.parseInt(curr.test_cnt),\r\n                  cnt: Number.parseInt(user.cnt) + Number.parseInt(curr.cnt)\r\n                };\r\n              } else {\r\n                return user;\r\n              }\r\n            });\r\n            return prev;\r\n          }\r\n        }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <CSVLink\r\n        data={dataRaw}\r\n        headers={\r\n          gameId === 'all_game'\r\n            ? [\r\n                { label: '日期', key: 'dt' },\r\n                { label: '人員', key: 'admin_name' },\r\n                { label: '數量', key: 'cnt' },\r\n                { label: '測試', key: 'test_cnt' }\r\n              ]\r\n            : [\r\n                { label: '日期', key: 'dt' },\r\n                { label: '人員', key: 'admin_name' },\r\n                { label: '數量', key: 'cnt' },\r\n                { label: '測試', key: 'test_cnt' },\r\n                ...Object.keys(question_type).map(t => ({\r\n                  label: question_type[t],\r\n                  key: question_type[t]\r\n                }))\r\n              ]\r\n        }\r\n        filename={label + yyyymm + new Date().getTime() + '.csv'}>\r\n        下載 csv檔案\r\n      </CSVLink>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <h4 className='header-title'>{label} </h4>\r\n          <Table className='mb-0' bordered size='sm'>\r\n            <thead>\r\n              <tr>\r\n                {condition === 'all' ? (\r\n                  <Fragment>\r\n                    <th>日期</th> <th>人員</th>\r\n                  </Fragment>\r\n                ) : (\r\n                  <th>{condLabel}</th>\r\n                )}\r\n                <th>數量</th>\r\n                {Object.keys(question_type).length !== 0 && <th>測試</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={`q_${index}`}>\r\n                  {condition === 'all' ? (\r\n                    <Fragment>\r\n                      <th>{item.dt}</th> <th>{item.admin_name}</th>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <th>{item[cond]}</th>\r\n                  )}\r\n                  <td>\r\n                    {gameId === 'all_game' &&\r\n                    condition === 'all' &&\r\n                    label.indexOf('後送') < 0 ? (\r\n                      <a\r\n                        className='text-info'\r\n                        href={`/service/questions/query?replyDate=${item.dt}&replyAdmin=${item.admin_uid}`}\r\n                        target='blank'>\r\n                        {' '}\r\n                        {item.cnt}\r\n                      </a>\r\n                    ) : (\r\n                      item.cnt\r\n                    )}{' '}\r\n                  </td>\r\n                  {Object.keys(question_type).length !== 0 && (\r\n                    <td>{item.test_cnt}</td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                {condition === 'all' ? (\r\n                  <Fragment>\r\n                    <th colSpan='2'>總計</th>\r\n                  </Fragment>\r\n                ) : (\r\n                  <th>總計</th>\r\n                )}\r\n\r\n                <td>{data.reduce((a, b) => a + Number.parseInt(b.cnt), 0)}</td>\r\n                {Object.keys(question_type).length !== 0 && (\r\n                  <td>\r\n                    {data.reduce((a, b) => a + Number.parseInt(b.test_cnt), 0)}\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","export * from \"./auth/actions\";\r\nexport * from \"./layout/actions\";\r\nexport * from \"./appMenu/actions\";\r\nexport * from \"./dashboard/actions\";\r\nexport * from \"./platform/actions\";\r\nexport * from \"./offlinecs/actions\";\r\nexport * from \"./games/actions\";\r\nexport * from \"./servers/actions\";\r\nexport * from \"./adminUsers/actions\";\r\nexport * from \"./serviceAllocate/actions\";\r\nexport * from \"./service/actions\";\r\nexport * from \"./vip/actions\";\r\nexport * from \"./vipoffers/actions\";\r\nexport * from \"./viprpt/actions\";\r\nexport * from \"./batch/actions\";\r\nexport * from \"./event/actions\";\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm' | null,\n    type: 'bordered' | 'grow',\n    color: string,\n    children?: PropTypes.object,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps) => {\n    const children = props.children || null;\n    const Tag = props.tag;\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                { 'spinner-border': props.type === 'bordered', 'spinner-grow': props.type === 'grow' },\n                [`text-${props.color}`],\n                { [`avatar-${props.size}`]: props.size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n    color: 'primary',\n};\n\nexport default Spinner;\n"],"sourceRoot":""}