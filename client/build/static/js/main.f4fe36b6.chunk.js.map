{"version":3,"sources":["redux/service/constants.js","redux/serviceAllocate/constants.js","redux/vip/constants.js","redux/auth/constants.js","redux/layout/constants.js","redux/offlinecs/constants.js","redux/service/actions.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","redux/vip/actions.js","redux/vipoffers/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/constants.js","redux/adminUsers/constants.js","redux/games/constants.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/offlinecs/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/platform/actions.js","redux/games/actions.js","redux/servers/actions.js","redux/adminUsers/actions.js","redux/vipoffers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","clearMessage","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","id","qid","allocation_cause","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","game_id","uid","command","record_id","record","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","password","fullname","email","history","passwordResetStatus","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","dataType","records","affectedId","errors","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","updatePassword","updatePasswordSuccess","updatePasswordFailed","account","getGames","getGamesSuccess","getGamesFailed","getServersByGameId","getServersSuccess","getServersFailed","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","role","users","getVipOffers","getVipOffersSuccess","getVipOffersFailed","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","ModifyPassword","CplCaseHome","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","action","objectSpread","Auth","AppMenu","stat","Dashboard","updated","Platform","currentRecord","OfflineCS","list","Games","Servers","AdminUsers","allocation","allocation_logs","allocationStatus","updateOKMessage","cs_members","ServiceAllocate","newList","logs","log","filter","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","tasks","msg","updatedField","newLog","all_records","game_list","vip_list","requestData","not_allowed","VIP","vip","s","toString","newRecord","newReqData","vip_offer_list","VipOffers","current","Service","question","updateQuestionData","replies","reply","question_type","question_status","_action$payload","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload2","query","reply_query","newAllocationStatus","allocation_status","status","test_list","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","prev","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","watchChangePassword","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","watchGetCurrentRecordData","watchEditRecord","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","offlinecs_saga_marked5","offlinecs_saga_marked6","offlinecs_saga_marked7","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","_ref5","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","saga_marked10","saga_marked11","saga_marked12","saga_marked13","getQuestionsData","getCurrentQuestionData","getTestData","updateType","updateStatus","watchGetCurrent","watchGetTestData","watchOverviewData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","_ref6","service_saga_marked7","_ref7","service_saga_marked8","_ref8","service_saga_marked9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","getVIP","putVIP","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","vipSaga","vip_saga_marked","vip_saga_marked2","_ref2$payload","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","watchGetOffers","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4fe36b6.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    //console.log(\"setAuthToken\", token);\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        setAuthToken(user.token);\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    //console.log('getLoggedInUser', user);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA,\r\n    payload: dataType,\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_SUCCESS,\r\n    payload: records,\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const editRecord = (dataType: string, record: FormData): OfflineCsAction => ({\r\n    type: EDIT_RECORD,\r\n    payload: { dataType, record },\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n    type: EDIT_RECORD_SUCCESS,\r\n    payload: result.affectedId,\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n    type: EDIT_RECORD_FAILED,\r\n    payload: errors,\r\n});\r\nexport const getCurrentRecord = (dataType: string, record_id: int, history: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT,\r\n    payload: { dataType, record_id, history },\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT_SUCCESS,\r\n    payload: record,\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_CURRENT_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (account: string, password: string): PlatformAction => ({\n    type: UPDATE_PASSWORD,\n    payload: { account, password },\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n    type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n    type: UPDATE_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport { GET_GAMES_DATA, GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n    type: GET_GAMES_DATA,\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n    type: GET_GAMES_DATA_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n    type: GET_GAMES_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n    type: GET_USERS,\r\n    payload: role,\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users,\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n    type: GET_USERS_FAILED,\r\n    payload: error,\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\nconst CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\n//*add new\nconst AdminDashboard = React.lazy(() => import('../pages/dashboards/Admin'));\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/ProjectDetail'));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\nconst ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n// - kanban\nconst Kanban = React.lazy(() => import('../pages/apps/Kanban/'));\n\n// - email\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/Starter'));\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\n\n// uikit\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst General = React.lazy(() => import('../pages/uikit/General'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n//platform\nconst ModifyPassword = React.lazy(() => import('../pages/platform/ModifyPassword'));\n\n//offline cs\nconst CplCaseHome = React.lazy(() => import('../pages/offline/cpl_case/CplCaseHome'));\nconst GovLetterHome = React.lazy(() => import('../pages/offline/gov_letter/GovLetterHome'));\nconst PersonalVisitHome = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitHome'));\nconst PersonalVisitForm = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitForm'));\n\nconst GovLetterForm = React.lazy(() => import('../pages/offline/gov_letter/GovLetterForm'));\n\n\n//service\n\nconst ServiceOverview = React.lazy(() => import('../pages/service/questions/overview'));\nconst AllocateListPage = React.lazy(() => import('../pages/service/allocate'));\nconst QuesionsListPage = React.lazy(() => import('../pages/service/questions'));\nconst SingleQuestionPage = React.lazy(() => import('../pages/service/questions/view'));\n\nconst TestPage = React.lazy(() => import('../pages/service/questions/TestPage'));\n\n//vip\nconst WhaleUserHome = React.lazy(() => import('../pages/vip/whale_users/WhaleUserHome'));\nconst VipOfferHome = React.lazy(() => import('../pages/vip/offers/index'));\nconst VipOfferForm = React.lazy(() => import('../pages/vip/offers/form'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/service\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst myDashboardRoutes = {\n    path: '/mydashboard',\n    name: '我的',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/mydashboard/ecommerce',\n            name: 'Ecommerce',\n            badge: {\n                variant: 'success',\n                text: '3',\n            },\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/mydashboard/crm',\n            name: 'CRM',\n            component: CRMDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n//official dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/service',\n            name: '客服相關',\n            component: AdminDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n// apps\nconst appRoutes = {\n    path: '/apps',\n    name: 'Apps',\n    icon: 'dripicons-view-apps',\n    children: [\n        {\n            path: '/apps/calendar',\n            name: 'Calendar',\n            component: CalendarApp,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/projects',\n            name: 'Projects',\n            children: [\n                {\n                    path: '/apps/projects/list',\n                    name: 'List',\n                    component: Projects,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/projects/detail',\n                    name: 'Detail',\n                    component: ProjectDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/ecommerce',\n            name: 'eCommerce',\n            children: [\n                {\n                    path: '/apps/ecommerce/products',\n                    name: 'Products',\n                    component: EcommerceProducts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/details',\n                    name: 'Product Details',\n                    component: ProductDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/orders',\n                    name: 'Orders',\n                    component: Orders,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/order/details',\n                    name: 'Order Details',\n                    component: OrderDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/customers',\n                    name: 'Customers',\n                    component: Customers,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/shopping-cart',\n                    name: 'Shopping Cart',\n                    component: Cart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/checkout',\n                    name: 'Checkout',\n                    component: Checkout,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/sellers',\n                    name: 'Sellers',\n                    component: Sellers,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email',\n            name: 'Email',\n            children: [\n                {\n                    path: '/apps/email/inbox',\n                    name: 'Inbox',\n                    component: Inbox,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/email/details',\n                    name: 'Email Details',\n                    component: EmailDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n    ],\n};\n\n// pages\nconst pageRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'dripicons-copy',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/faq',\n            name: 'FAQ',\n            component: FAQ,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404',\n            name: 'Error - 404',\n            component: ErrorPageNotFound,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: ServerError,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'UI Kit',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/ui/buttons',\n            name: 'Buttons',\n            component: Buttons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/cards',\n            name: 'Cards',\n            component: Cards,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/general',\n            name: 'General',\n            component: General,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/grid',\n            name: 'Grid',\n            component: Grid,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            component: Icons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/modals',\n            name: 'Modals',\n            component: Modals,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/notifications',\n            name: 'Notifications',\n            component: Notifications,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/spinners',\n            name: 'Spinners',\n            component: Spinners,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/tabs',\n            name: 'Tabs',\n            component: Tabs,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/typography',\n            name: 'Typography',\n            component: Typography,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// forms\nconst formsRoutes = {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'dripicons-document',\n    children: [\n        {\n            path: '/forms/basic',\n            name: 'Basic Elements',\n            component: BasicForms,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/advanced',\n            name: 'Form Advanced',\n            component: FormAdvanced,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/validation',\n            name: 'Form validation',\n            component: FormValidation,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/wizard',\n            name: 'Form Wizard',\n            component: FormWizard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/upload',\n            name: 'File Upload',\n            component: FileUpload,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/editors',\n            name: 'Editors',\n            component: Editors,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// other features\nconst featuresRoutes = {\n    path: '/features',\n    name: 'Features',\n    icon: 'dripicons-view-list-large',\n    children: [\n        {\n            path: '/features/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/features/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/features/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n\nconst platformRoutesSub = {\n    path: '/platform',\n    name: 'Platform',\n    children: [\n        {\n            path: '/platform/modify_password',\n            name: '修改密碼',\n            component: ModifyPassword,\n            route: PrivateRoute,\n        },\n    ],\n};\n// online cs\n\nconst serviceRoutesSub = {\n    path: '/service',\n    name: 'Service',\n    children: [\n        {\n            path: '/service/view/:question_id',\n            name: '客服案件檢視',\n            component: SingleQuestionPage,\n            route: PrivateRoute,\n        },\n    ],\n}\nconst serviceRoutes = {\n    path: '/service',\n    name: '客服',\n    icon: ' dripicons-device-desktop',\n    children: [\n        {\n            exact: true,\n            path:'/service/overview',\n            name:'總覽',\n            component:ServiceOverview,\n            route: PrivateRoute,\n        },\n        {\n            exact: true,\n            path: '/service/questions/todo',\n            name: '待處理案件',\n            component: QuesionsListPage,\n                    route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/get_list',\n            name: '等待中案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/closed',\n            name: '近期結案案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            exact: true,\n            path: '/service/allocate/list',\n            name: '派單系統- 案件列表',\n            component: AllocateListPage,\n                    route: PrivateRoute,\n            \n        },\n\n    ],\n};\n// offline cs\nconst offlineRoutes = {\n    path: '/offline',\n    name: '線下客服區',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/offline/cpl_case/home',\n            name: '消保',\n            component: CplCaseHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/home',\n            name: '公函',\n            component: GovLetterHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/home',\n            name: '親訪',\n            component: PersonalVisitHome,\n            route: PrivateRoute,\n        },\n    ],\n};\nconst offlineRoutesSub = {\n    path: '/offline',\n    name: 'offlineCS',\n    children: [\n        {\n            path: '/offline/personal_visit/create',\n            name: '新增親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/edit/:record_id',\n            name: '編輯親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/create',\n            name: '新增公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/edit/:record_id',\n            name: '編輯公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/test',\n            name: '測試',\n            component: TestPage,\n            route: PrivateRoute,\n        },\n        \n    ],\n};\n\n// VIP\nconst vipRoutes = {\n    path: '/vip',\n    name: 'VIP',\n    icon: 'dripicons-trophy', \n    children: [\n        {\n            path: '/vip/whale_users',\n            name: '鯨魚用戶',\n            component: WhaleUserHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/vip/offers',\n            name: 'VIP方案',\n            children: [\n                {\n                    path: '/vip/offers/offer_list',\n                    name: '方案列表',\n                    component: VipOfferHome,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/vip/offers/add_offer',\n                    name: '方案明細',\n                    component: VipOfferForm,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        \n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    dashboardRoutes,\n    appRoutes,\n    authRoutes,\n    pageRoutes,\n    uiRoutes,\n    formsRoutes,\n    featuresRoutes,\n    platformRoutesSub,\n    offlineRoutes,\n    offlineRoutesSub,\n    myDashboardRoutes,\n    serviceRoutes,\n    serviceRoutesSub,\n    vipRoutes\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n(loggedInUser !== null && loggedInUser.uid === 112)\n        ? [\n              dashboardRoutes,\n              appRoutes,\n              pageRoutes,\n              uiRoutes,\n              formsRoutes,\n              featuresRoutes,\n              offlineRoutes,\n              myDashboardRoutes,\n              serviceRoutes,\n              vipRoutes\n          ]\n        : [dashboardRoutes, offlineRoutes,serviceRoutes,vipRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n// For Dark import DarkTheme.scss\n// import './assets/scss/DarkTheme.scss';\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\nconst INIT_STATE = {\n    updated: null,\n    loading: true,\n    error: '',\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n    switch (action.type) {\n        case UPDATE_PASSWORD:\n            return { ...state, loading: true };\n        case UPDATE_PASSWORD_SUCCESS:\n            return { ...state, updated: true, loading: false, error: null };\n        case UPDATE_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    records: [],\r\n    loading: true,\r\n    affectedId: 0,\r\n    error: {},\r\n    currentRecord: {},\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n    switch (action.type) {\r\n        case GET_GOV_DATA:\r\n            return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n        case GET_GOV_DATA_SUCCESS:\r\n            return { ...state, records: action.payload, loading: false, error: null };\r\n        case GET_GOV_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case EDIT_RECORD:\r\n            return { ...state, loading: true };\r\n        case EDIT_RECORD_SUCCESS:\r\n            return { ...state, affectedId: action.payload, loading: false, error: null };\r\n        case EDIT_RECORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case GET_CURRENT:\r\n            return { ...state, loading: true };\r\n        case GET_CURRENT_SUCCESS:\r\n            return { ...state, currentRecord: action.payload, loading: false, error: null };\r\n        case GET_CURRENT_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import { GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n    switch (action.type) {\r\n        case GET_GAMES_DATA_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_GAMES_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    loading: true,\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = { user?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return { ...state, loading: true };\r\n        case GET_USERS_SUCCESS:\r\n            return { ...state, users: action.payload, loading: false, error: null };\r\n        case GET_USERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\"\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: [\r\n            ...state.current.replies.filter(\r\n              reply => reply.id !== action.payload.id\r\n            ),\r\n            action.payload.updatedField\r\n          ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { UPDATE_PASSWORD } from './constants';\r\nimport { updatePasswordSuccess, updatePasswordFailed } from './actions';\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n    const options = {\r\n        data: JSON.stringify({ account, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/platform/modify_password',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(updatePasswordSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(updatePasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n    yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nfunction* PlatformSaga(): any {\r\n    yield all([fork(watchChangePassword)]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GOV_DATA, EDIT_RECORD, GET_CURRENT } from './constants';\r\n\r\nimport {\r\n    getOfflineCsDataSuccess,\r\n    getOfflineCsDataFailed,\r\n    editRecordSuccess,\r\n    editRecordFailed,\r\n    getCurrentRecordSuccess,\r\n    getCurrentRecordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${type === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getOfflineCsDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 403:\r\n                message = error.response.data;\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getOfflineCsDataFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n    //console.log('editGovRecord *****', payload);\r\n    const { dataType, record } = payload;\r\n    //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    const options = {\r\n        data: record,\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        //console.log('editGovRecordSuccess editGovRecord', response);\r\n        yield put(editRecordSuccess(response.data));\r\n    } catch (error) {\r\n        //console.log('error editGovRecord', error.response.data);\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(editRecordFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n    //console.log('getCurrentRecord payload ', payload);\r\n    const { dataType, record_id } = payload;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}/detail/${record_id}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getCurrentRecordSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 400:\r\n                message = error.response.data.msg;\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(getCurrentRecordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n    yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n    yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n    yield all([fork(watchGetData), fork(watchEditRecord), fork(watchGetCurrentRecordData)]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GAMES_DATA } from './constants';\r\n\r\nimport { getGamesSuccess, getGamesFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/games/list',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getGamesSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getGamesFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS } from './constants';\r\n\r\nimport { getAdminUsersSuccess, getAdminUsersFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/admin_users/getAdminUsersByRole/${role}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getAdminUsersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getAdminUsersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion)\r\n  ]);\r\n}\r\n\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_VIP_OFFERS } from \"./constants\";\r\n\r\nimport { getVipOffersFailed, getVipOffersSuccess } from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([fork(watchGetOffers)]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}