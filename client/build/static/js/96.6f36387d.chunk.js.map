{"version":3,"sources":["pages/service/statistics/index.js","components/PageTitle.js","redux/actions.js","components/Spinner.js"],"names":["connect","state","antsHandleData","Service","csHandleData","qCountData","allgames","loading","error","getServiceStatistics","_ref","_useState","useState","_useState2","Object","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","gameId","setGameId","_useState3","_useState4","gameName","setGameName","_useState5","concat","Date","getFullYear","getMonth","toString","padStart","_useState6","yyyymm","setYyyymm","_useState7","_useState8","rptCondition","setRptCondition","useEffect","document","title","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Spinner__WEBPACK_IMPORTED_MODULE_20__","className","color","mmGroup","dd","mIndex","yyyy","push","index","curY","curM","react__WEBPACK_IMPORTED_MODULE_4__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_19__","breadCrumbItems","label","path","active","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","sm","length","reactstrap__WEBPACK_IMPORTED_MODULE_9__","inline","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_12__","type","name","id","value","onChange","e","gameid","target","undefined","filter","g","game_id","game_name","map","mItem","key","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onClick","lg","react_csv__WEBPACK_IMPORTED_MODULE_6__","data","item","headers","filename","getTime","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","bordered","size","時間","cnt","reduce","b","statTable","statData","condition","dataRaw","d","dt","admin_name","test_cnt","itemSet","cond","condLabel","prev","curr","indexOf","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","user","_ref2","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","Number","parseInt","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","PageTitle","props","to","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","_layout_actions__WEBPACK_IMPORTED_MODULE_1__","_appMenu_actions__WEBPACK_IMPORTED_MODULE_2__","_dashboard_actions__WEBPACK_IMPORTED_MODULE_3__","_platform_actions__WEBPACK_IMPORTED_MODULE_4__","_offlinecs_actions__WEBPACK_IMPORTED_MODULE_5__","_games_actions__WEBPACK_IMPORTED_MODULE_6__","_servers_actions__WEBPACK_IMPORTED_MODULE_7__","_adminUsers_actions__WEBPACK_IMPORTED_MODULE_8__","_serviceAllocate_actions__WEBPACK_IMPORTED_MODULE_9__","_service_actions__WEBPACK_IMPORTED_MODULE_10__","_vip_actions__WEBPACK_IMPORTED_MODULE_11__","_vipoffers_actions__WEBPACK_IMPORTED_MODULE_12__","Spinner","children","Tag","tag","react__WEBPACK_IMPORTED_MODULE_1___default","role","classNames","spinner-border","spinner-grow","defaultProps"],"mappings":"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","file":"static/js/96.6f36387d.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  ButtonGroup\r\n} from \"reactstrap\";\r\nimport { getServiceStatistics } from \"../../../redux/actions\";\r\nimport PageTitle from \"../../../components/PageTitle\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nconst ServiceStatistics = ({\r\n  getServiceStatistics,\r\n  antsHandleData,\r\n  csHandleData,\r\n  qCountData,\r\n  loading,\r\n  allgames,\r\n  error\r\n}) => {\r\n  const mainTitle = \"客服案件統計\";\r\n  const mainPath = \"/service\";\r\n\r\n  const [gameId, setGameId] = useState(\"g78naxx2hmt\");\r\n  const [gameName, setGameName] = useState(\"決戰平安京\");\r\n  const [yyyymm, setYyyymm] = useState(\r\n    `${new Date().getFullYear()}-${(new Date().getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}`\r\n  );\r\n\r\n  const [rptCondition, setRptCondition] = useState(\"user\");\r\n\r\n  useEffect(() => {\r\n    getServiceStatistics(yyyymm);\r\n    document.title = mainTitle;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onSearchClick = () => {\r\n    getServiceStatistics(yyyymm);\r\n  };\r\n\r\n  const onGameIDChange = gameid => {\r\n    if (gameid !== \"\" && gameid !== undefined && gameid !== null) {\r\n      setGameId(gameid);\r\n      setGameName(allgames.filter(g => g.game_id === gameid)[0].game_name);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner className=\"m-2\" color=\"secondary\" />;\r\n  }\r\n\r\n  let mmGroup = [];\r\n  const dd = new Date();\r\n  const mIndex = dd.getMonth();\r\n  const yyyy = dd.getFullYear();\r\n\r\n  // const mIndex = 0;\r\n  // const yyyy = 2020;\r\n\r\n  mmGroup.push(`${yyyy}-${(mIndex + 1).toString().padStart(2, \"0\")}`);\r\n\r\n  for (let index = 0; index < 5; index++) {\r\n    let curY = yyyy;\r\n    let curM = mIndex - index;\r\n    if (curM <= 0) {\r\n      curM = 12 - index;\r\n      curY = yyyy - 1;\r\n    }\r\n\r\n    mmGroup.push(`${curY}-${curM.toString().padStart(2, \"0\")}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"客服\", path: mainPath, active: false },\r\n          { label: mainTitle, path: mainPath, active: true }\r\n        ]}\r\n        title={mainTitle}\r\n      />\r\n      <Row className=\"mt-2\">\r\n        <Col md={6} sm={6}>\r\n          {allgames.length > 0 && (\r\n            <Form inline className=\"mb-2\">\r\n              <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                <Label htmlFor=\"selGameId\" className=\"mr-sm-2\">\r\n                  遊戲:\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"selGameId\"\r\n                  id=\"selGameId\"\r\n                  className=\"custom-select\"\r\n                  value={gameId}\r\n                  onChange={e => onGameIDChange(e.target.value)}\r\n                >\r\n                  <option value=\"\">選擇遊戲...</option>\r\n\r\n                  {allgames.map(mItem => (\r\n                    <option key={`game-` + mItem.game_id} value={mItem.game_id}>\r\n                      {mItem.game_name}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n\r\n              <ButtonGroup className=\"btn-group mb-2 ml-3\">\r\n                <Button\r\n                  onClick={e => setRptCondition(\"date\")}\r\n                  color={rptCondition === \"date\" ? \"danger\" : \"light\"}\r\n                >\r\n                  by 日期\r\n                </Button>\r\n                <Button\r\n                  onClick={e => setRptCondition(\"user\")}\r\n                  color={rptCondition === \"user\" ? \"danger\" : \"light\"}\r\n                >\r\n                  by 人員\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n        <Col md={6} sm={6}>\r\n          <Form inline className=\"mb-2  float-right\">\r\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n              <Label htmlFor=\"selMonth\" className=\"mr-sm-2\">\r\n                月份:\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selMonth\"\r\n                id=\"selMonth\"\r\n                className=\"custom-select\"\r\n                value={yyyymm}\r\n                onChange={e => setYyyymm(e.target.value)}\r\n              >\r\n                {mmGroup.map(mItem => (\r\n                  <option key={`yymm-` + mItem} value={mItem}>\r\n                    {mItem}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mb-2 mr-1\"\r\n              onClick={onSearchClick}\r\n            >\r\n              搜尋\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row></Row>\r\n      <Row className=\"mb-2\">\r\n        <Col lg={3}>\r\n          {qCountData.length > 0 && (\r\n            <CSVLink\r\n              data={qCountData.filter(item => item.game_id === gameId)}\r\n              headers={[\r\n                { label: \"日期\", key: \"時間\" },\r\n                { label: \"數量\", key: \"cnt\" }\r\n              ]}\r\n              filename={\r\n                gameName +\r\n                yyyymm +\r\n                \"提問單進件量\" +\r\n                new Date().getTime() +\r\n                \".csv\"\r\n              }\r\n            >\r\n              下載 csv檔案\r\n            </CSVLink>\r\n          )}\r\n\r\n          {qCountData && (\r\n            <Card>\r\n              <CardBody>\r\n                <h4 className=\"header-title\">{gameName}-提問單進件量</h4>\r\n                <Table className=\"mb-0\" bordered size=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>日期</th>\r\n                      <th>數量</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {qCountData\r\n                      .filter(item => item.game_id === gameId)\r\n                      .map((item, index) => (\r\n                        <tr key={`q_${index}`}>\r\n                          <th>{item.時間}</th>\r\n                          <td>{item.cnt}</td>\r\n                        </tr>\r\n                      ))}\r\n\r\n                    <tr>\r\n                      <th>總計</th>\r\n                      <td>\r\n                        {qCountData\r\n                          .filter(item => item.game_id === gameId)\r\n                          .reduce((a, b) => a + b.cnt, 0)}\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n        <Col lg={3}>\r\n          {statTable(\r\n            antsHandleData,\r\n            `${gameName}-蟻力提問單處理量`,\r\n            gameId,\r\n            yyyymm,\r\n            rptCondition\r\n          )}\r\n        </Col>\r\n        <Col lg={3}>\r\n          {statTable(\r\n            csHandleData,\r\n            `${gameName}-客服提問單處理量`,\r\n            gameId,\r\n            yyyymm,\r\n            rptCondition\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nServiceStatistics.propTypes = {\r\n  getServiceStatistics: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  antsHandleData: state.Service.antsHandleData,\r\n  csHandleData: state.Service.csHandleData,\r\n  qCountData: state.Service.qCountData,\r\n  allgames: state.Service.allgames,\r\n  loading: state.Service.loading,\r\n  error: state.Service.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { getServiceStatistics })(\r\n  ServiceStatistics\r\n);\r\n\r\nconst statTable = (statData, label, gameId, yyyymm, condition) => {\r\n  const dataRaw = statData\r\n    .filter(d => d.game_id === gameId)\r\n    .map(d => ({\r\n      dt: d.時間,\r\n      admin_name: d.admin_name,\r\n      test_cnt: d.test_cnt,\r\n      cnt: d.cnt\r\n    }));\r\n\r\n  let itemSet = [];\r\n  let cond = condition === \"date\" ? \"dt\" : \"admin_name\";\r\n  const condLabel = condition === \"date\" ? \"日期\" : \"人員\";\r\n  const data = dataRaw.reduce(function(prev, curr) {\r\n    if (itemSet.indexOf(curr[cond]) < 0) {\r\n      itemSet.push(curr[cond]);\r\n      return [...prev, { ...curr }];\r\n    } else {\r\n      prev = prev.map(user => {\r\n        if (user[cond] === curr[cond]) {\r\n          return {\r\n            [cond]: user[cond],\r\n            test_cnt:\r\n              Number.parseInt(user.test_cnt) + Number.parseInt(curr.test_cnt),\r\n            cnt: Number.parseInt(user.cnt) + Number.parseInt(curr.cnt)\r\n          };\r\n        } else {\r\n          return user;\r\n        }\r\n      });\r\n      return prev;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <CSVLink\r\n        data={dataRaw}\r\n        headers={[\r\n          { label: \"日期\", key: \"dt\" },\r\n          { label: \"人員\", key: \"admin_name\" },\r\n          { label: \"數量\", key: \"cnt\" }\r\n        ]}\r\n        filename={label + yyyymm + new Date().getTime() + \".csv\"}\r\n      >\r\n        下載 csv檔案\r\n      </CSVLink>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <h4 className=\"header-title\">{label} </h4>\r\n          <Table className=\"mb-0\" bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>{condLabel}</th>\r\n                <th>數量</th>\r\n                <th>測試</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={`q_${index}`}>\r\n                  <td>{item[cond]}</td>\r\n                  <td>{item.cnt}</td>\r\n                  <td>{item.test_cnt}</td>\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                <th>總計</th>\r\n                <td>{data.reduce((a, b) => a + Number.parseInt(b.cnt), 0)}</td>\r\n                <td>\r\n                  {data.reduce((a, b) => a + Number.parseInt(b.test_cnt), 0)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","export * from \"./auth/actions\";\nexport * from \"./layout/actions\";\nexport * from \"./appMenu/actions\";\nexport * from \"./dashboard/actions\";\nexport * from \"./platform/actions\";\nexport * from \"./offlinecs/actions\";\nexport * from \"./games/actions\";\nexport * from \"./servers/actions\";\nexport * from \"./adminUsers/actions\";\nexport * from \"./serviceAllocate/actions\";\nexport * from \"./service/actions\";\nexport * from \"./vip/actions\";\nexport * from \"./vipoffers/actions\";\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm' | null,\n    type: 'bordered' | 'grow',\n    color: string,\n    children?: PropTypes.object,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps) => {\n    const children = props.children || null;\n    const Tag = props.tag;\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                { 'spinner-border': props.type === 'bordered', 'spinner-grow': props.type === 'grow' },\n                [`text-${props.color}`],\n                { [`avatar-${props.size}`]: props.size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n    color: 'primary',\n};\n\nexport default Spinner;\n"],"sourceRoot":""}