{"version":3,"sources":["components/FileUploader.js","pages/forms/FileUpload.js","components/PageTitle.js"],"names":["FileUploader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAcceptedFiles","files","_allFiles","allFiles","showPreview","map","file","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","state","selectedFiles","push","apply","toConsumableArray","setState","onFileUpload","bytes","decimals","arguments","length","undefined","dm","i","Math","floor","log","parseFloat","pow","toFixed","bind","assertThisInitialized","_this2","react_default","a","createElement","Fragment","es","onDrop","acceptedFiles","_ref","getRootProps","getInputProps","className","id","f","Card","key","Row","Col","data-dz-thumbnail","alt","name","src","type","react_router_dom","to","Component","defaultProps","FileUpload","PageTitle","breadCrumbItems","label","path","active","title","CardBody","components_FileUploader","console","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","item","index"],"mappings":"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","file":"static/js/123.e8f0ada2.chunk.js","sourcesContent":["// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype FileUploaderProps = {\r\n    onFileUpload?: PropTypes.func,\r\n    showPreview?: boolean,\r\n};\r\n\r\ntype FileUploaderState = {\r\n    selectedFiles: Array<PropTypes.object>,\r\n};\r\n\r\nclass FileUploader extends Component<FileUploaderProps, FileUploaderState> {\r\n    static defaultProps = {\r\n        showPreview: true,\r\n    };\r\n\r\n    constructor(props: FileUploaderProps) {\r\n        super(props);\r\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\r\n\r\n        this.state = {\r\n            selectedFiles: [],\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Handled the accepted files and shows the preview\r\n     */\r\n    handleAcceptedFiles = (files: Array<PropTypes.object>) => {\r\n        var allFiles = files;\r\n\r\n        if (this.props.showPreview) {\r\n            files.map(file =>\r\n                Object.assign(file, {\r\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\r\n                    formattedSize: this.formatBytes(file.size),\r\n                })\r\n            );\r\n\r\n            allFiles = this.state.selectedFiles;\r\n            allFiles.push(...files);\r\n            this.setState({ selectedFiles: allFiles });\r\n        }\r\n\r\n        if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\r\n    };\r\n\r\n    /**\r\n     * Formats the size\r\n     */\r\n    formatBytes = (bytes: number, decimals: number = 2) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Dropzone onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)} {...this.props}>\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <div className=\"dropzone\">\r\n                            <div className=\"dz-message needsclick\" {...getRootProps()}>\r\n                                <input {...getInputProps()} />\r\n                                <i className=\"h1 text-muted dripicons-cloud-upload\"></i>\r\n                                <h3>Drop files here or click to upload.</h3>\r\n                                <span className=\"text-muted font-13\">\r\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\r\n                                    uploaded.)\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {this.props.showPreview && (\r\n                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\r\n                        {this.state.selectedFiles.map((f, i) => {\r\n                            return (\r\n                                <Card\r\n                                    className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\r\n                                    key={i + '-file'}>\r\n                                    <div className=\"p-2\">\r\n                                        <Row className=\"align-items-center\">\r\n                                            {f.preview && (\r\n                                                <Col className=\"col-auto\">\r\n                                                    <img\r\n                                                        data-dz-thumbnail=\"\"\r\n                                                        className=\"avatar-sm rounded bg-light\"\r\n                                                        alt={f.name}\r\n                                                        src={f.preview}\r\n                                                    />\r\n                                                </Col>\r\n                                            )}\r\n                                            {!f.preview && (\r\n                                                <Col className=\"col-auto\">\r\n                                                    <div className=\"avatar-sm\">\r\n                                                        <span className=\"avatar-title bg-primary rounded\">\r\n                                                            {f.type.split('/')[0]}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            )}\r\n                                            <Col className=\"pl-0\">\r\n                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">\r\n                                                    {f.name}\r\n                                                </Link>\r\n                                                <p className=\"mb-0\">\r\n                                                    <strong>{f.formattedSize}</strong>\r\n                                                </p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Card>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileUploader;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\nimport FileUploader from '../../components/FileUploader';\r\n\r\nconst FileUpload = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/upload' },\r\n                    { label: 'Form Upload', path: '/forms/upload', active: true },\r\n                ]}\r\n                title={'Form Upload'}\r\n            />\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <h4 className=\"header-title mb-3\">Dropzone File Upload</h4>\r\n\r\n                            <p className=\"text-muted font-13 m-b-30\">\r\n                                DropzoneJS is an open source library that provides drag’n’drop file uploads with image\r\n                                previews.\r\n                            </p>\r\n\r\n                            <FileUploader\r\n                                onFileUpload={files => {\r\n                                    console.log(files);\r\n                                }}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Hyper</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}