{"version":3,"sources":["redux/service/constants.js","redux/serviceAllocate/constants.js","redux/vip/constants.js","redux/auth/constants.js","redux/games/constants.js","redux/layout/constants.js","redux/offlinecs/constants.js","redux/service/actions.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","redux/vip/actions.js","redux/vipoffers/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/constants.js","redux/adminUsers/constants.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/offlinecs/actions.js","redux/games/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/platform/actions.js","redux/servers/actions.js","redux/adminUsers/actions.js","redux/vipoffers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","clearMessage","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","id","qid","allocation_cause","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","game_id","uid","command","record_id","record","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","password","fullname","email","history","passwordResetStatus","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","dataType","records","affectedId","errors","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","updatePassword","updatePasswordSuccess","updatePasswordFailed","account","getServersByGameId","getServersSuccess","getServersFailed","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","role","users","getVipOffers","getVipOffersSuccess","getVipOffersFailed","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","ModifyPassword","CplCaseHome","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","WhaleUserHome","VipOfferHome","VipOfferForm","GamesHome","GamesEditForm","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","action","objectSpread","Auth","AppMenu","stat","Dashboard","updated","Platform","currentRecord","OfflineCS","list","updateOKMessage","Games","Servers","AdminUsers","allocation","allocation_logs","allocationStatus","cs_members","ServiceAllocate","newList","logs","log","filter","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","tasks","msg","updatedField","newLog","all_records","game_list","vip_list","requestData","not_allowed","VIP","vip","s","toString","newRecord","newReqData","vip_offer_list","VipOffers","current","allgames","antsHandleData","qCountData","csHandleData","Service","question","updateQuestionData","replies","reply","question_type","question_status","_action$payload","tmpGameIds","reduce","prev","curr","game_name","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","status","test_list","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","watchChangePassword","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","watchGetCurrentRecordData","watchEditRecord","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","offlinecs_saga_marked5","offlinecs_saga_marked6","offlinecs_saga_marked7","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","_ref5","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","saga_marked10","saga_marked11","saga_marked12","saga_marked13","getQuestionsData","getCurrentQuestionData","getTestData","getServiceStat","updateType","updateStatus","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","_ref6","service_saga_marked7","_ref7","service_saga_marked8","_ref8","service_saga_marked9","_ref9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","getVIP","putVIP","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","vipSaga","vip_saga_marked","vip_saga_marked2","_ref2$payload","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","watchGetOffers","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAAC,EAAAC,EAAA,sBAAAM,IAAAR,EAAAC,EAAAC,EAAA,sBAAAO,IAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,IAAAV,EAAAC,EAAAC,EAAA,sBAAAS,IAAAX,EAAAC,EAAAC,EAAA,sBAAAU,IAAAZ,EAAAC,EAAAC,EAAA,sBAAAW,IAAAb,EAAAC,EAAAC,EAAA,sBAAAY,IAAAd,EAAAC,EAAAC,EAAA,sBAAAa,IAAAf,EAAAC,EAAAC,EAAA,sBAAAc,IAAAhB,EAAAC,EAAAC,EAAA,sBAAAe,IAAAjB,EAAAC,EAAAC,EAAA,sBAAAgB,IAAAlB,EAAAC,EAAAC,EAAA,sBAAAiB,IAAAnB,EAAAC,EAAAC,EAAA,sBAAAkB,IAAApB,EAAAC,EAAAC,EAAA,sBAAAmB,IAAArB,EAAAC,EAAAC,EAAA,sBAAAoB,IAAAtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAAxB,EAAAC,EAAAC,EAAA,sBAAAuB,IAAAzB,EAAAC,EAAAC,EAAA,sBAAAwB,IAAA1B,EAAAC,EAAAC,EAAA,sBAAAyB,IAAA3B,EAAAC,EAAAC,EAAA,sBAAA0B,IAAA5B,EAAAC,EAAAC,EAAA,sBAAA2B,IAAA7B,EAAAC,EAAAC,EAAA,sBAAA4B,IAAA9B,EAAAC,EAAAC,EAAA,sBAAA6B,IAAA/B,EAAAC,EAAAC,EAAA,sBAAA8B,IAAAhC,EAAAC,EAAAC,EAAA,sBAAA+B,IAAO,IAAM9B,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAuB,uBAEvBC,EAAuB,uBACvBC,EAA+B,+BAC/BC,EAA8B,8BAE9BC,EAAyB,yBACzBC,EAAiC,iCACjCC,EAAgC,gCAEhCC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAuB,uBAEvBC,EAAe,eACfC,EAAuB,uBACvBC,EAAsB,sBAEtBC,EAAuB,uBACvBC,EAA+B,+BAC/BC,EAA8B,8BAE9BC,EAAoB,oBACpBC,EAA4B,4BAC5BC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAwB,wBAExBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAwB,wBAExBC,EAAyB,yBACzBC,EAAiC,iCACjCC,EAAgC,gECxC7CjC,EAAAC,EAAAC,EAAA,sBAAAgC,IAAAlC,EAAAC,EAAAC,EAAA,sBAAAiC,IAAAnC,EAAAC,EAAAC,EAAA,sBAAAkC,IAAApC,EAAAC,EAAAC,EAAA,sBAAAmC,IAAArC,EAAAC,EAAAC,EAAA,sBAAAoC,IAAAtC,EAAAC,EAAAC,EAAA,sBAAAqC,IAAAvC,EAAAC,EAAAC,EAAA,sBAAAsC,IAAAxC,EAAAC,EAAAC,EAAA,sBAAAuC,IAAAzC,EAAAC,EAAAC,EAAA,sBAAAwC,IAAA1C,EAAAC,EAAAC,EAAA,sBAAAyC,IAAA3C,EAAAC,EAAAC,EAAA,sBAAA0C,IAAA5C,EAAAC,EAAAC,EAAA,sBAAA2C,IAAA7C,EAAAC,EAAAC,EAAA,sBAAA4C,IAAA9C,EAAAC,EAAAC,EAAA,sBAAA6C,IAAA/C,EAAAC,EAAAC,EAAA,sBAAA8C,IAAAhD,EAAAC,EAAAC,EAAA,sBAAA+C,IAAAjD,EAAAC,EAAAC,EAAA,sBAAAgD,IAAAlD,EAAAC,EAAAC,EAAA,sBAAAiD,IAAAnD,EAAAC,EAAAC,EAAA,sBAAAkD,IAAO,IAAMlB,EAAoB,oBACpBC,EAA4B,4BAC5BC,EAA2B,2BAE3BC,EAAqB,qBACrBC,EAA6B,6BAC7BC,EAA4B,4BAE5BC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAyB,yBAEzBC,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAwB,wBAExBC,EAAwB,wBACxBC,EAAgC,gCAChCC,EAA+B,+BAE/BC,EAA2B,2BAE3BC,EAA2B,2BAC3BC,EACX,mCACWC,EACX,gEC1BFpD,EAAAC,EAAAC,EAAA,sBAAAmD,IAAArD,EAAAC,EAAAC,EAAA,sBAAAoD,IAAAtD,EAAAC,EAAAC,EAAA,sBAAAqD,IAAAvD,EAAAC,EAAAC,EAAA,sBAAAsD,IAAAxD,EAAAC,EAAAC,EAAA,sBAAAuD,IAAAzD,EAAAC,EAAAC,EAAA,sBAAAwD,IAAA1D,EAAAC,EAAAC,EAAA,sBAAAyD,IAAA3D,EAAAC,EAAAC,EAAA,sBAAA0D,IAAA5D,EAAAC,EAAAC,EAAA,sBAAA2D,IAAA7D,EAAAC,EAAAC,EAAA,sBAAA4D,IAAA9D,EAAAC,EAAAC,EAAA,sBAAA6D,IAAA/D,EAAAC,EAAAC,EAAA,sBAAA8D,IAAAhE,EAAAC,EAAAC,EAAA,sBAAA+D,IAAAjE,EAAAC,EAAAC,EAAA,sBAAAgE,IAAAlE,EAAAC,EAAAC,EAAA,sBAAAiE,IAAAnE,EAAAC,EAAAC,EAAA,sBAAAkE,IAAApE,EAAAC,EAAAC,EAAA,sBAAAmE,IAAO,IAAMhB,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAuB,uBAEvBC,EAAU,UACVC,EAAkB,kBAClBC,EAAiB,iBAEjBC,EAAoB,oBACpBC,EAA4B,4BAC5BC,EAA2B,2BAE3BC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAA6B,6BAC7BC,EAA4B,4BAE5BC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAyB,yBACzBC,EACX,oECtBFrE,EAAAC,EAAAC,EAAA,sBAAAoE,IAAAtE,EAAAC,EAAAC,EAAA,sBAAAqE,IAAAvE,EAAAC,EAAAC,EAAA,sBAAAsE,IAAAxE,EAAAC,EAAAC,EAAA,sBAAAuE,IAAAzE,EAAAC,EAAAC,EAAA,sBAAAwE,IAAA1E,EAAAC,EAAAC,EAAA,sBAAAyE,IAAA3E,EAAAC,EAAAC,EAAA,sBAAA0E,IAAA5E,EAAAC,EAAAC,EAAA,sBAAA2E,IAAA7E,EAAAC,EAAAC,EAAA,sBAAA4E,IAAA9E,EAAAC,EAAAC,EAAA,sBAAA6E,IACO,IAAMT,EAAa,aACbC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAc,cACdC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAyB,uDCVtC/E,EAAAC,EAAAC,EAAA,sBAAA8E,IAAAhF,EAAAC,EAAAC,EAAA,sBAAA+E,IAAAjF,EAAAC,EAAAC,EAAA,sBAAAgF,IAAAlF,EAAAC,EAAAC,EAAA,sBAAAiF,IAAAnF,EAAAC,EAAAC,EAAA,sBAAAkF,IAAApF,EAAAC,EAAAC,EAAA,sBAAAmF,IAAArF,EAAAC,EAAAC,EAAA,sBAAAoF,IAAAtF,EAAAC,EAAAC,EAAA,sBAAAqF,IAAAvF,EAAAC,EAAAC,EAAA,sBAAAsF,IAAAxF,EAAAC,EAAAC,EAAA,sBAAAuF,IAAO,IAAMT,EAAyB,yBACzBC,EAAwB,wBACxBC,EAAiB,iBAEjBC,EAAY,YACZC,EAAoB,oBACpBC,EAAmB,mBAEnBC,EAAmB,mBACnBC,EAA2B,2BAC3BC,EAA0B,0BAE1BC,EAAqB,mDCZlCzF,EAAAC,EAAAC,EAAA,sBAAAwF,IAAA1F,EAAAC,EAAAC,EAAA,sBAAAyF,IAAA3F,EAAAC,EAAAC,EAAA,sBAAA0F,IAAA5F,EAAAC,EAAAC,EAAA,sBAAA2F,IAAA7F,EAAAC,EAAAC,EAAA,sBAAA4F,IAAA9F,EAAAC,EAAAC,EAAA,sBAAA6F,IAAA/F,EAAAC,EAAAC,EAAA,sBAAA8F,IACO,IAAMN,EAAgB,gBAChBC,EAAsB,sBACtBC,EAAuB,uBACvBC,EAAsB,sBAGtBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAqB,mDCTlChG,EAAAC,EAAAC,EAAA,sBAAA+F,IAAAjG,EAAAC,EAAAC,EAAA,sBAAAgG,IAAAlG,EAAAC,EAAAC,EAAA,sBAAAiG,IAAAnG,EAAAC,EAAAC,EAAA,sBAAAkG,IAAApG,EAAAC,EAAAC,EAAA,sBAAAmG,IAAArG,EAAAC,EAAAC,EAAA,sBAAAoG,IAAAtG,EAAAC,EAAAC,EAAA,sBAAAqG,IAAAvG,EAAAC,EAAAC,EAAA,sBAAAsG,IAAAxG,EAAAC,EAAAC,EAAA,sBAAAuG,IAAO,IAYMR,EAAe,eACfC,EAAuB,uBACvBC,EAAsB,sBAEtBC,EAAc,cACdC,EAAsB,sBACtBC,EAAqB,qBAErBC,EAAc,cACdC,EAAsB,sBACtBC,EAAqB,mDCrBlCzG,EAAAC,EAAAC,EAAA,sBAAAwG,IAAA1G,EAAAC,EAAAC,EAAA,sBAAAyG,IAAA3G,EAAAC,EAAAC,EAAA,sBAAA0G,IAAA5G,EAAAC,EAAAC,EAAA,sBAAA2G,IAAA7G,EAAAC,EAAAC,EAAA,sBAAA4G,IAAA9G,EAAAC,EAAAC,EAAA,sBAAA6G,IAAA/G,EAAAC,EAAAC,EAAA,sBAAA8G,IAAAhH,EAAAC,EAAAC,EAAA,sBAAA+G,IAAAjH,EAAAC,EAAAC,EAAA,sBAAAgH,IAAAlH,EAAAC,EAAAC,EAAA,sBAAAiH,IAAAnH,EAAAC,EAAAC,EAAA,sBAAAkH,IAAApH,EAAAC,EAAAC,EAAA,sBAAAmH,IAAArH,EAAAC,EAAAC,EAAA,sBAAAoH,IAAAtH,EAAAC,EAAAC,EAAA,sBAAAqH,IAAAvH,EAAAC,EAAAC,EAAA,sBAAAsH,IAAAxH,EAAAC,EAAAC,EAAA,sBAAAuH,IAAAzH,EAAAC,EAAAC,EAAA,sBAAAwH,IAAA1H,EAAAC,EAAAC,EAAA,sBAAAyH,IAAA3H,EAAAC,EAAAC,EAAA,sBAAA0H,IAAA5H,EAAAC,EAAAC,EAAA,sBAAA2H,IAAA7H,EAAAC,EAAAC,EAAA,sBAAA4H,IAAA9H,EAAAC,EAAAC,EAAA,sBAAA6H,IAAA/H,EAAAC,EAAAC,EAAA,sBAAA8H,IAAAhI,EAAAC,EAAAC,EAAA,sBAAA+H,IAAAjI,EAAAC,EAAAC,EAAA,sBAAAgI,IAAAlI,EAAAC,EAAAC,EAAA,sBAAAiI,IAAAnI,EAAAC,EAAAC,EAAA,sBAAAkI,IAAApI,EAAAC,EAAAC,EAAA,sBAAAmI,IAAArI,EAAAC,EAAAC,EAAA,sBAAAoI,IAAAtI,EAAAC,EAAAC,EAAA,sBAAAqI,IAAA,IAAAC,EAAAxI,EAAA,GAoCa0G,EAAe,SAAC+B,GAAD,MAAmC,CAC7DC,KAAMvI,IACNwI,QAASF,IAGE9B,EAAsB,SAACiC,GAAD,MAA8B,CAC/DF,KAAMtI,IACNuI,QAASC,IAGEhC,EAAqB,SAACiC,GAAD,MAAmC,CACnEH,KAAMrI,IACNsI,QAASE,IAGEhC,EAAqB,SAACiC,GAAD,MAAyC,CACzEJ,KAAMxH,IACNyH,QAASG,IAGEhC,EAA4B,SAAC8B,GAAD,MAA8B,CACrEF,KAAMvH,IACNwH,QAASC,IAGE7B,EAA2B,SAAC8B,GAAD,MAAmC,CACzEH,KAAMtH,IACNuH,QAASE,IAGE7B,EAAqB,SAChC+B,EACAC,GAFgC,MAGb,CACnBN,KAAMpI,IACNqI,QAAS,CAAEI,MAAKC,aAGL/B,EAA4B,SAACgC,GAAD,MAAgC,CACvEP,KAAMnI,IACNoI,QAASM,IAGE/B,EAA2B,SAAC2B,GAAD,MAAmC,CACzEH,KAAMlI,IACNmI,QAASE,IAGE1B,EAAmB,SAC9B+B,EACAC,GAF8B,MAGX,CACnBT,KAAMrH,IACNsH,QAAS,CAAEO,SAAQC,oBAGR/B,EAA0B,SAAC6B,GAAD,MAAgC,CACrEP,KAAMpH,IACNqH,QAASM,IAGE5B,EAAyB,SAACwB,GAAD,MAAmC,CACvEH,KAAMnH,IACNoH,QAASE,IAGEvB,EAAgB,SAAC8B,GAAD,MAAsC,CACjEV,KAAMjH,IACNkH,QAASS,IAGE7B,EAAuB,SAAC0B,GAAD,MAAgC,CAClEP,KAAMhH,IACNiH,QAASM,IAGEzB,EAAsB,SAACqB,GAAD,MAAmC,CACpEH,KAAM/G,IACNgH,QAASE,IAGEpB,EAAgB,SAC3BqB,EACAO,GAF2B,MAGR,CACnBX,KAAM9G,IACN+G,QAAS,CAAEG,cAAaO,eAGb3B,EAAuB,SAACuB,GAAD,MAAgC,CAClEP,KAAM7G,IACN8G,QAASM,IAGEtB,EAAsB,SAACkB,GAAD,MAAmC,CACpEH,KAAM5G,IACN6G,QAASE,IAGEjB,EAAuB,SAClCmB,EACAO,GAFkC,MAGf,CACnBZ,KAAMjI,IACNkI,QAAS,CAAEI,MAAKO,eAGLzB,EAA8B,SAACoB,GAAD,MAAgC,CACzEP,KAAMhI,IACNiI,QAASM,IAGEnB,EAA6B,SAACe,GAAD,MAAmC,CAC3EH,KAAM/H,IACNgI,QAASE,IAQEd,EAAqB,SAACa,GAAD,MAA8B,CAC9DF,KAAM7H,IACN8H,QAASC,IAGEZ,EAAoB,SAACa,GAAD,MAAmC,CAClEH,KAAM5H,IACN6H,QAASE,IAEEZ,EAAc,iBAAsB,CAC/CS,KAAM3H,MAGKmH,EAAqB,SAACU,GAAD,MAA8B,CAC9DF,KAAM1H,IACN2H,QAASC,IAGET,EAAoB,SAACU,GAAD,MAAmC,CAClEH,KAAMzH,IACN0H,QAASE,IAGET,EAAuB,SAACmB,GAAD,MAAoC,CACtEb,KAAM3G,IACN4G,QAAS,CAAEY,YAGAlB,EAA8B,SAACO,GAAD,MAA8B,CACvEF,KAAM1G,IACN2G,QAASC,IAGEN,EAA6B,SAACO,GAAD,MAAmC,CAC3EH,KAAMzG,IACN0G,QAASE,IAGEN,EAAe,iBAAsB,CAChDG,KAAMlH,sCCrMRxB,EAAAC,EAAAC,EAAA,sBAAAsJ,IAAAxJ,EAAAC,EAAAC,EAAA,sBAAAuJ,IAAAzJ,EAAAC,EAAAC,EAAA,sBAAAwJ,IAAA1J,EAAAC,EAAAC,EAAA,sBAAAyJ,IAAA3J,EAAAC,EAAAC,EAAA,sBAAA0J,IAAA5J,EAAAC,EAAAC,EAAA,sBAAA2J,IAAA7J,EAAAC,EAAAC,EAAA,sBAAA4J,IAAA9J,EAAAC,EAAAC,EAAA,sBAAA6J,IAAA/J,EAAAC,EAAAC,EAAA,sBAAA8J,IAAAhK,EAAAC,EAAAC,EAAA,sBAAA+J,IAAAjK,EAAAC,EAAAC,EAAA,sBAAAgK,IAAAlK,EAAAC,EAAAC,EAAA,sBAAAiK,IAAAnK,EAAAC,EAAAC,EAAA,sBAAAkK,IAAApK,EAAAC,EAAAC,EAAA,sBAAAmK,IAAArK,EAAAC,EAAAC,EAAA,sBAAAoK,IAAAtK,EAAAC,EAAAC,EAAA,sBAAAqK,IAAAvK,EAAAC,EAAAC,EAAA,sBAAAsK,IAAAxK,EAAAC,EAAAC,EAAA,sBAAAuK,IAAAzK,EAAAC,EAAAC,EAAA,sBAAAwK,IAAA,IAAAlC,EAAAxI,EAAA,GAwBawJ,EAAyB,SACpCmB,EACAC,GAFoC,MAGT,CAC3BlC,KAAMxF,IACNyF,QAAS,CAAEgC,gBAAeC,kBAGfnB,EAAgC,SAC3Cb,GAD2C,MAEhB,CAC3BF,KAAMvF,IACNwF,QAASC,IAGEc,EAA+B,SAC1Cb,GAD0C,MAEf,CAC3BH,KAAMtF,IACNuF,QAASE,IAGEc,EAAsB,iBAA8B,CAC/DjB,KAAM5F,MAGK8G,EAA6B,SACxChB,GADwC,MAEb,CAC3BF,KAAM3F,IACN4F,QAASC,IAGEiB,EAA4B,SACvChB,GADuC,MAEZ,CAC3BH,KAAM1F,IACN2F,QAASE,IAGEiB,EAAkB,SAACe,GAAD,MAAwC,CACrEnC,KAAMrG,IACNsG,QAASkC,IAGEd,EAAyB,SAACnB,GAAD,MAAsC,CAC1EF,KAAMpG,IACNqG,QAASC,IAGEoB,EAAwB,SACnCnB,GADmC,MAER,CAC3BH,KAAMnG,IACNoG,QAASE,IAGEoB,EAAkB,SAACxB,GAAD,MAA2C,CACxEC,KAAMxG,IACNyG,QAASF,IAGEyB,EAAyB,SAACtB,GAAD,MAAsC,CAC1EF,KAAMvG,IACNwG,QAASC,IAGEuB,EAAwB,SACnCtB,GADmC,MAER,CAC3BH,KAAMtG,IACNuG,QAASE,IAGEuB,EAAiB,SAC5BU,EACAC,GAF4B,MAGD,CAC3BrC,KAAMlG,IACNmG,QAAS,CAAEmC,MAAKC,sBAGLV,EAAwB,SAACzB,GAAD,MAAsC,CACzEF,KAAMjG,IACNkG,QAASC,IAGE0B,EAAuB,SAACzB,GAAD,MAA2C,CAC7EH,KAAMhG,IACNiG,QAASE,IAGE0B,EAAgB,SAAC3B,GAAD,MAAsC,CACjEF,KAAM/F,IACNgG,QAASC,IAGE4B,EAAuB,SAAC5B,GAAD,MAAsC,CACxEF,KAAM9F,IACN+F,QAASC,IAGE6B,EAAsB,SAAC5B,GAAD,MAA2C,CAC5EH,KAAM7F,IACN8F,QAASE,IAEE6B,EAAyB,iBAAsB,CAC1DhC,KAAMzF,uCCpIRjD,EAAAC,EAAAC,EAAA,sBAAA8K,IAAAhL,EAAAC,EAAAC,EAAA,sBAAA+K,IAAAjL,EAAAC,EAAAC,EAAA,sBAAAgL,IAAAlL,EAAAC,EAAAC,EAAA,sBAAAiL,IACO,IAAMH,EAAY,YACZC,EAAoB,oBACpBC,EAAmC,mCACnCC,EAA2C,2ECHxDnL,EAAAC,EAAAC,EAAA,sBAAAkL,IAAApL,EAAAC,EAAAC,EAAA,sBAAAmL,IAAArL,EAAAC,EAAAC,EAAA,sBAAAoL,IAAAtL,EAAAC,EAAAC,EAAA,sBAAAqL,IAAAvL,EAAAC,EAAAC,EAAA,sBAAAsL,IAAAxL,EAAAC,EAAAC,EAAA,sBAAAuL,IAAAzL,EAAAC,EAAAC,EAAA,sBAAAwL,IAAA1L,EAAAC,EAAAC,EAAA,sBAAAyL,IAAA3L,EAAAC,EAAAC,EAAA,sBAAA0L,IAAA5L,EAAAC,EAAAC,EAAA,sBAAA2L,IAAA7L,EAAAC,EAAAC,EAAA,sBAAA4L,IAAA9L,EAAAC,EAAAC,EAAA,sBAAA6L,IAAA/L,EAAAC,EAAAC,EAAA,sBAAA8L,IAAAhM,EAAAC,EAAAC,EAAA,sBAAA+L,IAAAjM,EAAAC,EAAAC,EAAA,sBAAAgM,IAAAlM,EAAAC,EAAAC,EAAA,sBAAAiM,IAAA,IAAA3D,EAAAxI,EAAA,GAsBaoL,EAAc,iBAAkB,CAC3C1C,KAAMrF,MAGKgI,EAAqB,SAACzC,GAAD,MAA0B,CAC1DF,KAAMpF,IACNqF,QAASC,IAGE0C,EAAoB,SAACzC,GAAD,MAA+B,CAC9DH,KAAMnF,IACNoF,QAASE,IAGE0C,EAAS,SAACa,GAAD,MAAiC,CACrD1D,KAAMlF,IACNmF,QAASyD,IAGEZ,EAAgB,SAAC5C,GAAD,MAA0B,CACrDF,KAAMjF,IACNkF,QAASC,IAGE6C,EAAe,SAAC5C,GAAD,MAA+B,CACzDH,KAAMhF,IACNiF,QAASE,IAGE6C,EAAS,SACpBU,EACAC,EACAC,GAHoB,MAIL,CACf5D,KAAM/E,IACNgF,QAAS,CAAEyD,UAASC,MAAKC,aAGdX,EAAgB,SAAC/C,GAAD,MAA0B,CACrDF,KAAM9E,IACN+E,QAASC,IAGEgD,EAAe,SAAC/C,GAAD,MAA+B,CACzDH,KAAM7E,IACN8E,QAASE,IAGEgD,EAAkB,iBAAkB,CAC/CnD,KAAM5E,MAGKgI,EAA0B,SAACS,GAAD,MAAgC,CACrE7D,KAAM3E,IACN4E,QAAS4D,IAGER,EAAiC,SAACnD,GAAD,MAA0B,CACtEF,KAAM1E,IACN2E,QAASC,IAGEoD,EAAgC,SAACnD,GAAD,MAA+B,CAC1EH,KAAMzE,IACN0E,QAASE,IAGEoD,EAAuB,SAACO,GAAD,MAAwB,CAC1D9D,KAAMxE,IACNyE,QAAS6D,IAGEN,EAA8B,SAACtD,GAAD,MAA0B,CACnEF,KAAMvE,IACNwE,QAASC,IAGEuD,EAA6B,SAACtD,GAAD,MAAoC,CAC5EH,KAAMtE,IACNuE,QAASE,kCCtGX7I,EAAAC,EAAAC,EAAA,sBAAAuM,IAAAzM,EAAAC,EAAAC,EAAA,sBAAAwM,IAAA1M,EAAAC,EAAAC,EAAA,sBAAAyM,IAAA3M,EAAAC,EAAAC,EAAA,sBAAA0M,IAAO,IAAMH,EAAiB,iBACjBC,EAAyB,yBACzBC,EAAwB,wBACxBC,EAA2B,yDCHxC5M,EAAAC,EAAAC,EAAA,sBAAA2M,IAAA7M,EAAAC,EAAAC,EAAA,sBAAA4M,IAAA9M,EAAAC,EAAAC,EAAA,sBAAA6M,IAAA/M,EAAAC,EAAAC,EAAA,sBAAA8M,IAAAhN,EAAAC,EAAAC,EAAA,sBAAA+M,IAAAjN,EAAAC,EAAAC,EAAA,sBAAAgN,IAAAlN,EAAAC,EAAAC,EAAA,sBAAAiN,IAAAnN,EAAAC,EAAAC,EAAA,sBAAAkN,IAAApN,EAAAC,EAAAC,EAAA,sBAAAmN,IAAArN,EAAAC,EAAAC,EAAA,sBAAAoN,IAAAtN,EAAAC,EAAAC,EAAA,sBAAAqN,IAEO,IAAMV,EAAkB,WAClBC,EAAoB,SACpBC,EAAkB,WAElBC,EAAqB,QACrBC,EAAqB,QAErBC,EAA6B,UAC7BC,EAA2B,QAC3BC,EAA0B,OAE1BC,EAA0B,QAC1BC,EAA8B,YAC9BC,EAA+B,4CCf5CvN,EAAAC,EAAAC,EAAA,sBAAAsN,IAAAxN,EAAAC,EAAAC,EAAA,sBAAAuN,IAAAzN,EAAAC,EAAAC,EAAA,sBAAAwN,IACO,IAAMF,EAAW,WACXC,EAAmB,mBACnBC,EAAkB,gDCH/B1N,EAAAC,EAAAC,EAAA,sBAAAyN,IAAA3N,EAAAC,EAAAC,EAAA,sBAAA0N,IAAA5N,EAAAC,EAAAC,EAAA,sBAAA2N,IACO,IAAMF,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAyB,uDCHtC7N,EAAAC,EAAAC,EAAA,sBAAA4N,IAAA9N,EAAAC,EAAAC,EAAA,sBAAA6N,IAAA/N,EAAAC,EAAAC,EAAA,sBAAA8N,IAAO,IAAMF,EAAY,YACZC,EAAoB,oBACpBC,EAAmB,kDCFhChO,EAAAC,EAAAC,EAAA,sBAAA+N,IAAAjO,EAAAC,EAAAC,EAAA,sBAAAgO,IAAAlO,EAAAC,EAAAC,EAAA,sBAAAiO,IAAO,IAAMF,EAAc,cACdC,EAAsB,sBACtBC,EAAqB,mDCDlCnO,EAAAC,EAAAC,EAAA,sBAAAkO,IAAApO,EAAAC,EAAAC,EAAA,sBAAAmO,IAAArO,EAAAC,EAAAC,EAAA,sBAAAoO,IAAAtO,EAAAC,EAAAC,EAAA,sBAAAqO,IAAAvO,EAAAC,EAAAC,EAAA,sBAAAsO,IAAA,IAAAhG,EAAAxI,EAAA,IAYaoO,EAAe,SAACK,GAAD,MAAmC,CAC3D/F,KAAMhD,IACNiD,QAAS8F,IAGAJ,EAAoB,SAACK,GAAD,MAAkC,CAC/DhG,KAAM/C,IACNgD,QAAS+F,IAGAJ,EAAqB,SAACK,GAAD,MAAkC,CAChEjG,KAAM9C,IACN+C,QAASgG,IAGAJ,EAAoB,SAACK,GAAD,MAAwC,CACrElG,KAAM7C,IACN8C,QAASiG,IAaAJ,EAAmB,iBAAqB,CACjD9F,KAAM1C,IACN2C,QAAS,qCC5Cb3I,EAAAC,EAAAC,EAAA,sBAAA2O,IAAA7O,EAAAC,EAAAC,EAAA,sBAAA4O,IAAA,IAAAC,EAAA/O,EAAA,IAAAgP,EAAAhP,EAAAiP,EAAAF,GAAAG,EAAAlP,EAAA,IAAAmP,EAAAnP,EAAA,GAAAoP,EAAApP,EAAAiP,EAAAE,GAiBMN,EAAsB,WACxB,IAAMQ,EAAOP,IACb,IAAKO,EACD,OAAO,EAEX,IAjBiBC,EAiBXC,EAAUC,IAAUH,EAAKC,OACzBG,EAAcC,KAAKC,MAAQ,IACjC,OAAIJ,EAAQK,IAAMH,GACdI,QAAQC,KAAK,yBACN,KArBMR,EAuBAD,EAAKC,OApBlBS,IAAMC,SAASC,QAAQC,OAAO,gBAAkBZ,SAEzCS,IAAMC,SAASC,QAAQC,OAAO,iBAmB9B,IAOTpB,EAAkB,WACpB,IACMO,GADU,IAAIc,KACCC,IAAI,QAEzB,OAAOf,EAAuB,iBAARA,EAAmBA,EAAOgB,KAAKC,MAAMjB,GAAS,qCCxCxErP,EAAAC,EAAAC,EAAA,sBAAAqQ,IAAAvQ,EAAAC,EAAAC,EAAA,sBAAAsQ,IAAAxQ,EAAAC,EAAAC,EAAA,sBAAAuQ,IAAAzQ,EAAAC,EAAAC,EAAA,sBAAAwQ,IAAA1Q,EAAAC,EAAAC,EAAA,sBAAAyQ,IAAA3Q,EAAAC,EAAAC,EAAA,sBAAA0Q,IAAA5Q,EAAAC,EAAAC,EAAA,sBAAA2Q,IAAA7Q,EAAAC,EAAAC,EAAA,sBAAA4Q,IAAA9Q,EAAAC,EAAAC,EAAA,sBAAA6Q,IAAA/Q,EAAAC,EAAAC,EAAA,sBAAA8Q,IAAA,IAAAxI,EAAAxI,EAAA,IAeauQ,EAAY,SAACU,EAAkBC,GAAnB,MAAqD,CAC1ExI,KAAMpE,IACNqE,QAAS,CAAEsI,WAAUC,cAGZV,EAAmB,SAACnB,GAAD,MAA+B,CAC3D3G,KAAMnE,IACNoE,QAAS0G,IAGAoB,EAAkB,SAAC5H,GAAD,MAAgC,CAC3DH,KAAMlE,IACNmE,QAASE,IAGA6H,EAAe,SAACS,EAAkBC,EAAeF,GAAlC,MAAoE,CAC5FxI,KAAMjE,IACNkE,QAAS,CAAEwI,WAAUC,QAAOF,cAGnBP,EAAsB,SAACtB,GAAD,MAA2B,CAC1D3G,KAAMhE,IACNiE,QAAS0G,IAGAuB,EAAqB,SAAC/H,GAAD,MAAgC,CAC9DH,KAAM/D,IACNgE,QAASE,IAGAgI,EAAa,SAACQ,GAAD,MAA+B,CACrD3I,KAAM9D,IACN+D,QAAS,CAAE0I,aAGFP,EAAiB,SAACG,GAAD,MAAmC,CAC7DvI,KAAM7D,IACN8D,QAAS,CAAEsI,cAGFF,EAAwB,SAACO,GAAD,MAA8C,CAC/E5I,KAAM5D,IACN6D,QAAS2I,IAGAN,EAAuB,SAACnI,GAAD,MAAgC,CAChEH,KAAM3D,IACN4D,QAASE,kCC9Db7I,EAAAC,EAAAC,EAAA,sBAAAqR,IAAAvR,EAAAC,EAAAC,EAAA,sBAAAsR,IAAAxR,EAAAC,EAAAC,EAAA,sBAAAuR,IAAAzR,EAAAC,EAAAC,EAAA,sBAAAwR,IAAA1R,EAAAC,EAAAC,EAAA,sBAAAyR,IAAA3R,EAAAC,EAAAC,EAAA,sBAAA0R,IAAA5R,EAAAC,EAAAC,EAAA,sBAAA2R,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA4R,IAAA9R,EAAAC,EAAAC,EAAA,sBAAA6R,IAAA,IAAAvJ,EAAAxI,EAAA,IAcauR,EAAmB,SAACS,GAAD,MAAwC,CACpEtJ,KAAMzC,IACN0C,QAASqJ,IAGAR,EAA0B,SAACS,GAAD,MAAmC,CACtEvJ,KAAMxC,IACNyC,QAASsJ,IAGAR,EAAyB,SAAC5I,GAAD,MAAqC,CACvEH,KAAMvC,IACNwC,QAASE,IAGA6I,EAAa,SAACM,EAAkBxF,GAAnB,MAA0D,CAChF9D,KAAMtC,IACNuC,QAAS,CAAEqJ,WAAUxF,YAGZmF,EAAoB,SAAC1I,GAAD,MAAkC,CAC/DP,KAAMrC,IACNsC,QAASM,EAAOiJ,aAGPN,EAAmB,SAACO,GAAD,MAA2C,CACvEzJ,KAAMpC,IACNqC,QAASwJ,IAEAN,EAAmB,SAACG,EAAkBzF,EAAgB8E,GAAnC,MAAqE,CACjG3I,KAAMnC,IACNoC,QAAS,CAAEqJ,WAAUzF,YAAW8E,aAGvBS,EAA0B,SAACtF,GAAD,MAAkC,CACrE9D,KAAMlC,IACNmC,QAAS6D,IAGAuF,EAAyB,SAAClJ,GAAD,MAAqC,CACvEH,KAAMjC,IACNkC,QAASE,kCCvDb7I,EAAAC,EAAAC,EAAA,sBAAAkS,IAAApS,EAAAC,EAAAC,EAAA,sBAAAmS,IAAArS,EAAAC,EAAAC,EAAA,sBAAAoS,IAAAtS,EAAAC,EAAAC,EAAA,sBAAAqS,IAAAvS,EAAAC,EAAAC,EAAA,sBAAAsS,IAAAxS,EAAAC,EAAAC,EAAA,sBAAAuS,IAAAzS,EAAAC,EAAAC,EAAA,sBAAAwS,IAAA1S,EAAAC,EAAAC,EAAA,sBAAAyS,IAAA3S,EAAAC,EAAAC,EAAA,sBAAA0S,IAAA5S,EAAAC,EAAAC,EAAA,sBAAA2S,IAAA,IAAArK,EAAAxI,EAAA,IAeaoS,EAAW,iBAAoB,CAC1C1J,KAAMxD,MAGKmN,EAAkB,SAACzJ,GAAD,MAA4B,CACzDF,KAAM1D,IACN2D,QAASC,IAGE0J,EAAiB,SAACzJ,GAAD,MAAiC,CAC7DH,KAAMzD,IACN0D,QAASE,IAGE0J,EAAW,SAAC/F,GAAD,MAAoC,CAC1D9D,KAAMvD,IACNwD,QAAS,CAAE6D,YAGAgG,EAAkB,SAACvJ,GAAD,MAA8B,CAC3DP,KAAMtD,IACNuD,QAASM,EAAOiJ,aAGLO,EAAiB,SAACN,GAAD,MAAuC,CACnEzJ,KAAMrD,IACNsD,QAASwJ,IAGEO,EAAiB,SAACtG,EAAiBiF,GAAlB,MAAgD,CAC5E3I,KAAMpD,IACNqD,QAAS,CAAEyD,UAASiF,aAGTsB,EAAwB,SAACnG,GAAD,MAA8B,CACjE9D,KAAMnD,IACNoD,QAAS6D,IAGEoG,EAAuB,SAAC/J,GAAD,MAAiC,CACnEH,KAAMlD,IACNmD,QAASE,IAGEgK,EAAmB,iBAAoB,CAClDnK,KAAMjD,0CC5DRzF,EAAAC,EAAAC,EAAA,sBAAA4S,IAAA9S,EAAAC,EAAAC,EAAA,sBAAA6S,IAAA/S,EAAAC,EAAAC,EAAA,sBAAA8S,IAAAhT,EAAAC,EAAAC,EAAA,sBAAA+S,IAAA,IAAAzK,EAAAxI,EAAA,IASa8S,EAAW,iBAA0B,CAC9CpK,KAAMsC,IACNrC,QAAS,KAGAoK,EAAkB,SAACG,GAAD,MAA8C,CACzExK,KAAMuC,IACNtC,QAAS,CAAEuK,eAGFF,EAA+B,iBAA0B,CAClEtK,KAAMwC,IACNvC,QAAS,KAGAsK,EAAsC,SAACE,GAAD,MAA6D,CAC5GzK,KAAMyC,IACNxC,QAAS,CAAEwK,+DC1BfnT,EAAAC,EAAAC,EAAA,sBAAAkT,IAAApT,EAAAC,EAAAC,EAAA,sBAAAmT,IAAArT,EAAAC,EAAAC,EAAA,sBAAAoT,IAAA,IAAA9K,EAAAxI,EAAA,IAIaoT,EAAU,SAACG,EAAiBC,GAAlB,MAAsD,CACzE9K,KAAM8E,IACN7E,QAAS,CAAE4K,YAAWC,aAGbH,EAAiB,SAACI,GAAD,MAAmC,CAC7D/K,KAAM+E,IACN9E,QAAS8K,IAGAH,EAAgB,SAACzK,GAAD,MAAqC,CAC9DH,KAAMgF,IACN/E,QAASE,kCChBb7I,EAAAC,EAAAC,EAAA,sBAAAwT,IAAA1T,EAAAC,EAAAC,EAAA,sBAAAyT,IAAA3T,EAAAC,EAAAC,EAAA,sBAAA0T,IAAA,IAAApL,EAAAxI,EAAA,IAIa0T,EAAiB,SAACG,EAAiB3C,GAAlB,MAAwD,CAClFxI,KAAMiF,IACNhF,QAAS,CAAEkL,UAAS3C,cAGXyC,EAAwB,iBAAuB,CACxDjL,KAAMkF,MAGGgG,EAAuB,SAAC/K,GAAD,MAAoC,CACpEH,KAAMmF,IACNlF,QAASE,kCCfb7I,EAAAC,EAAAC,EAAA,sBAAA4T,IAAA9T,EAAAC,EAAAC,EAAA,sBAAA6T,IAAA/T,EAAAC,EAAAC,EAAA,sBAAA8T,IAAA,IAAAxL,EAAAxI,EAAA,IAIa8T,EAAqB,SAAC1H,GAAD,MAAqC,CACnE1D,KAAMuF,IACNtF,QAASyD,IAGA2H,EAAoB,SAACnL,GAAD,MAA8B,CAC3DF,KAAMwF,IACNvF,QAASC,IAGAoL,EAAmB,SAACnL,GAAD,MAAmC,CAC/DH,KAAMyF,IACNxF,QAASE,kCChBb7I,EAAAC,EAAAC,EAAA,sBAAA+T,IAAAjU,EAAAC,EAAAC,EAAA,sBAAAgU,IAAAlU,EAAAC,EAAAC,EAAA,sBAAAiU,IAAA,IAAA3L,EAAAxI,EAAA,IAIaiU,EAAgB,SAACG,GAAD,MAAoC,CAC7D1L,KAAMoF,IACNnF,QAASyL,IAGAF,EAAuB,SAACG,GAAD,MAAiC,CACjE3L,KAAMqF,IACNpF,QAAS0L,IAGAF,EAAsB,SAACtL,GAAD,MAAqC,CACpEH,KAAMsF,IACNrF,QAASE,kCCjBb7I,EAAAC,EAAAC,EAAA,sBAAAoU,IAAAtU,EAAAC,EAAAC,EAAA,sBAAAqU,IAAAvU,EAAAC,EAAAC,EAAA,sBAAAsU,IAAA,IAAAhM,EAAAxI,EAAA,IAQasU,EAAe,iBAAuB,CACjD5L,KAAM+D,MAGK8H,EAAsB,SAAC3L,GAAD,MAA+B,CAChEF,KAAMgE,IACN/D,QAASC,IAGE4L,EAAqB,SAAC3L,GAAD,MAAoC,CACpEH,KAAMiE,IACNhE,QAASE,yRCRL4L,EAAU,kBAAMC,EAAAC,EAAAC,cAAA,aAGhBC,EAAaC,IAAS,CACxBC,OAAQ,kBAAM/U,EAAAgV,EAAA,KAAAC,KAAAjV,EAAAkV,KAAA,YACdC,OAFwB,SAEjBC,EAAQC,GACX,IAAIC,EAAYF,EAAOG,QACvB,OAAOb,EAAAC,EAAAC,cAACU,EAAcD,IAE1BZ,YAGEe,EAAiBV,IAAS,CAC5BC,OAAQ,kBAAM/U,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,YACdC,OAF4B,SAErBC,EAAQC,GACX,IAAIC,EAAYF,EAAOG,QACvB,OAAOb,EAAAC,EAAAC,cAACU,EAAcD,IAE1BZ,YAGEgB,EAAmBX,IAAS,CAC9BC,OAAQ,kBAAM/U,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,YACdC,OAF8B,SAEvBC,EAAQC,GACX,IAAIC,EAAYF,EAAOG,QACvB,OAAOb,EAAAC,EAAAC,cAACU,EAAcD,IAE1BZ,YAGEiB,EAAiBZ,IAAS,CAC5BC,OAAQ,kBAAM/U,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,YACdC,OAF4B,SAErBC,EAAQC,GACX,IAAIC,EAAYF,EAAOG,QACvB,OAAOb,EAAAC,EAAAC,cAACU,EAAcD,IAE1BZ,YA0DWkB,EAnDI,SAACC,GAA0B,IAIpCC,EAAG,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAILQ,UAAY,WACR,IAAKlI,cAAuB,OAAOgG,EAEnC,IAAImC,EAAYxB,EAEhB,OAAQQ,EAAKX,MAAM5G,OAAOwI,YACtB,KAAKC,IACDF,EAAYvB,EACZ,MACJ,KAAKyB,IACDF,EAAYtB,EACZ,MACJ,QACIsB,EAAYxB,EAGpB,OAAOwB,GApBNhB,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAAC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAA,EAAAwB,IAAA,SAAAC,MAAA,WAwBD,IAAMC,EAASpB,KAAKY,YACpB,OACIrC,EAAAC,EAAAC,cAAC4C,EAAA,SAAD,CAAUC,SAAUhD,KAChBC,EAAAC,EAAAC,cAAC2C,EAAWpB,KAAKd,MACbX,EAAAC,EAAAC,cAACgB,EAAqBO,KAAKd,aA5BtCQ,EAAA,CAAiBP,aAyC1B,OAAOoC,YANiB,SAAAC,GACpB,MAAO,CACHlJ,OAAQkJ,EAAMJ,SAMlB,KAFGG,CAGL7B,oBC7FA+B,EAAQC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,aACzB+C,EAASJ,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,KAAAC,KAAAjV,EAAAkV,KAAA,aAC1BgD,EAAWL,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC5BiD,EAAiBN,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAClCkD,EAAUP,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAE3BmD,EAAqBR,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACtCoD,EAAeT,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAEhCqD,EAAiBV,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAElCsD,EAAcX,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAC/BuD,EAAWZ,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC5BwD,EAAgBb,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAEjCyD,EAAoBd,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACrC0D,EAAiBf,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAClC2D,EAAShB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC1B4D,EAAejB,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAChC6D,EAAYlB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC7B8D,EAAOnB,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cACxB+D,EAAWpB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC5BgE,EAAUrB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAE3BiE,EAAStB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAG1BkE,EAAQvB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACzBmE,EAAcxB,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAG/BoE,EAAUzB,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC3BqE,EAAU1B,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC3BsE,EAAoB3B,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cACrCuE,EAAc5B,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAG/BwE,EAAU7B,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC3ByE,GAAM9B,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cACvB0E,GAAU/B,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAG3B2E,GAAQhC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACzB4E,GAAUjC,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC3B6E,GAASlC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAC1B8E,GAAOnC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cACxB+E,GAAgBpC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cACjCgF,GAAOrC,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cACxBiF,GAAUtC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAC3BkF,GAAavC,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC9BmF,GAAQxC,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cACzBoF,GAAWzC,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC5BqF,GAAU1C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAE3BsF,GAAa3C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC9BuF,GAAiB5C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAClCwF,GAAe7C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAChCyF,GAAa9C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC9B0F,GAAa/C,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAC9B2F,GAAUhD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAE3B4F,GAAYjD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC7B6F,GAAalD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAC9B8F,GAAUnD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAE3B+F,GAAcpD,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC/BgG,GAAiBrD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAElCiG,GAAatD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAG9BkG,GAAiBvD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,OAAAC,KAAAjV,EAAAkV,KAAA,cAGlCmG,GAAcxD,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAC/BoG,GAAgBzD,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACjCqG,GAAoB1D,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACrCsG,GAAoB3D,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAErCuG,GAAgB5D,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAKjCwG,GAAkB7D,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cACnCyG,GAAoB9D,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAErC0G,GAAmB/D,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACpC2G,GAAmBhE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACpC4G,GAAqBjE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAEtC6G,GAAWlE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAG5B8G,GAAgBnE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cACjC+G,GAAepE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAChCgH,GAAerE,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cAIhCiH,GAAYtE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAC7BkH,GAAgBvE,IAAMC,KAAK,kBAAMC,QAAAC,IAAA,CAAAhY,EAAAgV,EAAA,GAAAhV,EAAAgV,EAAA,IAAAhV,EAAAgV,EAAA,MAAAC,KAAAjV,EAAAkV,KAAA,cAKjCmH,GAAe,SAAAC,GAAA,IAAchH,EAAdgH,EAAGC,UAAsBC,EAAzBF,EAAyBE,MAAUC,EAAnCxG,OAAAyG,EAAA,EAAAzG,CAAAqG,EAAA,8BACjB5H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD1G,OAAA2G,OAAA,GACQH,EADR,CAEItH,OAAQ,SAAAE,GACJ,IAAKxG,cAED,OAAO6F,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUE,GAAI,CAAEC,SAAU,iBAAkBnF,MAAO,CAAEoF,KAAM1H,EAAM2H,aAG5E,IAAMC,EAAenO,cAErB,OAAI0N,IAA+C,IAAtCA,EAAMU,QAAQD,EAAa7I,MAE7BM,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUE,GAAI,CAAEC,SAAU,OAI9BpI,EAAAC,EAAAC,cAACU,EAAcD,QAc5B8H,GAAoB,CACtBC,KAAM,eACNC,KAAM,eACNC,KAAM,kBACNC,OAAQ,aACRC,SAAU,CACN,CACIJ,KAAM,yBACNC,KAAM,YACNI,MAAO,CACHC,QAAS,UACTC,KAAM,KAEVpB,UAAWlE,EACXuF,MAAOvB,IAEX,CACIe,KAAM,mBACNC,KAAM,MACNd,UAAWjE,EACXsF,MAAOvB,MAKbwB,GAAkB,CACpBT,KAAM,aACNC,KAAM,YACNC,KAAM,kBACNC,OAAQ,aACRC,SAAU,CACN,CACIJ,KAAM,qBACNC,KAAM,2BACNd,UAAWhE,EACXqF,MAAOvB,MAKbyB,GAAY,CACdV,KAAM,QACNC,KAAM,OACNC,KAAM,sBACNE,SAAU,CACN,CACIJ,KAAM,iBACNC,KAAM,WACNd,UAAW/D,EACXoF,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,WACNG,SAAU,CACN,CACIJ,KAAM,sBACNC,KAAM,OACNd,UAAW9D,EACXmF,MAAOvB,IAEX,CACIe,KAAM,wBACNC,KAAM,SACNd,UAAW7D,EACXkF,MAAOvB,MAInB,CACIe,KAAM,kBACNC,KAAM,YACNG,SAAU,CACN,CACIJ,KAAM,2BACNC,KAAM,WACNd,UAAW5D,EACXiF,MAAOvB,IAEX,CACIe,KAAM,0BACNC,KAAM,kBACNd,UAAW3D,EACXgF,MAAOvB,IAEX,CACIe,KAAM,yBACNC,KAAM,SACNd,UAAW1D,EACX+E,MAAOvB,IAEX,CACIe,KAAM,gCACNC,KAAM,gBACNd,UAAWzD,EACX8E,MAAOvB,IAEX,CACIe,KAAM,4BACNC,KAAM,YACNd,UAAWxD,EACX6E,MAAOvB,IAEX,CACIe,KAAM,gCACNC,KAAM,gBACNd,UAAWvD,EACX4E,MAAOvB,IAEX,CACIe,KAAM,2BACNC,KAAM,WACNd,UAAWtD,EACX2E,MAAOvB,IAEX,CACIe,KAAM,0BACNC,KAAM,UACNd,UAAWrD,EACX0E,MAAOvB,MAInB,CACIe,KAAM,eACNC,KAAM,SACNd,UAAWpD,EACXyE,MAAOvB,IAEX,CACIe,KAAM,cACNC,KAAM,QACNG,SAAU,CACN,CACIJ,KAAM,oBACNC,KAAM,QACNd,UAAWnD,EACXwE,MAAOvB,IAEX,CACIe,KAAM,sBACNC,KAAM,gBACNd,UAAWlD,EACXuE,MAAOvB,QAQrB0B,GAAa,CACfX,KAAM,SACNC,KAAM,QACNC,KAAM,iBACNE,SAAU,CACN,CACIJ,KAAM,iBACNC,KAAM,UACNd,UAAWjD,EACXsE,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,UACNd,UAAWhD,EACXqE,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,UACNd,UAAW7C,EACXkE,MAAOvB,IAEX,CACIe,KAAM,aACNC,KAAM,MACNd,UAAW5C,GACXiE,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,UACNd,UAAW3C,GACXgE,MAAOvB,IAEX,CACIe,KAAM,mBACNC,KAAM,cACNd,UAAW/C,EACXoE,MAAOvB,IAEX,CACIe,KAAM,mBACNC,KAAM,cACNd,UAAW9C,EACXmE,MAAOvB,MA4Cb2B,GAAW,CACbZ,KAAM,MACNC,KAAM,SACNC,KAAM,sBACNE,SAAU,CACN,CACIJ,KAAM,cACNC,KAAM,UACNd,UAAWzC,GACX8D,MAAOvB,IAEX,CACIe,KAAM,YACNC,KAAM,QACNd,UAAW1C,GACX+D,MAAOvB,IAEX,CACIe,KAAM,cACNC,KAAM,UACNd,UAAWpC,GACXyD,MAAOvB,IAEX,CACIe,KAAM,WACNC,KAAM,OACNd,UAAWrC,GACX0D,MAAOvB,IAEX,CACIe,KAAM,YACNC,KAAM,QACNd,UAAWlC,GACXuD,MAAOvB,IAEX,CACIe,KAAM,aACNC,KAAM,SACNd,UAAWxC,GACX6D,MAAOvB,IAEX,CACIe,KAAM,oBACNC,KAAM,gBACNd,UAAWtC,GACX2D,MAAOvB,IAEX,CACIe,KAAM,eACNC,KAAM,WACNd,UAAWjC,GACXsD,MAAOvB,IAEX,CACIe,KAAM,WACNC,KAAM,OACNd,UAAWvC,GACX4D,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,aACNd,UAAWnC,GACXwD,MAAOvB,IAEX,CACIe,KAAM,cACNC,KAAM,UACNd,UAAWhC,GACXqD,MAAOvB,MAMb4B,GAAc,CAChBb,KAAM,SACNC,KAAM,QACNC,KAAM,qBACNE,SAAU,CACN,CACIJ,KAAM,eACNC,KAAM,iBACNd,UAAW/B,GACXoD,MAAOvB,IAEX,CACIe,KAAM,kBACNC,KAAM,gBACNd,UAAW7B,GACXkD,MAAOvB,IAEX,CACIe,KAAM,oBACNC,KAAM,kBACNd,UAAW9B,GACXmD,MAAOvB,IAEX,CACIe,KAAM,gBACNC,KAAM,cACNd,UAAW5B,GACXiD,MAAOvB,IAEX,CACIe,KAAM,gBACNC,KAAM,cACNd,UAAW3B,GACXgD,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,UACNd,UAAW1B,GACX+C,MAAOvB,MAMb6B,GAAiB,CACnBd,KAAM,YACNC,KAAM,WACNC,KAAM,4BACNE,SAAU,CACN,CACIJ,KAAM,mBACNC,KAAM,SACNG,SAAU,CACN,CACIJ,KAAM,wBACNC,KAAM,OACNd,UAAWzB,GACX8C,MAAOvB,IAEX,CACIe,KAAM,yBACNC,KAAM,QACNd,UAAWxB,GACX6C,MAAOvB,IAEX,CACIe,KAAM,2BACNC,KAAM,UACNd,UAAWvB,GACX4C,MAAOvB,MAInB,CACIe,KAAM,mBACNC,KAAM,SACNG,SAAU,CACN,CACIJ,KAAM,yBACNC,KAAM,QACNd,UAAWtB,GACX2C,MAAOvB,IAEX,CACIe,KAAM,4BACNC,KAAM,WACNd,UAAWrB,GACX0C,MAAOvB,MAInB,CACIe,KAAM,uBACNC,KAAM,cACNd,UAAWpB,GACXyC,MAAOvB,MAgCb8B,GAAgB,CAClBf,KAAM,WACNC,KAAM,eACNC,KAAM,4BACNE,SAAU,CACN,CACIY,OAAO,EACPhB,KAAK,oBACLC,KAAK,eACLd,UAAUb,GACVkC,MAAOvB,IAEX,CACI+B,OAAO,EACPhB,KAAM,0BACNC,KAAM,iCACNd,UAAWV,GACH+B,MAAOvB,IAGnB,CACIe,KAAM,8BACNC,KAAM,iCACNd,UAAWV,GACX+B,MAAOvB,IAGX,CACIe,KAAM,4BACNC,KAAM,uCACNd,UAAWV,GACX+B,MAAOvB,IAGX,CACI+B,OAAO,EACPhB,KAAM,yBACNC,KAAM,qDACNd,UAAWX,GACHgC,MAAOvB,IAGnB,CACI+B,OAAO,EACPhB,KAAK,sBACLC,KAAK,2BACLd,UAAUZ,GACViC,MAAOvB,MAMbgC,GAAgB,CAClBjB,KAAM,WACNC,KAAM,iCACNC,KAAM,sBACNE,SAAU,CACN,CACIJ,KAAM,yBACNC,KAAM,eACNd,UAAWlB,GACXuC,MAAOvB,IAEX,CACIe,KAAM,2BACNC,KAAM,eACNd,UAAWjB,GACXsC,MAAOvB,IAEX,CACIe,KAAM,+BACNC,KAAM,eACNd,UAAWhB,GACXqC,MAAOvB,MA2CbiC,GAAY,CACdlB,KAAM,OACNC,KAAM,MACNC,KAAM,mBACNE,SAAU,CACN,CACIJ,KAAM,mBACNC,KAAM,2BACNd,UAAWP,GACX4B,MAAOvB,IAEX,CACIe,KAAM,cACNC,KAAM,kBACNG,SAAU,CACN,CACIJ,KAAM,yBACNC,KAAM,2BACNd,UAAWN,GACX2B,MAAOvB,IAEX,CACIe,KAAM,wBACNC,KAAM,2BACNd,UAAWL,GACX0B,MAAOvB,QAUrBkC,GAAc,CAChBnB,KAAM,SACNC,KAAM,2BACNC,KAAM,oBACNE,SAAU,CACN,CACIJ,KAAM,cACNC,KAAM,2BACNd,UAAWJ,GACXyB,MAAOvB,GACP+B,OAAO,GAEX,CACIhB,KAAM,gBACNC,KAAM,2BACNd,UAAWH,GACXwB,MAAOvB,IAEX,CACIe,KAAM,iBACNC,KAAM,iCACNd,UA3oBO1E,IAAMC,KAAK,kBAAM9X,EAAAgV,EAAA,IAAAC,KAAAjV,EAAAkV,KAAA,cA4oBxB0I,MAAOvB,GACP+B,OAAO,KAoCbI,GAAY,CAtpBA,CACdpB,KAAM,IACNgB,OAAO,EACP7B,UAAW,kBAAM7H,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAUE,GAAG,wBAC9Be,MAAOvB,IAopBPwB,GACAC,GAvce,CACfV,KAAM,WACNC,KAAM,OACNG,SAAU,CACN,CACIJ,KAAM,iBACNC,KAAM,QACNd,UAAW3E,EACXgG,MAAOa,KAEX,CACIrB,KAAM,kBACNC,KAAM,SACNd,UAAWtE,EACX2F,MAAOa,KAEX,CACIrB,KAAM,oBACNC,KAAM,WACNd,UAAWrE,EACX0F,MAAOa,KAEX,CACIrB,KAAM,mBACNC,KAAM,UACNd,UAAWnE,EACXwF,MAAOa,KAEX,CACIrB,KAAM,2BACNC,KAAM,kBACNd,UAAWpE,EACXyF,MAAOa,OAyafV,GACAC,GACAC,GACAC,GArPsB,CACtBd,KAAM,YACNC,KAAM,WACNG,SAAU,CACN,CACIJ,KAAM,4BACNC,KAAM,2BACNd,UAAWnB,GACXwC,MAAOvB,MA+OfgC,GA/IqB,CACrBjB,KAAM,WACNC,KAAM,YACNG,SAAU,CACN,CACIJ,KAAM,iCACNC,KAAM,uCACNd,UAAWf,GACXoC,MAAOvB,IAEX,CACIe,KAAM,0CACNC,KAAM,uCACNd,UAAWf,GACXoC,MAAOvB,IAEX,CACIe,KAAM,6BACNC,KAAM,2BACNd,UAAWd,GACXmC,MAAOvB,IAEX,CACIe,KAAM,sCACNC,KAAM,2BACNd,UAAWd,GACXmC,MAAOvB,IAEX,CACIe,KAAM,QACNC,KAAM,eACNd,UAAWR,GACX6B,MAAOvB,MAiHfc,GACAgB,GA5OqB,CACrBf,KAAM,WACNC,KAAM,UACNG,SAAU,CACN,CACIJ,KAAM,6BACNC,KAAM,uCACNd,UAAWT,GACX8B,MAAOvB,MAsOfiC,GACAC,GA7CkB,CAClBnB,KAAM,SACNC,KAAM,QACNG,SAAU,CACN,CACIJ,KAAM,uBACNC,KAAM,2BACNd,UAAWH,GACXwB,MAAOvB,OA0CbY,GAAenO,cACf4P,GACY,OAAjBzB,IAA8C,MAArBA,GAAa5Q,IAC7B,CACIwR,GACAC,GACAC,GACAC,GACAC,GACAC,GACAG,GACAlB,GACAgB,GACAG,GACAC,IAEJ,CAACV,GAAiBQ,GAAcF,GAAcG,GAAUC,IAE5DI,GAtDgB,SAAhBC,EAAgBC,GAClB,IAAIC,EAAa,GAUjB,OARAD,EAASA,GAAU,IACZE,QAAQ,SAAAC,GACXF,EAAWG,KAAKD,GAEa,qBAAlBA,EAAKxB,WACZsB,EAAU,GAAAhI,OAAAb,OAAAiJ,EAAA,EAAAjJ,CAAO6I,GAAP7I,OAAAiJ,EAAA,EAAAjJ,CAAsB2I,EAAcI,EAAKxB,eAGpDsB,EA2CcF,CAAcJ,IC1yBxBW,GAtBA,kBAEXzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,KACI1K,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACKkC,GAAOQ,IAAI,SAACzB,EAAO0B,GAChB,OACK1B,EAAMJ,UACH9I,EAAAC,EAAAC,cAACgJ,EAAMA,MAAP,CACIvG,IAAKiI,EACLlC,KAAMQ,EAAMR,KACZZ,MAAOoB,EAAMpB,MACb4B,MAAOR,EAAMQ,MACb7B,UAAW5G,EAAW,SAAAN,GAClB,OAAOX,EAAAC,EAAAC,cAACgJ,EAAMrB,UAAclH,YCO7CkK,4LAJP,OAAO7K,EAAAC,EAAAC,cAAC4K,GAAD,aAFGlK,cCTEmK,QACa,cAA7BC,OAAO1C,SAAS2C,UAEiB,UAA7BD,OAAO1C,SAAS2C,UAEhBD,OAAO1C,SAAS2C,SAASC,MAAM,kGCJjCC,GAAa,CACf5I,WAAYC,IACZ4I,YAAa5I,IACb6I,iBAAkB7I,IAClB8I,gBAAiB9I,IACjB+I,kBAAkB,GAgDP1I,GA1CA,WAAqD,IAApDI,EAAoDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAArCwJ,GAAYM,EAAyB9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAChE,OAAQC,EAAOzX,MACX,KAAKhD,KACD,OAAOuQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIV,WAAYkJ,EAAOxX,UAE3B,KAAKhD,KACD,OAAOsQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEImI,YAAaK,EAAOxX,UAE5B,KAAK/C,KACD,OAAOqQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIoI,iBAAkBI,EAAOxX,UAEjC,KAAK9C,KACD,OAAOoQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIqI,gBAAiBG,EAAOxX,UAEhC,KAAK7C,KACD,OAAOmQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIsI,kBAAmBtI,EAAMsI,mBAEjC,KAAKla,KACD,OAAOkQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIsI,kBAAkB,IAE1B,KAAKja,KACD,OAAOiQ,OAAAmK,GAAA,EAAAnK,CAAA,GACA0B,EADP,CAEIsI,kBAAkB,IAE1B,QACI,OAAOtI,aC9CbkI,GAAa,CACfxQ,KAAMP,cACN2F,SAAS,GAiCE4L,GA3BF,WAAmD,IAAlD1I,EAAkDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAnCwJ,GAAYM,EAAuB9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAC5D,OAAQC,EAAOzX,MACX,KAAKpE,KACD,OAAO2R,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAKlQ,KACD,OAAO0R,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBtI,KAAM8Q,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACpE,KAAKrE,KACD,OAAOyR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,KAAKhQ,KACD,OAAOwR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAK/P,KACD,OAAOuR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBtI,KAAM8Q,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACpE,KAAKlE,KACD,OAAOsR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,KAAK7P,KACD,OAAOqR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBtI,KAAM,OAC7B,KAAKxK,KACD,OAAOoR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAK3P,KACD,OAAOmR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBrG,oBAAqB6O,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACnF,KAAK9D,KACD,OAAOkR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cCrBT2I,GAfC,WAAuC,IAAtC3I,EAAsCtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAvB,GAAI8J,EAAmB9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACnD,OAAQC,EAAOzX,MACX,KAAKsC,KACD,OAAOmV,EAAOxX,QAClB,KAAKsC,KACD,OAAOgL,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAUwI,EAAOxX,SACjC,KAAKuC,KACD,OAAO+K,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,GAChB,KAAKxM,KACD,OAAO8K,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAUwI,EAAOxX,SACjC,QACI,OAAOgP,aCnBbkI,GAAa,CACfU,KAAM,GACN9L,SAAS,GAmBE+L,GAbG,WAAwD,IAAvD7I,EAAuDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAxCwJ,GAAYM,EAA4B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACtE,OAAQC,EAAOzX,MACX,KAAK8E,KACD,OAAOyI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAKhH,KACD,OAAOwI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB4I,KAAMJ,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACpE,KAAK6E,KACD,OAAOuI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cCjBlBkI,GAAa,CACfY,QAAS,KACThM,SAAS,EACT5L,MAAO,IAoBI6X,GAdE,WAAuD,IAAtD/I,EAAsDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAvCwJ,GAAYM,EAA2B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACpE,OAAQC,EAAOzX,MACX,KAAKiF,KACD,OAAOsI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAK7G,KACD,OAAOqI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB8I,SAAS,EAAMhM,SAAS,EAAO5L,MAAO,OAC7D,KAAKgF,KACD,OAAOoI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IAEvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cCTlBkI,GAAa,CACf5N,QAAS,GACTwC,SAAS,EACTvC,WAAY,EACZrJ,MAAO,GACP8X,cAAe,IAgCJC,GA1BG,WAAwD,IAAvDjJ,EAAuDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAxCwJ,GAAYM,EAA4B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACtE,OAAQC,EAAOzX,MACX,KAAKzC,KACD,OAAOgQ,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,EAAMvC,WAAY,EAAGyO,cAAe,KACpE,KAAKza,KACD,OAAO+P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB1F,QAASkO,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACvE,KAAK1C,KACD,OAAO8P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,KAAKrO,KACD,OAAO6P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAKpO,KACD,OAAO4P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBzF,WAAYiO,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OAC1E,KAAKvC,KACD,OAAO2P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,KAAKlO,KACD,OAAO0P,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAKjO,KACD,OAAOyP,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBgJ,cAAeR,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OAC7E,KAAKpC,KACD,OAAOwP,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IAEvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cClClBkI,GAAa,CACjBgB,KAAM,GACNpM,SAAS,EACTvC,WAAY,KACZyO,cAAe,GACfG,gBAAiB,KACjB3O,OAAQ,IAsDK4O,GA1CD,WAAoD,IAAnDpJ,EAAmDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAApCwJ,GAAYM,EAAwB9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAChE,OAAQC,EAAOzX,MACb,KAAK1D,KACH,OAAOiR,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiB,KACjBD,KAAMV,EAAOxX,QACb8L,SAAS,EACTtC,OAAQ,KAEZ,KAAKlN,KACH,OAAOgR,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBxF,OAAQgO,EAAOxX,QAAS8L,SAAS,IACtD,KAAKtP,KACH,OAAO8Q,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAC9B,KAAKrP,KACH,OAAO6Q,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEzF,WAAYiO,EAAOxX,QACnB8L,SAAS,EACT5L,MAAO,KACPiY,gBAAiB,8BAErB,KAAKxb,KACH,OAAO2Q,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAC9B,KAAKhP,KACH,OAAOwQ,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBgJ,cAAe,KACpC,KAAKpb,KACH,OAAO0Q,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEgJ,cAAeR,EAAOxX,QACtB8L,SAAS,EACT5L,MAAO,OAEX,KAAKrD,KAEL,KAAKH,KACH,OAAO4Q,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBxF,OAAQgO,EAAOxX,QAAS8L,SAAS,IACtD,QACE,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cClEZkI,GAAa,CACfgB,KAAM,GACNpM,SAAS,EACT5L,MAAO,IAiBImY,GAXC,WAAsD,IAArDrJ,EAAqDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAtCwJ,GAAYM,EAA0B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAClE,OAAQC,EAAOzX,MACX,KAAKwF,KACD,OAAO+H,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBkJ,KAAMV,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACpE,KAAKsF,KACD,OAAO8H,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cCflBkI,GAAa,CACfxL,MAAO,GACPI,SAAS,GAmBEwM,GAbI,WAAwD,IAAvDtJ,EAAuDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAxCwJ,GAAYM,EAA4B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACvE,OAAQC,EAAOzX,MACX,KAAKoF,KACD,OAAOmI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,IAChC,KAAK1G,KACD,OAAOkI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBtD,MAAO8L,EAAOxX,QAAS8L,SAAS,EAAO5L,MAAO,OACrE,KAAKmF,KACD,OAAOiI,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACvD,QACI,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,aCAlBkI,GAAa,CACjBgB,KAAM,GACNpM,SAAS,EACT5L,MAAO,GACPqY,WAAY,KACZC,gBAAiB,KACjBC,iBAAkB,KAClBN,gBAAiB,KACjBO,WAAY,IA2ICC,GA5HS,WAGnB,IAFH3J,EAEGtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAFYwJ,GACfM,EACG9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAEH,OAAQC,EAAOzX,MACb,KAAKlG,KACL,KAAKG,KACL,KAAKG,KACL,KAAKI,KACH,OAAO+S,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE9O,MAAO,KACP4L,SAAS,IAGb,KAAK1R,KAGH,IAAIwe,EAAU,GAuBd,OAtBApB,EAAOxX,QAAQ6Y,KAAKzC,QAAQ,SAAA0C,GAC1B,IAAIjV,EAASmL,EAAMkJ,KAAKa,OACtB,SAAA1C,GAAI,OAAIA,EAAKnU,KAAO4W,EAAI9W,gBACxB,GACF6B,EAAMyJ,OAAAmK,GAAA,EAAAnK,CAAA,GACDzJ,EADC,CAEJmV,gBAAiBF,EAAIE,gBACrBC,cAAeH,EAAIG,cACnBC,SAAUJ,EAAII,SACdC,YAAaL,EAAIM,cACjBC,WAAYP,EAAIO,aAGlBT,GAAWA,EAAQjL,OAAS,EAAIiL,EAAU5J,EAAMkJ,MAAMxB,IAAI,SAAAL,GACxD,OAAIA,EAAKnU,KAAO4W,EAAI9W,cACXqU,EAEAxS,MAKNyJ,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEsK,SAAU9B,EAAOxX,QAAQuZ,MACzBpB,gBAAiBX,EAAOxX,QAAQwZ,IAChCtB,KAAMU,EACN1Y,MAAO,KACP4L,SAAS,IAGb,KAAKnS,KACH,OAAO2T,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEuJ,WAAYf,EAAOxX,QAAQuY,WAC3BC,gBAAiBhB,EAAOxX,QAAQwY,gBAChCC,iBAAkBjB,EAAOxX,QAAQyY,iBACjCvY,MAAO,KACP4L,SAAS,IAEb,KAAK7R,KACH,OAAOqT,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEuJ,WAAWjL,OAAAmK,GAAA,EAAAnK,CAAA,GAAM0B,EAAMuJ,WAAef,EAAOxX,QAAQyZ,cACrDjB,gBAAe,GAAArK,OAAAb,OAAAiJ,EAAA,EAAAjJ,CAAM0B,EAAMwJ,iBAAZ,CAA6BhB,EAAOxX,QAAQ0Z,SAC3DvB,gBAAiBX,EAAOxX,QAAQwZ,IAChCtZ,MAAO,KACP4L,SAAS,IAEb,KAAKhS,KACH,OAAOwT,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEuJ,WAAYf,EAAOxX,QAAQyZ,aAC3BtB,gBAAiBX,EAAOxX,QAAQwZ,IAChCtZ,MAAO,KACP4L,SAAS,IAEb,KAAKtS,KACH,OAAO8T,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEkJ,KAAMV,EAAOxX,QAAQ2Z,YACrBlB,iBAAkBjB,EAAOxX,QAAQyY,iBACjCC,WAAYlB,EAAOxX,QAAQ0Y,WAC3B5M,SAAS,EACT5L,MAAO,OAEX,KAAK1F,KACH,OAAO8S,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEkJ,KAAMlJ,EAAMkJ,KAAKxB,IAAI,SAAAL,GACnB,OAAIA,EAAKnU,KAAOsV,EAAOxX,QAAQ6D,OAAO7B,cAC7BqU,EAEA/I,OAAAmK,GAAA,EAAAnK,CAAA,GACF+I,EADL,CAEE6C,SAAU1B,EAAOxX,QAAQ6D,OAAOqV,SAChCD,cAAezB,EAAOxX,QAAQ6D,OAAOoV,cACrCE,YAAa3B,EAAOxX,QAAQ8Y,IAAIM,kBAItCjB,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAEX,KAAK5F,KACH,OAAOgT,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiB,KACjBjY,MAAO,KACP4L,SAAS,IAEb,KAAK/R,KACL,KAAKG,KACL,KAAKT,KACL,KAAKG,KACL,KAAKS,KACL,KAAKI,KACH,OAAO6S,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACrD,QACE,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,aC/IZkI,GAAa,CACjB0C,UAAW,GACXC,SAAU,GACVC,YAAa,GACbhO,SAAS,EACT5L,MAAO,KACPsJ,OAAQ,GACR2O,gBAAiB,KACjB4B,aAAa,GAiGAC,GApFH,WAAkD,IAAjDhL,EAAiDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAlCwJ,GAAYM,EAAsB9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EAC5D,OAAQC,EAAOzX,MACb,KAAKrF,KACL,KAAKG,KACL,KAAKG,KACH,OAAOsS,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,EAAM5L,MAAO,OAC3C,KAAKvF,KACH,OAAO2S,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE4K,UAAWpC,EAAOxX,QAClB8L,SAAS,EACT5L,MAAO,OAEX,KAAKpF,KACH,OAAOwS,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE6K,SAAUrC,EAAOxX,QAAQ6Z,SACzBC,YAAatC,EAAOxX,QAAQ8Z,YAC5BhO,SAAS,EACT5L,MAAO,OAEX,KAAKjF,KACH,IAAM2d,EAAU5J,EAAM6K,SAASnD,IAAI,SAAAuD,GAAG,OACpCA,EAAIvW,MAAQ8T,EAAOxX,QAAQ0D,IAA3B4J,OAAAmK,GAAA,EAAAnK,CAAA,GACS2M,EAAQzC,EAAOxX,QAAQyZ,cAC5BQ,IAEN,OAAO3M,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiBX,EAAOxX,QAAQwZ,IAChCK,SAAUjB,EACV9M,SAAS,EACT5L,MAAO,OAEX,KAAK7E,KACH,OAAOiS,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiBX,EAAOxX,QAAQwZ,IAChCM,YAAa9K,EAAM8K,YAAYf,OAC7B,SAAAmB,GAAC,OAAIA,EAAEhY,GAAGiY,aAAe3C,EAAOxX,QAAQyZ,eAE1C3N,SAAS,EACT5L,MAAO,OAGX,KAAK1E,KACH,IAAM4e,EAAS9M,OAAAmK,GAAA,EAAAnK,CAAA,CACbpL,GAAIsV,EAAOxX,QAAQkC,IAChBsV,EAAOxX,QAAQyZ,cAEdY,EAAU,GAAAlM,OAAAb,OAAAiJ,EAAA,EAAAjJ,CAAO0B,EAAM8K,aAAb,CAA0BM,IAC1C,OAAO9M,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiBX,EAAOxX,QAAQwZ,IAChCM,YAAaO,EAKbvO,SAAS,EACT5L,MAAO,OAEX,KAAKtF,KACH,OAAO0S,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE9O,MAAOsX,EAAOxX,QACd+Z,aAAa,EACbjO,SAAS,IAEb,KAAKpQ,KACH,OAAO4R,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBxF,OAAQgO,EAAOxX,QAAS8L,SAAS,IACtD,KAAKrQ,KACL,KAAKP,KAEL,KAAKH,KACL,KAAKO,KACH,OAAOgS,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACrD,KAAK3Q,KACH,OAAOmS,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAO,KAAMiY,gBAAiB,KAAMrM,SAAS,IAClE,QACE,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,cClHZkI,GAAa,CACjBoD,eAAgB,GAChBxO,SAAS,EACT5L,MAAO,MA+BMqa,GApBG,WAAuD,IAAtDvL,EAAsDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAvCwJ,GAAYM,EAA2B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACvE,OAAQC,EAAOzX,MACb,KAAK+D,KACH,OAAOwJ,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmBlD,SAAS,EAAM5L,MAAO,OAC3C,KAAK6D,KACH,OAAOuJ,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEsL,eAAgB9C,EAAOxX,QACvB8L,SAAS,EACT5L,MAAO,OAEX,KAAK8D,KACH,OAAOsJ,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACrD,KAAK7H,KACH,OAAOqJ,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAO,KAAM4L,SAAS,IAC3C,QACE,OAAOwB,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,aCPZkI,GAAa,CACjBgB,KAAM,GACNsC,QAAS,GACT1O,SAAS,EACT5L,MAAO,GACPua,SAAU,GACVC,eAAgB,GAChBC,WAAY,GACZC,aAAc,IAmNDC,GA9LC,WAAsD,IAArD7L,EAAqDtB,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAtCwJ,GAAYM,EAA0B9J,UAAAC,OAAA,EAAAD,UAAA,QAAA6J,EACpE,OAAQC,EAAOzX,MACb,KAAK3H,KACL,KAAKG,KACL,KAAKG,KACL,KAAKI,KACL,KAAKG,KACL,KAAKG,KACH,OAAOkU,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEElD,SAAS,EACT5L,MAAO,OAEX,KAAK1I,KACH,OAAO8V,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE9O,MAAO,OAEX,KAAKvH,KACH,OAAO2U,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEwL,QAAQlN,OAAAmK,GAAA,EAAAnK,CAAA,GACH0B,EAAMwL,QADJ,CAELM,SAASxN,OAAAmK,GAAA,EAAAnK,CAAA,GACJ0B,EAAMwL,QAAQM,SACdtD,EAAOxX,QAAQyZ,gBAGtBtB,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAEX,KAAKnH,KACH,OAAOuU,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEwL,QAAQlN,OAAAmK,GAAA,EAAAnK,CAAA,GACH0B,EAAMwL,QADJ,CAELM,SAASxN,OAAAmK,GAAA,EAAAnK,CAAA,GACJ0B,EAAMwL,QAAQM,SACdtD,EAAOxX,QAAQ+a,oBAGpBC,QAAO,GAAA7M,OAAAb,OAAAiJ,EAAA,EAAAjJ,CACF0B,EAAMwL,QAAQQ,QAAQjC,OACvB,SAAAkC,GAAK,OAAIA,EAAM/Y,KAAOsV,EAAOxX,QAAQkC,MAFlC,CAAAoL,OAAAmK,GAAA,EAAAnK,CAAA,CAIHpL,GAAIsV,EAAOxX,QAAQkC,IAAOsV,EAAOxX,QAAQyZ,kBAG/CtB,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAEX,KAAKhH,KACH,OAAOoU,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEwL,QAAQlN,OAAAmK,GAAA,EAAAnK,CAAA,GACH0B,EAAMwL,QADJ,CAELM,SAASxN,OAAAmK,GAAA,EAAAnK,CAAA,GACJ0B,EAAMwL,QAAQM,SACdtD,EAAOxX,QAAQyZ,gBAGtBtB,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAGX,KAAKrH,KACH,OAAOyU,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEmJ,gBAAiB,OAErB,KAAK3f,KACH,OAAO8U,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEwL,QAAShD,EAAOxX,QAAQ4X,KACxBsD,cAAe1D,EAAOxX,QAAQkb,cAC9BC,gBAAiB3D,EAAOxX,QAAQmb,gBAChCrP,SAAS,EACT5L,MAAO,OAEX,KAAK7G,KAAL,IAAA+hB,EACuD5D,EAAOxX,QAApD0a,EADVU,EACUV,eAAgBC,EAD1BS,EAC0BT,WAAYC,EADtCQ,EACsCR,aAChCS,EAAa,GACjB,OAAO/N,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEyL,SAAUE,EAAWW,OAAO,SAASC,EAAMC,GACzC,OAAIH,EAAW9G,QAAQiH,EAAK/X,SAAW,GACrC4X,EAAW/E,KAAKkF,EAAK/X,SACrB,GAAA0K,OAAAb,OAAAiJ,EAAA,EAAAjJ,CACKiO,GADL,CAEE,CAAE9X,QAAS+X,EAAK/X,QAASgY,UAAWD,EAAKC,cAGpCF,GAER,IACHb,iBACAC,aACAC,eACA9O,SAAS,EACT5L,MAAO,OAGX,KAAK7H,KAAL,IAAAqjB,EAC0DlE,EAAOxX,QAAvD2b,EADVD,EACUC,QAASC,EADnBF,EACmBE,QAASC,EAD5BH,EAC4BG,WAAYC,EADxCJ,EACwCI,cACtC,OAAOxO,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEE2M,UACAC,UACAC,aACAC,gBACAhQ,SAAS,EACT5L,MAAO,OAGX,KAAKzI,KAAL,IAAAskB,EAQMvE,EAAOxX,QANTgc,EAFJD,EAEIC,MACAd,EAHJa,EAGIb,cACAC,EAJJY,EAIIZ,gBACAc,EALJF,EAKIE,YACAC,EANJH,EAMIG,oBACAC,EAPJJ,EAOII,kBAEF,OAAO7O,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEkJ,KAAM8D,EACNd,gBACAC,kBACAc,cACAC,sBACAC,oBACArQ,SAAS,EACT5L,MAAO,OAEX,KAAKtH,KACL,KAAKU,KACL,KAAK5B,KACL,KAAKG,KACL,KAAKG,KACL,KAAKM,KACL,KAAKG,KACL,KAAKO,KACL,KAAKG,KACH,OAAOmU,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,EAAZ,CAAmB9O,MAAOsX,EAAOxX,QAAS8L,SAAS,IACrD,KAAKlU,KACH,OAAO0V,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEkJ,KAAMlJ,EAAMkJ,KAAKxB,IAAI,SAAAL,GAAI,OACvBA,EAAKnU,KAAOsV,EAAOxX,QAAQkC,GAA3BoL,OAAAmK,GAAA,EAAAnK,CAAA,GACS+I,EADT,CACetW,KAAMyX,EAAOxX,QAAQD,OAChCsW,IAENmE,QAAQlN,OAAAmK,GAAA,EAAAnK,CAAA,GACH0B,EAAMwL,QADJ,CAELM,SAASxN,OAAAmK,GAAA,EAAAnK,CAAA,GACJ0B,EAAMwL,QAAQM,SADX,CAEN/a,KAAMyX,EAAOxX,QAAQD,SAGzBoY,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAEX,KAAKnI,KACH,OAAOuV,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEkJ,KAAMlJ,EAAMkJ,KAAKxB,IAAI,SAAAL,GAAI,OACvBA,EAAKnU,KAAOsV,EAAOxX,QAAQkC,GAA3BoL,OAAAmK,GAAA,EAAAnK,CAAA,GACS+I,EADT,CACe+F,OAAQ5E,EAAOxX,QAAQoc,SAClC/F,IAEN8B,gBAAiBX,EAAOxX,QAAQwZ,IAChC1N,SAAS,EACT5L,MAAO,OAGX,KAAKhI,KACH,OAAOoV,OAAAmK,GAAA,EAAAnK,CAAA,GACF0B,EADL,CAEEqN,UAAW7E,EAAOxX,UAGtB,QACE,OAAOsN,OAAAmK,GAAA,EAAAnK,CAAA,GAAK0B,KCrOHsN,gBAAgB,CAC7B5E,QACAC,WACA/I,UACAiJ,aACAE,YACAwE,aACAnE,SACAC,WACAC,cACAK,mBACAkC,WACAb,OACAO,sECxBIiC,GAAY,SAACC,GAAsB,IAAjBC,EAAiBhP,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAP,GAC9B,OAAOiP,MAAMF,EAAKC,GACbpQ,KAAK,SAAAsQ,GACF,GAAyB,OAApBA,EAASR,OACV,MAAMQ,EAASC,OAEnB,OAAOD,EAASC,SAEnBvQ,KAAK,SAAAuQ,GACF,OAAOA,IAEVC,MAAM,SAAA5c,GACH,MAAMA,2BCmBR6c,iBAsCAC,iBAYAC,iBA6BA9U,iBA0BO+U,iBAIAC,iBAIAC,iBAIAC,iBAIPC,IAlIJC,GAAa,SAAA7W,GACjB,IAAI8W,EAAU,IAAIhW,KACdd,EAAM8W,EAAQC,IAAI,OAAQ/V,KAAKgW,UAAUhX,GAAO,CAAE+N,KAAM,MACvD+I,EAAQG,OAAO,OAAQ,CAAElJ,KAAM,OAMtC,SAAUsI,GAAVpJ,GAAA,IAAAiK,EAAAtV,EAAAC,EAAAmU,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAUqB,OAVrBL,EAAAjK,EAAkB3T,QAAWsI,EAA7BsV,EAA6BtV,SAAUC,EAAvCqV,EAAuCrV,SAC/BmU,EAAU,CACdzc,KAAMyH,KAAKgW,UAAU,CAAExS,QAAS5C,EAAUC,aAC1C2V,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,aALTuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAU2B7W,KAAMsV,GAVjC,OAcI,OAJME,EAVVoB,EAAAI,KAaIb,GAAWX,EAAS3c,MAbxB+d,EAAAC,KAAA,EAcUI,aAAIxW,aAAiB+U,EAAS3c,OAdxC,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAmBYP,EAAAM,GAAM1B,SAASR,OAnB3B4B,EAAAC,KAoBW,MApBXD,EAAAO,GAAA,GAuBW,MAvBXP,EAAAO,GAAA,2BAqBQV,EAAU,yDArBlBG,EAAAQ,OAAA,2BAwBQX,EAAU,6CAxBlBG,EAAAQ,OAAA,oBA2BQX,EAAOG,EAAAM,GA3Bf,QA6BI,OA7BJN,EAAAC,KAAA,GA6BUI,aAAIvW,aAAgB+V,IA7B9B,QA8BIN,GAAW,MA9Bf,yBAAAS,EAAAS,SAAAC,GAAA,eAsCA,SAAU1B,GAAV2B,GAAA,IAAAjW,EAAA,OAAAoV,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAGI,OAH0BvV,EAA9BiW,EAAmB3e,QAAW0I,QAA9BkW,EAAArD,KAAA,EAEIgC,GAAW,MAFfqB,EAAAX,KAAA,EAGUhQ,aAAK,WACTvF,EAAQ4N,KAAK,oBAJnB,OAAAsI,EAAAX,KAAA,eAAAW,EAAArD,KAAA,EAAAqD,EAAAN,GAAAM,EAAA,iCAAAA,EAAAH,SAAAI,GAAA,cAYA,SAAU5B,GAAV6B,GAAA,IAAAC,EAAAvW,EAAAC,EAAAF,EAAAmU,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OAQqB,OARrBc,EAAAD,EAAqB9e,QAAWwI,EAAhCuW,EAAgCvW,SAAUC,EAA1CsW,EAA0CtW,MAAOF,EAAjDwW,EAAiDxW,SACzCmU,EAAU,CACduC,KAAMvX,KAAKgW,UAAU,CAAElV,WAAUC,QAAOF,aACxC2V,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,qBAJ/Ba,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAQ2BhQ,aAAKuO,GAAW,kBAAmBE,GAR9D,OASI,OADME,EARVoC,EAAAZ,KAAAY,EAAAf,KAAA,EASUI,aAAIrW,aAAoB4U,IATlC,OAAAoC,EAAAf,KAAA,iBAAAe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAAAA,EAAAT,GAYYS,EAAAV,GAAMlC,OAZlB4C,EAAAf,KAaW,MAbXe,EAAAT,GAAA,GAgBW,MAhBXS,EAAAT,GAAA,2BAcQV,EAAU,wBAdlBmB,EAAAR,OAAA,2BAiBQX,EAAU,sBAjBlBmB,EAAAR,OAAA,oBAoBQX,EAAOmB,EAAAV,GApBf,QAsBI,OAtBJU,EAAAf,KAAA,GAsBUI,aAAIpW,aAAmB4V,IAtBjC,yBAAAmB,EAAAP,SAAAS,GAAA,eA6BA,SAAU/W,GAAVgX,GAAA,IAAA7W,EAAAoU,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OAQqB,OARiB3V,EAAtC6W,EAA2Bnf,QAAWsI,SAC9BoU,EAAU,CACduC,KAAMvX,KAAKgW,UAAU,CAAEpV,aACvB4V,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,qBAJ/BiB,EAAA7D,KAAA,EAAA6D,EAAAnB,KAAA,EAQ2BhQ,aAAKuO,GAAW,wBAAyBE,GARpE,OASI,OADME,EARVwC,EAAAhB,KAAAgB,EAAAnB,KAAA,EASUI,aAAIjW,aAAsBwU,EAASiB,UAT7C,OAAAuB,EAAAnB,KAAA,iBAAAmB,EAAA7D,KAAA,GAAA6D,EAAAd,GAAAc,EAAA,SAAAA,EAAAb,GAYYa,EAAAd,GAAMlC,OAZlBgD,EAAAnB,KAaW,MAbXmB,EAAAb,GAAA,GAgBW,MAhBXa,EAAAb,GAAA,2BAcQV,EAAU,wBAdlBuB,EAAAZ,OAAA,2BAiBQX,EAAU,sBAjBlBuB,EAAAZ,OAAA,oBAoBQX,EAAOuB,EAAAd,GApBf,QAsBI,OAtBJc,EAAAnB,KAAA,GAsBUI,aAAIhW,aAAqBwV,IAtBnC,yBAAAuB,EAAAX,SAAAY,GAAA,eA0BO,SAAUnC,KAAV,OAAAY,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OACL,OADKqB,EAAArB,KAAA,EACCsB,aAAU5jB,KAAYohB,IADvB,wBAAAuC,EAAAb,SAAAe,IAIA,SAAUrC,KAAV,OAAAW,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OACL,OADKwB,EAAAxB,KAAA,EACCsB,aAAUtjB,KAAa+gB,IADxB,wBAAAyC,EAAAhB,SAAAiB,IAIA,SAAUtC,KAAV,OAAAU,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OACL,OADK0B,EAAA1B,KAAA,EACCsB,aAAUzjB,KAAemhB,IAD1B,wBAAA0C,EAAAlB,SAAAmB,IAIA,SAAUvC,KAAV,OAAAS,GAAA9R,EAAA+R,KAAA,SAAA8B,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA5B,MAAA,OACL,OADK4B,EAAA5B,KAAA,EACCsB,aAAUrjB,KAAiBiM,IAD5B,wBAAA0X,EAAApB,SAAAqB,IAIP,SAAUxC,KAAV,OAAAQ,GAAA9R,EAAA+R,KAAA,SAAAgC,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA9B,MAAA,OACE,OADF8B,EAAA9B,KAAA,EACQ5O,aAAI,CACR2Q,aAAK9C,IACL8C,aAAK7C,IACL6C,aAAK5C,IACL4C,aAAK3C,MALT,wBAAA0C,EAAAtB,SAAAwB,IASe3C,gCC5GL7X,iBAyBAC,iBAUAwa,iBAUAC,iBASAC,iBASA9I,iBASAzR,iBASOwa,iBAIAC,iBAIAC,iBAIAC,iBAIAC,iBAIAC,iBAIAC,iBAIPC,IAjJV,SAASC,GAAoBC,EAAWnS,GAEpC,OADIoS,SAAS9B,MAAM8B,SAAS9B,KAAK+B,aAAaF,EAAWnS,IAClD,EAOX,SAASsS,GAAgBC,GACrB,OADkDxT,UAAAC,OAAA,QAAA4J,IAAA7J,UAAA,GAAAA,UAAA,GAAV,UAEpC,IAAK,MACGqT,SAAS9B,MAAM8B,SAAS9B,KAAKkC,UAAUC,IAAIF,GAC/C,MACJ,IAAK,SACGH,SAAS9B,MAAM8B,SAAS9B,KAAKkC,UAAUxD,OAAOuD,GAClD,MACJ,QACQH,SAAS9B,MAAM8B,SAAS9B,KAAKkC,UAAUE,OAAOH,GAI1D,OAAO,EAcX,SAAUzb,GAAVkO,GAAA,IAAA7N,EAAA,OAAAgY,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAEQ,OAF0BnY,EAAlC6N,EAAyB3T,QAAzBge,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAEchQ,aAAK4S,GAAqB,cAAe/a,GAFvD,UAGYA,IAAWyI,IAHvB,CAAAyP,EAAAC,KAAA,QAIY,OAJZD,EAAAC,KAAA,EAIkBI,aAAIiD,aAA6B/S,MAJnD,OAKY,OALZyP,EAAAC,KAAA,EAKkBI,aAAIkD,aAAwBhT,MAL9C,UAQYzI,IAAWyI,IARvB,CAAAyP,EAAAC,KAAA,SASY,OATZD,EAAAC,KAAA,GASkBI,aAAIiD,aAA6B/S,MATnD,QAUY,OAVZyP,EAAAC,KAAA,GAUkBI,aAAIkD,aAAwBhT,MAV9C,WAaYzI,IAAWyI,IAbvB,CAAAyP,EAAAC,KAAA,SAcY,OAdZD,EAAAC,KAAA,GAckBI,aAAImD,aAAwBjT,MAd9C,QAeY,OAfZyP,EAAAC,KAAA,GAekBI,aAAIkD,aAAwBhT,MAf9C,QAgBY,OAhBZyP,EAAAC,KAAA,GAgBkBI,aAAIiD,aAA6B/S,MAhBnD,QAAAyP,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,kCAAAA,EAAAS,SAAAgD,GAAA,eAyBA,SAAU/b,GAAViZ,GAAA,IAAA5Y,EAAA,OAAA+X,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAEQ,OAF+BlY,EAAvC4Y,EAA8B3e,QAA9B4e,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAEchQ,aAAK4S,GAAqB,mBAAoB9a,GAF5D,OAAA6Y,EAAAX,KAAA,eAAAW,EAAArD,KAAA,EAAAqD,EAAAN,GAAAM,EAAA,iCAAAA,EAAAH,SAAAiD,GAAA,cAUA,SAAUxB,GAAVpB,GAAA,IAAA9Y,EAAA,OAAA8X,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OAEQ,OAFoCjY,EAA5C8Y,EAAmC9e,QAAnCgf,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAEchQ,aAAK4S,GAAqB,qBAAsB7a,GAF9D,OAAAgZ,EAAAf,KAAA,eAAAe,EAAAzD,KAAA,EAAAyD,EAAAV,GAAAU,EAAA,iCAAAA,EAAAP,SAAAkD,GAAA,cAUA,SAAUxB,GAAVhB,GAAA,IAAApf,EAAA,OAAA+d,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OAEQ,OAFmCle,EAA3Cof,EAAkCnf,QAAlCof,EAAA7D,KAAA,EAAA6D,EAAAnB,KAAA,EAEchQ,aAAK4S,GAAqB,4BAA6B9gB,GAFrE,OAAAqf,EAAAnB,KAAA,eAAAmB,EAAA7D,KAAA,EAAA6D,EAAAd,GAAAc,EAAA,iCAAAA,EAAAX,SAAAmD,GAAA,cASA,SAAUxB,KAAV,OAAAtC,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OAEQ,OAFRqB,EAAA/D,KAAA,EAAA+D,EAAArB,KAAA,EAEchQ,aAAKgT,GAAiB,qBAFpC,OAAA3B,EAAArB,KAAA,eAAAqB,EAAA/D,KAAA,EAAA+D,EAAAhB,GAAAgB,EAAA,iCAAAA,EAAAb,SAAAoD,GAAA,cASA,SAAUvK,KAAV,OAAAwG,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OAEQ,OAFRwB,EAAAlE,KAAA,EAAAkE,EAAAxB,KAAA,EAEchQ,aAAKgT,GAAiB,oBAAqB,OAFzD,OAAAxB,EAAAxB,KAAA,eAAAwB,EAAAlE,KAAA,EAAAkE,EAAAnB,GAAAmB,EAAA,iCAAAA,EAAAhB,SAAAqD,GAAA,cASA,SAAUjc,KAAV,OAAAiY,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OAEQ,OAFR0B,EAAApE,KAAA,EAAAoE,EAAA1B,KAAA,EAEchQ,aAAKgT,GAAiB,oBAAqB,UAFzD,OAAAtB,EAAA1B,KAAA,eAAA0B,EAAApE,KAAA,EAAAoE,EAAArB,GAAAqB,EAAA,iCAAAA,EAAAlB,SAAAsD,GAAA,cASO,SAAU1B,KAAV,OAAAvC,GAAA9R,EAAA+R,KAAA,SAAA8B,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA5B,MAAA,OACH,OADG4B,EAAA5B,KAAA,EACGsB,aAAUxiB,KAAe0I,IAD5B,wBAAAoa,EAAApB,SAAAuD,IAIA,SAAU1B,KAAV,OAAAxC,GAAA9R,EAAA+R,KAAA,SAAAgC,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA9B,MAAA,OACH,OADG8B,EAAA9B,KAAA,EACGsB,aAAUviB,KAAqB0I,IADlC,wBAAAqa,EAAAtB,SAAAwD,IAIA,SAAU1B,KAAV,OAAAzC,GAAA9R,EAAA+R,KAAA,SAAAmE,GAAA,cAAAA,EAAA3G,KAAA2G,EAAAjE,MAAA,OACH,OADGiE,EAAAjE,KAAA,EACGsB,aAAUtiB,KAAsBijB,IADnC,wBAAAgC,EAAAzD,SAAA0D,IAIA,SAAU3B,KAAV,OAAA1C,GAAA9R,EAAA+R,KAAA,SAAAqE,GAAA,cAAAA,EAAA7G,KAAA6G,EAAAnE,MAAA,OACH,OADGmE,EAAAnE,KAAA,EACGsB,aAAUriB,KAAqBijB,IADlC,wBAAAiC,EAAA3D,SAAA4D,IAIA,SAAU5B,KAAV,OAAA3C,GAAA9R,EAAA+R,KAAA,SAAAuE,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArE,MAAA,OACH,OADGqE,EAAArE,KAAA,EACGsB,aAAUpiB,KAAsBijB,IADnC,wBAAAkC,EAAA7D,SAAA8D,IAIA,SAAU7B,KAAV,OAAA5C,GAAA9R,EAAA+R,KAAA,SAAAyE,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAvE,MAAA,OACH,OADGuE,EAAAvE,KAAA,EACGsB,aAAUniB,KAAoBka,IADjC,wBAAAkL,EAAA/D,SAAAgE,IAIA,SAAU9B,KAAV,OAAA7C,GAAA9R,EAAA+R,KAAA,SAAA2E,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAzE,MAAA,OACH,OADGyE,EAAAzE,KAAA,EACGsB,aAAUliB,KAAoBwI,IADjC,wBAAA6c,EAAAjE,SAAAkE,IAIP,SAAU/B,KAAV,OAAA9C,GAAA9R,EAAA+R,KAAA,SAAA6E,GAAA,cAAAA,EAAArH,KAAAqH,EAAA3E,MAAA,OACI,OADJ2E,EAAA3E,KAAA,EACU5O,aAAI,CACN2Q,aAAKK,IACLL,aAAKM,IACLN,aAAKO,IACLP,aAAKQ,IACLR,aAAKS,IACLT,aAAKU,IACLV,aAAKW,MARb,wBAAAiC,EAAAnE,SAAAoE,IAYejC,UC5KXkC,GAAO,EAiBIC,GAAA,SAACxY,GAEZ,OAjBsB,SAApByY,EAAqBzY,EAA4B0Y,IACnD1Y,EAAYA,GAAa,IACf6L,QAAQ,SAAAC,GACd,IAAMnU,EAAKmU,EAAKnU,IAAM4gB,GACtBA,IAAQ,EACRzM,EAAKnU,GAAKA,EACVmU,EAAK4M,SAAW5M,EAAK4M,UAAYA,EACjC5M,EAAK6M,QAAS,EAEe,qBAAlB7M,EAAKxB,UACZmO,EAAkB3M,EAAKxB,SAAU3S,KAMzC8gB,CAAkBzY,GACXA,yBCGD4Y,iBAYA9Y,iBAWO+Y,iBAIAC,iBAIPC,IAhDJC,GAA0B,SAA1BA,EAA0BhZ,GAC5B,IAAIiZ,EAAgB,GADqBC,GAAA,EAAAC,GAAA,EAAAC,OAAApM,EAAA,IAEzC,QAAAqM,EAAAC,EAAqBtZ,EAArBuZ,OAAAC,cAAAN,GAAAG,EAAAC,EAAA5F,QAAA+F,MAAAP,GAAA,EAAgC,KAAvBQ,EAAuBL,EAAAjV,MAC4B,IAApDoI,OAAO1C,SAASF,SAASI,QAAQ0P,EAASxP,OAC1C+O,EAAclN,KAAK2N,EAAS/hB,IAGC,qBAAtB+hB,EAASpP,WAChB2O,EAAa,GAAArV,OAAAb,OAAAiJ,EAAA,EAAAjJ,CAAOkW,GAAPlW,OAAAiJ,EAAA,EAAAjJ,CAAyBiW,EAAwBU,EAASpP,cARtC,MAAAqP,GAAAR,GAAA,EAAAC,EAAAO,EAAA,YAAAT,GAAA,MAAAI,EAAAM,QAAAN,EAAAM,SAAA,WAAAT,EAAA,MAAAC,GAWzC,OAAOH,GAMX,SAAUL,KAAV,IAAA5Y,EAAAC,EAAA,OAAAsT,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAGqC,OAHrCD,EAAAzC,KAAA,EAEchR,EAAY6Z,GAAUlO,IAFpC8H,EAAAC,KAAA,EAG2ChQ,aAAKsV,GAAyBhZ,GAHzE,OAIQ,OADMC,EAHdwT,EAAAI,KAAAJ,EAAAC,KAAA,EAIcI,aAAIjU,aAAgBG,IAJlC,OAKQ,OALRyT,EAAAC,KAAA,EAKcI,aAAI/T,aAAoCE,IALtD,OAAAwT,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,kCAAAA,EAAAS,SAAA4F,GAAA,eAYA,SAAUha,KAAV,IAAAE,EAAAC,EAAA,OAAAsT,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAGqC,OAHrCW,EAAArD,KAAA,EAEchR,EAAY6Z,GAAUlO,IAFpC0I,EAAAX,KAAA,EAG2ChQ,aAAKsV,GAAyBhZ,GAHzE,OAIQ,OADMC,EAHdoU,EAAAR,KAAAQ,EAAAX,KAAA,EAIcI,aAAI/T,aAAoCE,IAJtD,OAAAoU,EAAAX,KAAA,gBAAAW,EAAArD,KAAA,EAAAqD,EAAAN,GAAAM,EAAA,kCAAAA,EAAAH,SAAA6F,GAAA,cAWO,SAAUlB,KAAV,OAAAtF,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACH,OADGe,EAAAf,KAAA,EACGsB,aAAUld,KAAW8gB,IADxB,wBAAAnE,EAAAP,SAAA8F,IAIA,SAAUlB,KAAV,OAAAvF,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OACH,OADGmB,EAAAnB,KAAA,EACGsB,aAAUhd,KAAkC8H,IAD/C,wBAAA+U,EAAAX,SAAA+F,IAIP,SAAUlB,KAAV,OAAAxF,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OACI,OADJqB,EAAArB,KAAA,EACU5O,aAAI,CAAC2Q,aAAKoD,IAAgBpD,aAAKqD,MADzC,wBAAA/D,EAAAb,SAAAgG,IAIenB,gCCrDL7Y,iBA4BOia,iBAIPC,IAhCV,SAAUla,GAAVkJ,GAAA,IAAAiK,EAAAhT,EAAAC,EAAA6R,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQyB,OARzBL,EAAAjK,EAAoB3T,QAAW4K,EAA/BgT,EAA+BhT,UAAWC,EAA1C+S,EAA0C/S,QAChC6R,EAAU,CACZwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,oCAAAtO,OAAsCvD,EAAtC,cAAAuD,OAA4DtD,IAJvEmT,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ+B7W,KAAMsV,GARrC,OASQ,OADME,EARdoB,EAAAI,KAAAJ,EAAAC,KAAA,EAScI,aAAI3T,aAAekS,EAAS3c,OAT1C,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAcgBP,EAAAM,GAAM1B,SAASR,OAd/B4B,EAAAC,KAeiB,MAfjBD,EAAAO,GAAA,GAkBiB,MAlBjBP,EAAAO,GAAA,2BAgBgBV,EAAU,yDAhB1BG,EAAAQ,OAAA,2BAmBgBX,EAAU,6CAnB1BG,EAAAQ,OAAA,oBAsBgBX,EAAOG,EAAAM,GAtBvB,QAwBQ,OAxBRN,EAAAC,KAAA,GAwBcI,aAAI1T,aAAckT,IAxBhC,yBAAAG,EAAAS,SAAAmG,GAAA,eA4BO,SAAUF,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OACH,OADGW,EAAAX,KAAA,EACGsB,aAAU1a,KAAU4F,IADvB,wBAAAmU,EAAAH,SAAAoG,IAIP,SAAUF,KAAV,OAAA7G,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACI,OADJe,EAAAf,KAAA,EACU5O,aAAI,CAAC2Q,aAAK0E,MADpB,wBAAA1F,EAAAP,SAAAqG,IAIeH,gCCrCL5Z,iBA2BOga,iBAIPC,IA/BV,SAAUja,GAAV4I,GAAA,IAAAiK,EAAA1S,EAAA3C,EAAAmU,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OASyB,OATzBL,EAAAjK,EAA2B3T,QAAWkL,EAAtC0S,EAAsC1S,QAAS3C,EAA/CqV,EAA+CrV,SACrCmU,EAAU,CACZzc,KAAMyH,KAAKgW,UAAU,CAAExS,UAAS3C,aAChC2V,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,iCALbuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAS+B7W,KAAMsV,GATrC,OAUQ,OADME,EATdoB,EAAAI,KAAAJ,EAAAC,KAAA,EAUcI,aAAIrT,aAAsB4R,IAVxC,OAAAoB,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAagBP,EAAAM,GAAM1B,SAASR,OAb/B4B,EAAAC,KAciB,MAdjBD,EAAAO,GAAA,GAiBiB,MAjBjBP,EAAAO,GAAA,2BAegBV,EAAU,wBAf1BG,EAAAQ,OAAA,2BAkBgBX,EAAU,sBAlB1BG,EAAAQ,OAAA,oBAqBgBX,EAAOG,EAAAM,GArBvB,QAuBQ,OAvBRN,EAAAC,KAAA,GAuBcI,aAAIpT,aAAqB4S,IAvBvC,yBAAAG,EAAAS,SAAAwG,GAAA,eA2BO,SAAUF,KAAV,OAAAjH,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OACH,OADGW,EAAAX,KAAA,EACGsB,aAAUva,KAAiB+F,IAD9B,wBAAA6T,EAAAH,SAAAyG,IAIP,SAAUF,KAAV,OAAAlH,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACI,OADJe,EAAAf,KAAA,EACU5O,aAAI,CAAC2Q,aAAK+E,MADpB,wBAAA/F,EAAAP,SAAA0G,IAIeH,gCC1BLva,iBAkCA1B,iBAoCAG,iBAiCOwb,iBAGAU,iBAGAC,iBAIPC,IAjHV,SAAU7a,GAAVkJ,GAAA,IAAA5T,EAAA2c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQyB,OARIle,EAA7B4T,EAAoB3T,QACV0c,EAAU,CACZwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,mBAAAtO,OAA8B,cAATpO,EAAuB,WAAa,YAJpEie,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ+B7W,KAAMsV,GARrC,OASQ,OADME,EARdoB,EAAAI,KAAAJ,EAAAC,KAAA,EAScI,aAAIxV,aAAwB+T,EAAS3c,OATnD,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAcgBP,EAAAM,GAAM1B,SAASR,OAd/B4B,EAAAC,KAeiB,MAfjBD,EAAAO,GAAA,GAkBiB,MAlBjBP,EAAAO,GAAA,GAqBiB,MArBjBP,EAAAO,GAAA,2BAgBgBV,EAAU,yDAhB1BG,EAAAQ,OAAA,2BAmBgBX,EAAU,6CAnB1BG,EAAAQ,OAAA,2BAsBgBX,EAAUG,EAAAM,GAAM1B,SAAS3c,KAtBzC+d,EAAAQ,OAAA,oBAyBgBX,EAAOG,EAAAM,GAzBvB,QA2BQ,OA3BRN,EAAAC,KAAA,GA2BcI,aAAIvV,aAAuB+U,IA3BzC,yBAAAG,EAAAS,SAAA8G,GAAA,eAkCA,SAAUxc,GAAV4V,GAAA,IAAA3e,EAAAqJ,EAAAxF,EAAA6Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAYyB,OAZFje,EAAvB2e,EAAuB3e,QAEXqJ,EAAqBrJ,EAArBqJ,SAAUxF,EAAW7D,EAAX6D,OAEZ6Y,EAAU,CACZzc,KAAM4D,EACNqa,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,uBAC3B1B,IAAG,mBAAAtO,OAAkC,cAAb9E,EAA2B,WAAa,YARxEuV,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAY+B7W,KAAMsV,GAZrC,OAcQ,OAFME,EAZdgC,EAAAR,KAAAQ,EAAAX,KAAA,EAccI,aAAIrV,aAAkB4T,EAAS3c,OAd7C,OAAA2e,EAAAX,KAAA,iBAAAW,EAAArD,KAAA,GAAAqD,EAAAN,GAAAM,EAAA,SAAAA,EAAAL,GAkBgBK,EAAAN,GAAMlC,OAlBtBwC,EAAAX,KAmBiB,MAnBjBW,EAAAL,GAAA,GAsBiB,MAtBjBK,EAAAL,GAAA,2BAoBgBV,EAAU,wBApB1Be,EAAAJ,OAAA,2BAuBgBX,EAAU,sBAvB1Be,EAAAJ,OAAA,oBA0BgBX,EAAUe,EAAAN,GAAM1B,SAAS3c,KA1BzC,QA4BQ,OA5BR2e,EAAAX,KAAA,GA4BcI,aAAIpV,aAAiB4U,IA5BnC,yBAAAe,EAAAH,SAAA+G,GAAA,eAoCA,SAAUtc,GAAV4V,GAAA,IAAA9e,EAAAqJ,EAAAzF,EAAA8Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OAUyB,OAVIje,EAA7B8e,EAA6B9e,QAEjBqJ,EAAwBrJ,EAAxBqJ,SAAUzF,EAAc5D,EAAd4D,UACZ8Y,EAAU,CACZwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,mBAAAtO,OAAkC,cAAb9E,EAA2B,WAAa,UAA7D,YAAA8E,OAAiFvK,IAN5Fob,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAU+B7W,KAAMsV,GAVrC,OAWQ,OADME,EAVdoC,EAAAZ,KAAAY,EAAAf,KAAA,EAWcI,aAAIlV,aAAwByT,EAAS3c,OAXnD,OAAA+e,EAAAf,KAAA,iBAAAe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAAAA,EAAAT,GAgBgBS,EAAAV,GAAM1B,SAASR,OAhB/B4C,EAAAf,KAiBiB,MAjBjBe,EAAAT,GAAA,GAoBiB,MApBjBS,EAAAT,GAAA,GAuBiB,MAvBjBS,EAAAT,GAAA,2BAkBgBV,EAAU,yDAlB1BmB,EAAAR,OAAA,2BAqBgBX,EAAU,6CArB1BmB,EAAAR,OAAA,2BAwBgBX,EAAUmB,EAAAV,GAAM1B,SAAS3c,KAAKuZ,IAxB9CwF,EAAAR,OAAA,oBA2BgBX,EAAUmB,EAAAV,GAAM1B,SAAS3c,KA3BzC,QA6BQ,OA7BR+e,EAAAf,KAAA,GA6BcI,aAAIjV,aAAuByU,IA7BzC,yBAAAmB,EAAAP,SAAAgH,GAAA,eAiCO,SAAUf,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OACH,OADGmB,EAAAnB,KAAA,EACGsB,aAAUjiB,KAAcmN,IAD3B,wBAAA2U,EAAAX,SAAAiH,IAGA,SAAUN,KAAV,OAAAtH,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OACH,OADGqB,EAAArB,KAAA,EACGsB,aAAU3hB,KAAasL,IAD1B,wBAAAoW,EAAAb,SAAAkH,IAGA,SAAUN,KAAV,OAAAvH,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OACH,OADGwB,EAAAxB,KAAA,EACGsB,aAAU9hB,KAAasL,IAD1B,wBAAA0W,EAAAhB,SAAAmH,IAIP,SAAUN,KAAV,OAAAxH,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OACI,OADJ0B,EAAA1B,KAAA,EACU5O,aAAI,CAAC2Q,aAAK0E,IAAe1E,aAAKqF,IAAkBrF,aAAKoF,MAD/D,wBAAAzF,EAAAlB,SAAAoH,IAIeP,gCCrHL7b,iBAyBAV,iBAoCAG,iBAsBO4c,iBAIAC,iBAGAC,iBAIPC,IA9FV,SAAUxc,KAAV,IAAAiT,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQqB,OAPbvB,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,mBAJTuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVoB,EAAAI,KAAAJ,EAAAC,KAAA,EASUI,aAAI3U,aAAgBkT,EAAS3c,OATvC,OAAA+d,EAAAC,KAAA,gBAkBI,OAlBJD,EAAAzC,KAAA,EAAAyC,EAAAM,GAAAN,EAAA,SAcYA,EAAAM,GAAM1B,SAASR,OAEnByB,EAAUG,EAAAM,GAAM1B,SAAS3c,KAhBjC+d,EAAAC,KAAA,GAkBUI,aAAI1U,aAAekU,IAlB7B,yBAAAG,EAAAS,SAAAyH,GAAA,cAyBA,SAAUnd,GAAV4K,GAAA,IAAA3T,EAAA6D,EAAA6Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAYqB,OAZEje,EAAvB2T,EAAuB3T,QAEb6D,EAAW7D,EAAX6D,OAEF6Y,EAAU,CACdzc,KAAM4D,EACNqa,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,uBAC3B1B,IAAG,cARPmC,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAY2B7W,KAAMsV,GAZjC,OAcI,OAFME,EAZVgC,EAAAR,KAAAQ,EAAAX,KAAA,EAcUI,aAAIxU,aAAgB+S,EAAS3c,OAdvC,OAAA2e,EAAAX,KAAA,iBAAAW,EAAArD,KAAA,GAAAqD,EAAAN,GAAAM,EAAA,SAAAA,EAAAL,GAkBYK,EAAAN,GAAMlC,OAlBlBwC,EAAAX,KAmBW,MAnBXW,EAAAL,GAAA,GAsBW,MAtBXK,EAAAL,GAAA,2BAoBQV,EAAU,wBApBlBe,EAAAJ,OAAA,2BAuBQX,EAAU,sBAvBlBe,EAAAJ,OAAA,oBA0BQX,EAAUe,EAAAN,GAAM1B,SAAS3c,KA1BjC,QA4BI,OA5BJ2e,EAAAX,KAAA,GA4BUI,aAAIvU,aAAe+T,IA5B7B,yBAAAe,EAAAH,SAAA0H,GAAA,eAoCA,SAAUjd,GAAVyV,GAAA,IAAA3e,EAAAyD,EAAAiZ,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OAUqB,OAVQje,EAA7B2e,EAA6B3e,QAEnByD,EAAYzD,EAAZyD,QACFiZ,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,qBAAAtO,OAAuB1K,IAN9Bub,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAU2B7W,KAAMsV,GAVjC,OAWI,OADME,EAVVoC,EAAAZ,KAAAY,EAAAf,KAAA,EAWUI,aAAIrU,aAAsB4S,EAAS3c,OAX7C,OAAA+e,EAAAf,KAAA,iBAkBI,OAlBJe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAcYA,EAAAV,GAAM1B,SAASR,OAEnByB,EAAUmB,EAAAV,GAAM1B,SAAS3c,KAAKuZ,IAhBtCwF,EAAAf,KAAA,GAkBUI,aAAIpU,aAAqB4T,IAlBnC,yBAAAmB,EAAAP,SAAA2H,GAAA,eAsBO,SAAUN,KAAV,OAAAhI,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OACL,OADKmB,EAAAnB,KAAA,EACCsB,aAAUhjB,KAAgBkN,IAD3B,wBAAA2V,EAAAX,SAAA4H,IAIA,SAAUN,KAAV,OAAAjI,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OACL,OADKqB,EAAArB,KAAA,EACCsB,aAAU5iB,KAAkBuM,IAD7B,wBAAAoW,EAAAb,SAAA6H,IAGA,SAAUN,KAAV,OAAAlI,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OACL,OADKwB,EAAAxB,KAAA,EACCsB,aAAU/iB,KAAWuM,IADtB,wBAAA0W,EAAAhB,SAAA8H,IAIP,SAAUN,KAAV,OAAAnI,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OACE,OADF0B,EAAA1B,KAAA,EACQ5O,aAAI,CACR2Q,aAAK8F,IACL9F,aAAK+F,IACL/F,aAAKgG,MAJT,wBAAArG,EAAAlB,SAAA+H,IAQeP,gCC9GL9a,iBA6BOuZ,iBAIP+B,IAjCV,SAAUtb,GAAVwI,GAAA,IAAA+S,EAAAhK,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OASyB,OATeyI,EAAxC/S,EAA+B3T,QAErB0c,EAAU,CACZwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,qBAAAtO,OAAuBuY,IALlC1I,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAS+B7W,KAAMsV,GATrC,OAUQ,OADME,EATdoB,EAAAI,KAAAJ,EAAAC,KAAA,EAUcI,aAAIjT,aAAkBwR,EAAS3c,OAV7C,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAegBP,EAAAM,GAAM1B,SAASR,OAf/B4B,EAAAC,KAgBiB,MAhBjBD,EAAAO,GAAA,GAmBiB,MAnBjBP,EAAAO,GAAA,2BAiBgBV,EAAU,yDAjB1BG,EAAAQ,OAAA,2BAoBgBX,EAAU,6CApB1BG,EAAAQ,OAAA,oBAuBgBX,EAAOG,EAAAM,GAvBvB,QAyBQ,OAzBRN,EAAAC,KAAA,GAyBcI,aAAIhT,aAAiBwS,IAzBnC,yBAAAG,EAAAS,SAAAkI,GAAA,eA6BO,SAAUjC,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OACH,OADGW,EAAAX,KAAA,EACGsB,aAAUja,KAAa6F,IAD1B,wBAAAyT,EAAAH,SAAAmI,IAIP,SAAUH,KAAV,OAAA3I,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACI,OADJe,EAAAf,KAAA,EACU5O,aAAI,CAAC2Q,aAAK0E,MADpB,wBAAA1F,EAAAP,SAAAoI,IAIeJ,gCCpCLK,iBA4BOpC,iBAIPqC,IAhCV,SAAUD,GAAVnT,GAAA,IAAAlI,EAAAiR,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQyB,OARgBxS,EAAzCkI,EAAgC3T,QACtB0c,EAAU,CACZwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,wCAAAtO,OAA0C1C,IAJrDuS,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ+B7W,KAAMsV,GARrC,OASQ,OADME,EARdoB,EAAAI,KAAAJ,EAAAC,KAAA,EAScI,aAAI9S,aAAqBqR,EAAS3c,OAThD,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAcgBP,EAAAM,GAAM1B,SAASR,OAd/B4B,EAAAC,KAeiB,MAfjBD,EAAAO,GAAA,GAkBiB,MAlBjBP,EAAAO,GAAA,2BAgBgBV,EAAU,yDAhB1BG,EAAAQ,OAAA,2BAmBgBX,EAAU,6CAnB1BG,EAAAQ,OAAA,oBAsBgBX,EAAOG,EAAAM,GAtBvB,QAwBQ,OAxBRN,EAAAC,KAAA,GAwBcI,aAAI7S,aAAoBqS,IAxBtC,yBAAAG,EAAAS,SAAAuI,GAAA,eA4BO,SAAUtC,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OACH,OADGW,EAAAX,KAAA,EACGsB,aAAUpa,KAAW2hB,IADxB,wBAAAlI,EAAAH,SAAAwI,IAIP,SAAUF,KAAV,OAAAjJ,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACI,OADJe,EAAAf,KAAA,EACU5O,aAAI,CAAC2Q,aAAK0E,MADpB,wBAAA1F,EAAAP,SAAAyI,IAIeH,gCCjBLzlB,iBA6BAH,iBAiBAM,iBAoBA0lB,iBAkBAvlB,iBAqBAZ,iBAiBO0jB,iBAIA0C,iBAIAC,iBAIAC,iBAIAC,iBAIAC,iBAIPC,IAlJV,SAAUnmB,GAAVqS,GAAA,IAAA+I,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OASqB,OATrBtK,EAA4B3T,QAEpB0c,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,wBALPuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVoB,EAAAI,KAAAJ,EAAAC,KAAA,EAUUI,aAAI9c,aAAuBqb,EAAS3c,OAV9C,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAeYP,EAAAM,GAAM1B,SAASR,OAf3B4B,EAAAC,KAgBW,MAhBXD,EAAAO,GAAA,GAmBW,MAnBXP,EAAAO,GAAA,2BAiBQV,EAAU,yDAjBlBG,EAAAQ,OAAA,2BAoBQX,EAAU,6CApBlBG,EAAAQ,OAAA,oBAuBQX,EAAOG,EAAAM,GAvBf,QAyBI,OAzBJN,EAAAC,KAAA,GAyBUI,aAAI7c,aAAsBqc,IAzBpC,yBAAAG,EAAAS,SAAAiJ,GAAA,eA6BA,SAAUvmB,GAAVwd,GAAA,IAAAzc,EAAAwa,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OASqB,OATgB/b,EAArCyc,EAA4B3e,QAEpB0c,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,mBAAAtO,OAAqBjM,IAL5B0c,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVgC,EAAAR,KAAAQ,EAAAX,KAAA,EAUUI,aAAIjd,aAAuBwb,EAAS3c,OAV9C,OAAA2e,EAAAX,KAAA,iBAcI,OAdJW,EAAArD,KAAA,GAAAqD,EAAAN,GAAAM,EAAA,SAaIf,EAAUe,EAAAN,GAAM1B,SAAS3c,KAb7B2e,EAAAX,KAAA,GAcUI,aAAIhd,aAAsBwc,IAdpC,yBAAAe,EAAAH,SAAAkJ,GAAA,eAiBA,SAAUlmB,GAAVqd,GAAA,IAAAC,EAAA5c,EAAAC,EAAAsa,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OAUqB,OAVrBc,EAAAD,EAA2B9e,QAAWmC,EAAtC4c,EAAsC5c,IAAKC,EAA3C2c,EAA2C3c,iBAEnCsa,EAAU,CACdwB,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,mBACHxc,KAAM,CAAEE,YAAagC,EAAKylB,eAAgBxlB,IAN9C4c,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAU2B7W,KAAMsV,GAVjC,OAWI,OADME,EAVVoC,EAAAZ,KAAAY,EAAAf,KAAA,EAWUI,aAAI3c,aAAsBkb,EAAS3c,OAX7C,OAAA+e,EAAAf,KAAA,iBAeI,OAfJe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAcInB,EAAUmB,EAAAV,GAAM1B,SAAS3c,KAd7B+e,EAAAf,KAAA,GAeUI,aAAI1c,aAAqBkc,IAfnC,yBAAAmB,EAAAP,SAAAoJ,GAAA,eAoBA,SAAUV,GAAVhI,GAAA,IAAA2I,EAAA9lB,EAAAC,EAAAya,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OASqB,OATrB6J,EAAA3I,EAA+Bnf,QAAWgC,EAA1C8lB,EAA0C9lB,cAAeC,EAAzD6lB,EAAyD7lB,aACjDya,EAAU,CACdwB,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,2BACHxc,KAAM,CAAE+B,gBAAeC,iBAL3Bmd,EAAA7D,KAAA,EAAA6D,EAAAnB,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVwC,EAAAhB,KAAAgB,EAAAnB,KAAA,EAUUI,aAAIvd,aAA8B8b,EAAS3c,OAVrD,OAAAmf,EAAAnB,KAAA,iBAcI,OAdJmB,EAAA7D,KAAA,GAAA6D,EAAAd,GAAAc,EAAA,SAaIvB,EAAUuB,EAAAd,GAAM1B,SAAS3c,KAb7Bmf,EAAAnB,KAAA,GAcUI,aAAItd,aAA6B8c,IAd3C,yBAAAuB,EAAAX,SAAAsJ,GAAA,eAkBA,SAAUnmB,GAAVomB,GAAA,IAAAhoB,EAAA0c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OAYqB,OAZKje,EAA1BgoB,EAA0BhoB,QAIlB0c,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,mBACHxc,KAAMD,GARVsf,EAAA/D,KAAA,EAAA+D,EAAArB,KAAA,EAY2B7W,KAAMsV,GAZjC,OAaI,OADME,EAZV0C,EAAAlB,KAAAkB,EAAArB,KAAA,EAaUI,aAAIxc,aAAqB+a,EAAS3c,OAb5C,OAAAqf,EAAArB,KAAA,iBAiBI,OAjBJqB,EAAA/D,KAAA,GAAA+D,EAAAhB,GAAAgB,EAAA,SAgBIzB,EAAUyB,EAAAhB,GAAM1B,SAAS3c,KAhB7Bqf,EAAArB,KAAA,GAiBUI,aAAIvc,aAAoB+b,IAjBlC,yBAAAyB,EAAAb,SAAAwJ,GAAA,eAqBA,SAAUjnB,KAAV,IAAA0b,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OAQqB,OAPbvB,EAAU,CACdwB,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,yCAJPgD,EAAAlE,KAAA,EAAAkE,EAAAxB,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARV6C,EAAArB,KAAAqB,EAAAxB,KAAA,EASUI,aAAIpd,aAA2B2b,EAAS3c,OATlD,OAAAwf,EAAAxB,KAAA,gBAaI,OAbJwB,EAAAlE,KAAA,EAAAkE,EAAAnB,GAAAmB,EAAA,SAYI5B,EAAU4B,EAAAnB,GAAM1B,SAAS3c,KAAKuZ,IAZlCiG,EAAAxB,KAAA,GAaUI,aAAInd,aAA0B2c,IAbxC,yBAAA4B,EAAAhB,SAAAyJ,GAAA,cAiBO,SAAUxD,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OACL,OADK0B,EAAA1B,KAAA,EACCsB,aAAUhmB,KAAmB+H,IAD9B,wBAAAqe,EAAAlB,SAAA0J,IAIA,SAAUf,KAAV,OAAAtJ,GAAA9R,EAAA+R,KAAA,SAAA8B,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA5B,MAAA,OACL,OADK4B,EAAA5B,KAAA,EACCsB,aAAU7lB,KAAoByH,IAD/B,wBAAA0e,EAAApB,SAAA2J,IAIA,SAAUf,KAAV,OAAAvJ,GAAA9R,EAAA+R,KAAA,SAAAgC,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA9B,MAAA,OACL,OADK8B,EAAA9B,KAAA,EACCsB,aAAU1lB,KAAiB4H,IAD5B,wBAAAse,EAAAtB,SAAA4J,IAIA,SAAUf,KAAV,OAAAxJ,GAAA9R,EAAA+R,KAAA,SAAAmE,GAAA,cAAAA,EAAA3G,KAAA2G,EAAAjE,MAAA,OACL,OADKiE,EAAAjE,KAAA,EACCsB,aAAUvlB,KAAgB4H,IAD3B,wBAAAsgB,EAAAzD,SAAA6J,IAIA,SAAUf,KAAV,OAAAzJ,GAAA9R,EAAA+R,KAAA,SAAAqE,GAAA,cAAAA,EAAA7G,KAAA6G,EAAAnE,MAAA,OACL,OADKmE,EAAAnE,KAAA,EACCsB,aAAUplB,KAAuB6G,IADlC,wBAAAohB,EAAA3D,SAAA8J,IAIA,SAAUf,KAAV,OAAA1J,GAAA9R,EAAA+R,KAAA,SAAAuE,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArE,MAAA,OACL,OADKqE,EAAArE,KAAA,EACCsB,aAAUhlB,KAA0B4sB,IADrC,wBAAA7E,EAAA7D,SAAA+J,IAIP,SAAUf,KAAV,OAAA3J,GAAA9R,EAAA+R,KAAA,SAAAyE,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAvE,MAAA,OACE,OADFuE,EAAAvE,KAAA,EACQ5O,aAAI,CACR2Q,aAAK0E,IACL1E,aAAKoH,IACLpH,aAAKqH,IACLrH,aAAKsH,IACLtH,aAAKuH,IACLvH,aAAKwH,MAPT,wBAAAhF,EAAA/D,SAAAgK,IAWehB,gCCjJLiB,iBA8BAC,iBA6BAC,iBA6BAtpB,iBA4BAupB,iBA8BAC,iBAkCAtqB,iBAmCAG,iBA6BAG,iBAsCAiqB,iBA+BOrE,iBAGAsE,iBAIAC,iBAGAC,iBAGAC,iBAIAC,iBAIAC,iBAIAC,iBAGAC,iBAIAC,iBAGPC,IA5VV,SAAUf,GAAV/U,GAAA,IAAA7T,EAAA4c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAUqB,OAViBne,EAAtC6T,EAA6B3T,QAErB0c,EAAU,CACdwB,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,yBACHxc,KAAMH,GANVke,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAU2B7W,KAAMsV,GAVjC,OAWI,OADME,EAVVoB,EAAAI,KAAAJ,EAAAC,KAAA,EAWUI,aAAIrgB,aAAoB4e,EAAS3c,OAX3C,OAAA+d,EAAAC,KAAA,iBAAAD,EAAAzC,KAAA,GAAAyC,EAAAM,GAAAN,EAAA,SAAAA,EAAAO,GAgBYP,EAAAM,GAAM1B,SAASR,OAhB3B4B,EAAAC,KAiBW,MAjBXD,EAAAO,GAAA,GAoBW,MApBXP,EAAAO,GAAA,2BAkBQV,EAAU,yDAlBlBG,EAAAQ,OAAA,2BAqBQX,EAAU,6CArBlBG,EAAAQ,OAAA,oBAwBQX,EAAOG,EAAAM,GAxBf,QA0BI,OA1BJN,EAAAC,KAAA,GA0BUI,aAAIpgB,aAAmB4f,IA1BjC,yBAAAG,EAAAS,SAAAiL,GAAA,eA8BA,SAAUf,GAAVhK,GAAA,IAAAxe,EAAAuc,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OASqB,OATuB9d,EAA5Cwe,EAAmC3e,QACjCkH,QAAQ4R,IAAI,qCAAsC3Y,GAC5Cuc,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,uBAAAtO,OAAyBhO,IALhCye,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVgC,EAAAR,KAAAQ,EAAAX,KAAA,EAUUI,aAAIlgB,aAA0Bye,EAAS3c,OAVjD,OAAA2e,EAAAX,KAAA,iBAAAW,EAAArD,KAAA,GAAAqD,EAAAN,GAAAM,EAAA,SAAAA,EAAAL,GAeYK,EAAAN,GAAM1B,SAASR,OAf3BwC,EAAAX,KAgBW,MAhBXW,EAAAL,GAAA,GAmBW,MAnBXK,EAAAL,GAAA,2BAiBQV,EAAU,yDAjBlBe,EAAAJ,OAAA,2BAoBQX,EAAU,6CApBlBe,EAAAJ,OAAA,oBAuBQX,EAAOe,EAAAN,GAvBf,QAyBI,OAzBJM,EAAAX,KAAA,GAyBUI,aAAIjgB,aAAyByf,IAzBvC,yBAAAe,EAAAH,SAAAkL,GAAA,eA6BA,SAAUf,GAAV9J,GAAA,IAAApC,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OASqB,OATrBa,EAAwB9e,QAEhB0c,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,uBALPuC,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVoC,EAAAZ,KAAAY,EAAAf,KAAA,EAUUI,aAAIjf,aAAmBwd,EAAS3c,OAV1C,OAAA+e,EAAAf,KAAA,iBAAAe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAAAA,EAAAT,GAeYS,EAAAV,GAAM1B,SAASR,OAf3B4C,EAAAf,KAgBW,MAhBXe,EAAAT,GAAA,GAmBW,MAnBXS,EAAAT,GAAA,2BAiBQV,EAAU,yDAjBlBmB,EAAAR,OAAA,2BAoBQX,EAAU,6CApBlBmB,EAAAR,OAAA,oBAuBQX,EAAOmB,EAAAV,GAvBf,QAyBI,OAzBJU,EAAAf,KAAA,GAyBUI,aAAIhf,aAAkBwe,IAzBhC,yBAAAmB,EAAAP,SAAAmL,GAAA,eA6BA,SAAUtqB,KAAV,IAAAod,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OAQqB,OAPbvB,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,2BAJP2C,EAAA7D,KAAA,EAAA6D,EAAAnB,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVwC,EAAAhB,KAAAgB,EAAAnB,KAAA,EASUI,aAAI9e,aAAmBqd,EAAS3c,OAT1C,OAAAmf,EAAAnB,KAAA,gBAAAmB,EAAA7D,KAAA,EAAA6D,EAAAd,GAAAc,EAAA,SAAAA,EAAAb,GAcYa,EAAAd,GAAM1B,SAASR,OAd3BgD,EAAAnB,KAeW,MAfXmB,EAAAb,GAAA,GAkBW,MAlBXa,EAAAb,GAAA,2BAgBQV,EAAU,yDAhBlBuB,EAAAZ,OAAA,2BAmBQX,EAAU,2BAnBlBuB,EAAAZ,OAAA,oBAsBQX,EAAOuB,EAAAd,GAtBf,QAwBI,OAxBJc,EAAAnB,KAAA,GAwBUI,aAAI7e,aAAkBqe,IAxBhC,yBAAAuB,EAAAX,SAAAoL,GAAA,cA4BA,SAAUhB,GAAV1J,GAAA,IAAAve,EAAA8b,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OAQqB,OARiBrd,EAAtCue,EAA2Bnf,QAAWY,OAC9B8b,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,oCAAAtO,OAAsCvN,IAJ7C0e,EAAA/D,KAAA,EAAA+D,EAAArB,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARV0C,EAAAlB,KAAAkB,EAAArB,KAAA,EASUI,aAAI3e,aAA4Bkd,EAAS3c,OATnD,OAAAqf,EAAArB,KAAA,iBAAAqB,EAAA/D,KAAA,GAAA+D,EAAAhB,GAAAgB,EAAA,SAAAA,EAAAf,GAcYe,EAAAhB,GAAM1B,SAASR,OAd3BkD,EAAArB,KAeW,MAfXqB,EAAAf,GAAA,GAkBW,MAlBXe,EAAAf,GAAA,2BAgBQV,EAAU,yDAhBlByB,EAAAd,OAAA,2BAmBQX,EAAU,2BAnBlByB,EAAAd,OAAA,oBAsBQX,EAAUyB,EAAAhB,GAAM1B,SAAS3c,KAAKuZ,IAtBtC,QAwBI,OAxBJ8F,EAAArB,KAAA,GAwBUI,aAAI1e,aAA2Bke,IAxBzC,yBAAAyB,EAAAb,SAAAqL,GAAA,eA8BA,SAAUhB,GAAVd,GAAA,IAAAhoB,EAAA0c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OAWqB,OAXEje,EAAvBgoB,EAAuBhoB,QAGf0c,EAAU,CACdzc,KAAMD,EACNke,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,qCAPPgD,EAAAlE,KAAA,EAAAkE,EAAAxB,KAAA,EAW2B7W,KAAMsV,GAXjC,OAaI,OAFME,EAXV6C,EAAArB,KAAAqB,EAAAxB,KAAA,EAaUI,aAAI/f,aAA0Bse,EAAS3c,OAbjD,OAAAwf,EAAAxB,KAAA,iBAAAwB,EAAAlE,KAAA,GAAAkE,EAAAnB,GAAAmB,EAAA,SAAAA,EAAAlB,GAiBYkB,EAAAnB,GAAMlC,OAjBlBqD,EAAAxB,KAkBW,MAlBXwB,EAAAlB,GAAA,GAqBW,MArBXkB,EAAAlB,GAAA,2BAmBQV,EAAU,wBAnBlB4B,EAAAjB,OAAA,2BAsBQX,EAAU,sBAtBlB4B,EAAAjB,OAAA,oBAyBQX,EAAU4B,EAAAnB,GAAM1B,SAAS3c,KAAKuZ,IAzBtC,QA2BI,OA3BJiG,EAAAxB,KAAA,GA2BUI,aAAI9f,aAAyBsf,IA3BvC,yBAAA4B,EAAAhB,SAAAsL,GAAA,eAkCA,SAAUvrB,GAAVwrB,GAAA,IAAAhqB,EAAAO,EAAAC,EAAAkc,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OAiBqB,OAjBQje,EAA7BgqB,EAA6BhqB,QACnBO,EAA2BP,EAA3BO,OAAQC,EAAmBR,EAAnBQ,eAEVkc,EAAU,CACdzc,KAAMM,EACN2d,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,kBAAAtO,OACkB,IAAnB3N,EACI,uBACmB,IAAnBA,EACA,wBACA,kBAZVmf,EAAApE,KAAA,EAAAoE,EAAA1B,KAAA,EAiB2B7W,KAAMsV,GAjBjC,OAkBI,OADME,EAjBV+C,EAAAvB,KAAAuB,EAAA1B,KAAA,EAkBUI,aAAI5f,aAAwBme,EAAS3c,OAlB/C,OAAA0f,EAAA1B,KAAA,iBAAA0B,EAAApE,KAAA,GAAAoE,EAAArB,GAAAqB,EAAA,SAAAA,EAAApB,GAqBYoB,EAAArB,GAAMlC,OArBlBuD,EAAA1B,KAsBW,MAtBX0B,EAAApB,GAAA,GAyBW,MAzBXoB,EAAApB,GAAA,2BAuBQV,EAAU,wBAvBlB8B,EAAAnB,OAAA,2BA0BQX,EAAU,sBA1BlB8B,EAAAnB,OAAA,oBA6BQX,EAAU8B,EAAArB,GAAM1B,SAAS3c,KAAKuZ,IA7BtC,QA+BI,OA/BJmG,EAAA1B,KAAA,GA+BUI,aAAI3f,aAAuBmf,IA/BrC,yBAAA8B,EAAAlB,SAAAwL,GAAA,eAmCA,SAAUtrB,GAAVurB,GAAA,IAAAlqB,EAAA0c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAA8B,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA5B,MAAA,OAUqB,OAVKje,EAA1BkqB,EAA0BlqB,QAElB0c,EAAU,CACdzc,KAAMD,EACNke,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,oCANPoD,EAAAtE,KAAA,EAAAsE,EAAA5B,KAAA,EAU2B7W,KAAMsV,GAVjC,OAWI,OADME,EAVViD,EAAAzB,KAAAyB,EAAA5B,KAAA,EAWUI,aAAIzf,aAAqBge,EAAS3c,OAX5C,OAAA4f,EAAA5B,KAAA,iBAAA4B,EAAAtE,KAAA,GAAAsE,EAAAvB,GAAAuB,EAAA,SAAAA,EAAAtB,GAcYsB,EAAAvB,GAAMlC,OAdlByD,EAAA5B,KAeW,MAfX4B,EAAAtB,GAAA,GAkBW,MAlBXsB,EAAAtB,GAAA,2BAgBQV,EAAU,wBAhBlBgC,EAAArB,OAAA,2BAmBQX,EAAU,sBAnBlBgC,EAAArB,OAAA,oBAsBQX,EAAUgC,EAAAvB,GAAM1B,SAAS3c,KAAKuZ,IAtBtC,QAwBI,OAxBJqG,EAAA5B,KAAA,GAwBUI,aAAIxf,aAAoBgf,IAxBlC,yBAAAgC,EAAApB,SAAA0L,GAAA,eA6BA,SAAUrrB,GAAVsrB,GAAA,IAAApqB,EAAAG,EAAAO,EAAAgc,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAgC,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA9B,MAAA,OAkBqB,OAlBKje,EAA1BoqB,EAA0BpqB,QAChBG,EAA2BH,EAA3BG,YAAaO,EAAcV,EAAdU,UACfgc,EAAU,CACdzc,KAAME,EACN+d,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,kBAAAtO,OACa,IAAdzN,EACI,oBACc,IAAdA,EACA,iBACc,IAAdA,EACA,oBACA,6BAbVqf,EAAAxE,KAAA,EAAAwE,EAAA9B,KAAA,EAkB2B7W,KAAMsV,GAlBjC,OAmBI,OADME,EAlBVmD,EAAA3B,KAAA2B,EAAA9B,KAAA,EAmBUI,aAAItf,aAAqB6d,EAAS3c,OAnB5C,OAAA8f,EAAA9B,KAAA,iBAAA8B,EAAAxE,KAAA,GAAAwE,EAAAzB,GAAAyB,EAAA,SAAAA,EAAAxB,GAsBYwB,EAAAzB,GAAMlC,OAtBlB2D,EAAA9B,KAuBW,MAvBX8B,EAAAxB,GAAA,GA0BW,MA1BXwB,EAAAxB,GAAA,2BAwBQV,EAAU,wBAxBlBkC,EAAAvB,OAAA,2BA2BQX,EAAU,sBA3BlBkC,EAAAvB,OAAA,oBA8BQX,EAAUkC,EAAAzB,GAAM1B,SAAS3c,KAAKuZ,IA9BtC,QAgCI,OAhCJuG,EAAA9B,KAAA,GAgCUI,aAAIrf,aAAoB6e,IAhClC,yBAAAkC,EAAAtB,SAAA4L,GAAA,eAsCA,SAAUtB,GAAVuB,GAAA,IAAAtqB,EAAA0c,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAmE,GAAA,cAAAA,EAAA3G,KAAA2G,EAAAjE,MAAA,OAWqB,OAXIje,EAAzBsqB,EAAyBtqB,QAGjB0c,EAAU,CACdzc,KAAMD,EACNke,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,uCAPPyF,EAAA3G,KAAA,EAAA2G,EAAAjE,KAAA,EAW2B7W,KAAMsV,GAXjC,OAaI,OAFME,EAXVsF,EAAA9D,KAAA8D,EAAAjE,KAAA,EAaUI,aAAInf,aAA4B0d,EAAS3c,OAbnD,OAAAiiB,EAAAjE,KAAA,iBAAAiE,EAAA3G,KAAA,GAAA2G,EAAA5D,GAAA4D,EAAA,SAAAA,EAAA3D,GAiBY2D,EAAA5D,GAAMlC,OAjBlB8F,EAAAjE,KAkBW,MAlBXiE,EAAA3D,GAAA,GAqBW,MArBX2D,EAAA3D,GAAA,2BAmBQV,EAAU,wBAnBlBqE,EAAA1D,OAAA,2BAsBQX,EAAU,sBAtBlBqE,EAAA1D,OAAA,oBAyBQX,EAAUqE,EAAA5D,GAAM1B,SAAS3c,KAAKuZ,IAzBtC,QA2BI,OA3BJ0I,EAAAjE,KAAA,GA2BUI,aAAIlf,aAA2B0e,IA3BzC,yBAAAqE,EAAAzD,SAAA8L,GAAA,eA+BO,SAAU7F,KAAV,OAAA5G,GAAA9R,EAAA+R,KAAA,SAAAqE,GAAA,cAAAA,EAAA7G,KAAA6G,EAAAnE,MAAA,OACL,OADKmE,EAAAnE,KAAA,EACCsB,aAAU/nB,KAAekxB,IAD1B,wBAAAtG,EAAA3D,SAAA+L,IAGA,SAAUxB,KAAV,OAAAlL,GAAA9R,EAAA+R,KAAA,SAAAuE,GAAA,cAAAA,EAAA/G,KAAA+G,EAAArE,MAAA,OACL,OADKqE,EAAArE,KAAA,EACCsB,aAAUhnB,KAAsBowB,IADjC,wBAAArG,EAAA7D,SAAAgM,IAIA,SAAUxB,KAAV,OAAAnL,GAAA9R,EAAA+R,KAAA,SAAAyE,GAAA,cAAAA,EAAAjH,KAAAiH,EAAAvE,MAAA,OACL,OADKuE,EAAAvE,KAAA,EACCsB,aAAUtnB,KAAe2wB,IAD1B,wBAAApG,EAAA/D,SAAAiM,IAGA,SAAUxB,KAAV,OAAApL,GAAA9R,EAAA+R,KAAA,SAAA2E,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAzE,MAAA,OACL,OADKyE,EAAAzE,KAAA,EACCsB,aAAUnnB,KAAckH,IADzB,wBAAAojB,EAAAjE,SAAAkM,IAGA,SAAUxB,KAAV,OAAArL,GAAA9R,EAAA+R,KAAA,SAAA6E,GAAA,cAAAA,EAAArH,KAAAqH,EAAA3E,MAAA,OACL,OADK2E,EAAA3E,KAAA,EACCsB,aAAUnmB,KAAwByvB,IADnC,wBAAAjG,EAAAnE,SAAAmM,IAIA,SAAUxB,KAAV,OAAAtL,GAAA9R,EAAA+R,KAAA,SAAA8M,GAAA,cAAAA,EAAAtP,KAAAsP,EAAA5M,MAAA,OACL,OADK4M,EAAA5M,KAAA,EACCsB,aAAU5nB,KAAsBmxB,IADjC,wBAAA+B,EAAApM,SAAAqM,IAIA,SAAUzB,KAAV,OAAAvL,GAAA9R,EAAA+R,KAAA,SAAAgN,GAAA,cAAAA,EAAAxP,KAAAwP,EAAA9M,MAAA,OACL,OADK8M,EAAA9M,KAAA,EACCsB,aAAU7mB,KAAmB8F,IAD9B,wBAAAusB,EAAAtM,SAAAuM,IAIA,SAAU1B,KAAV,OAAAxL,GAAA9R,EAAA+R,KAAA,SAAAkN,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAhN,MAAA,OACL,OADKgN,EAAAhN,KAAA,EACCsB,aAAUzmB,KAAgB6F,IAD3B,wBAAAssB,EAAAxM,SAAAyM,IAGA,SAAU3B,KAAV,OAAAzL,GAAA9R,EAAA+R,KAAA,SAAAoN,GAAA,cAAAA,EAAA5P,KAAA4P,EAAAlN,MAAA,OACL,OADKkN,EAAAlN,KAAA,EACCsB,aAAUtmB,KAAgB6F,IAD3B,wBAAAqsB,EAAA1M,SAAA2M,IAIA,SAAU5B,KAAV,OAAA1L,GAAA9R,EAAA+R,KAAA,SAAAsN,GAAA,cAAAA,EAAA9P,KAAA8P,EAAApN,MAAA,OACL,OADKoN,EAAApN,KAAA,EACCsB,aAAUznB,KAAwBixB,IADnC,wBAAAsC,EAAA5M,SAAA6M,IAGP,SAAU7B,KAAV,OAAA3L,GAAA9R,EAAA+R,KAAA,SAAAwN,GAAA,cAAAA,EAAAhQ,KAAAgQ,EAAAtN,MAAA,OACE,OADFsN,EAAAtN,KAAA,EACQ5O,aAAI,CACR2Q,aAAK0E,IACL1E,aAAKgJ,IACLhJ,aAAKoJ,IACLpJ,aAAKwJ,IACLxJ,aAAKiJ,IACLjJ,aAAKkJ,IACLlJ,aAAKqJ,IACLrJ,aAAKsJ,IACLtJ,aAAKuJ,IACLvJ,aAAKmJ,MAXT,wBAAAoC,EAAA9M,SAAA+M,IAee/B,gCC7XLhgB,iBAkBAgiB,iBAiBAC,iBAkBAC,iBAiBAC,iBAkBOC,iBAIAC,iBAIAC,iBAIAC,iBAIAC,iBAGPC,IA3GV,SAAUziB,KAAV,IAAAiT,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQqB,OAPbvB,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,sBAJTuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVoB,EAAAI,KAAAJ,EAAAC,KAAA,EASUI,aAAI3b,aAAmBka,EAAS3c,OAT1C,OAAA+d,EAAAC,KAAA,gBAcI,OAdJD,EAAAzC,KAAA,EAAAyC,EAAAM,GAAAN,EAAA,SAYIH,EAAUG,EAAAM,GAAM1B,SAAS3c,KAAKuZ,IAZlCwE,EAAAC,KAAA,GAcUI,aAAI1b,aAAkBkb,IAdhC,yBAAAG,EAAAS,SAAA0N,GAAA,cAkBA,SAAUV,GAAV9X,GAAA,IAAAlQ,EAAAiZ,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OAQqB,OAROxa,EAA5BkQ,EAAmB3T,QACX0c,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,qBAAAtO,OAAuB1K,IAJ9Bmb,EAAArD,KAAA,EAAAqD,EAAAX,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVgC,EAAAR,KAAAQ,EAAAX,KAAA,EASUI,aAAIxb,aAAc+Z,EAAS3c,OATrC,OAAA2e,EAAAX,KAAA,iBAaI,OAbJW,EAAArD,KAAA,GAAAqD,EAAAN,GAAAM,EAAA,SAYIf,EAAUe,EAAAN,GAAM1B,SAAS3c,KAAKuZ,IAZlCoF,EAAAX,KAAA,GAaUI,aAAIvb,aAAa+a,IAb3B,yBAAAe,EAAAH,SAAA2N,GAAA,eAiBA,SAAUV,GAAV/M,GAAA,IAAA0N,EAAA5oB,EAAAC,EAAAC,EAAA+Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OASqB,OATrBoO,EAAA1N,EAAmB3e,QAAWyD,EAA9B4oB,EAA8B5oB,QAASC,EAAvC2oB,EAAuC3oB,IAAKC,EAA5C0oB,EAA4C1oB,QACpC+Y,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,mBACLxc,KAAM,CAAEwD,UAASC,MAAKC,YAL1Bqb,EAAAzD,KAAA,EAAAyD,EAAAf,KAAA,EAS2B7W,KAAMsV,GATjC,OAUI,OADME,EATVoC,EAAAZ,KAAAY,EAAAf,KAAA,EAUUI,aAAIrb,aAAc4Z,EAAS3c,OAVrC,OAAA+e,EAAAf,KAAA,iBAcI,OAdJe,EAAAzD,KAAA,GAAAyD,EAAAV,GAAAU,EAAA,SAaInB,EAAUmB,EAAAV,GAAM1B,SAAS3c,KAAKuZ,IAblCwF,EAAAf,KAAA,GAcUI,aAAIpb,aAAa4a,IAd3B,yBAAAmB,EAAAP,SAAA6N,GAAA,eAkBA,SAAUX,GAAV7M,GAAA,IAAAlb,EAAA8Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAqB,GAAA,cAAAA,EAAA7D,KAAA6D,EAAAnB,MAAA,OAQqB,OARcra,EAAnCkb,EAA0B9e,QAClB0c,EAAU,CACdwB,OAAQ,SACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAG,2BAAAtO,OAA6BvK,IAJpCwb,EAAA7D,KAAA,EAAA6D,EAAAnB,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVwC,EAAAhB,KAAAgB,EAAAnB,KAAA,EASUI,aAAIjb,aAA+BwZ,EAAS3c,OATtD,OAAAmf,EAAAnB,KAAA,iBAaI,OAbJmB,EAAA7D,KAAA,GAAA6D,EAAAd,GAAAc,EAAA,SAYIvB,EAAUuB,EAAAd,GAAM1B,SAAS3c,KAAKuZ,IAZlC4F,EAAAnB,KAAA,GAaUI,aAAIhb,aAA8Bwa,IAb5C,yBAAAuB,EAAAX,SAAA8N,GAAA,eAiBA,SAAUX,GAAVzM,GAAA,IAAAtb,EAAA6Y,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAuB,GAAA,cAAAA,EAAA/D,KAAA+D,EAAArB,MAAA,OAUqB,OAVcpa,EAAnCsb,EAA0Bnf,QACxBkH,QAAQ4R,IAAI,gBAAiBjV,GACvB6Y,EAAU,CACdwB,OAAQ,OACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,oBACLxc,KAAM4D,GANVyb,EAAA/D,KAAA,EAAA+D,EAAArB,KAAA,EAU2B7W,KAAMsV,GAVjC,OAWI,OADME,EAVV0C,EAAAlB,KAAAkB,EAAArB,KAAA,EAWUI,aAAI9a,aAA4BqZ,EAAS3c,OAXnD,OAAAqf,EAAArB,KAAA,iBAeI,OAfJqB,EAAA/D,KAAA,GAAA+D,EAAAhB,GAAAgB,EAAA,SAcIzB,EAAUyB,EAAAhB,GAAM1B,SAAS3c,KAAKuZ,IAdlC8F,EAAArB,KAAA,GAeUI,aAAI7a,aAA2Bqa,IAfzC,yBAAAyB,EAAAb,SAAA+N,GAAA,eAkBO,SAAUX,KAAV,OAAA/N,GAAA9R,EAAA+R,KAAA,SAAA0B,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAxB,MAAA,OACL,OADKwB,EAAAxB,KAAA,EACCsB,aAAU7kB,KAAe+O,IAD1B,wBAAAgW,EAAAhB,SAAAgO,IAIA,SAAUX,KAAV,OAAAhO,GAAA9R,EAAA+R,KAAA,SAAA4B,GAAA,cAAAA,EAAApE,KAAAoE,EAAA1B,MAAA,OACL,OADK0B,EAAA1B,KAAA,EACCsB,aAAU1kB,KAAS4wB,IADpB,wBAAA9L,EAAAlB,SAAAiO,IAIA,SAAUX,KAAV,OAAAjO,GAAA9R,EAAA+R,KAAA,SAAA8B,GAAA,cAAAA,EAAAtE,KAAAsE,EAAA5B,MAAA,OACL,OADK4B,EAAA5B,KAAA,EACCsB,aAAUvkB,KAAmB0wB,IAD9B,wBAAA7L,EAAApB,SAAAkO,IAIA,SAAUX,KAAV,OAAAlO,GAAA9R,EAAA+R,KAAA,SAAAgC,GAAA,cAAAA,EAAAxE,KAAAwE,EAAA9B,MAAA,OACL,OADK8B,EAAA9B,KAAA,EACCsB,aAAUnkB,KAAoBuwB,IAD/B,wBAAA5L,EAAAtB,SAAAmO,IAIA,SAAUX,KAAV,OAAAnO,GAAA9R,EAAA+R,KAAA,SAAAmE,GAAA,cAAAA,EAAA3G,KAAA2G,EAAAjE,MAAA,OACL,OADKiE,EAAAjE,KAAA,EACCsB,aAAUhkB,KAAiBqwB,IAD5B,wBAAA1J,EAAAzD,SAAAoO,IAGP,SAAUX,KAAV,OAAApO,GAAA9R,EAAA+R,KAAA,SAAAqE,GAAA,cAAAA,EAAA7G,KAAA6G,EAAAnE,MAAA,OACE,OADFmE,EAAAnE,KAAA,EACQ5O,aAAI,CACR2Q,aAAK6L,IACL7L,aAAK8L,IACL9L,aAAK+L,IACL/L,aAAKgM,IACLhM,aAAKiM,MANT,wBAAA7J,EAAA3D,SAAAqO,IAUeZ,gCCvILvgB,iBAiBOohB,iBAIPC,IArBV,SAAUrhB,KAAV,IAAA+Q,EAAAE,EAAAiB,EAAA,OAAAC,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OAQqB,OAPbvB,EAAU,CACdwB,OAAQ,MACR5W,QAAS,CAAE6W,eAAgB,oBAC3B1B,IAAK,8BAJTuB,EAAAzC,KAAA,EAAAyC,EAAAC,KAAA,EAQ2B7W,KAAMsV,GARjC,OASI,OADME,EARVoB,EAAAI,KAAAJ,EAAAC,KAAA,EASUI,aAAIzS,aAAoBgR,EAAS3c,OAT3C,OAAA+d,EAAAC,KAAA,gBAaI,OAbJD,EAAAzC,KAAA,EAAAyC,EAAAM,GAAAN,EAAA,SAYIH,EAAUG,EAAAM,GAAM1B,SAAS3c,KAAKuZ,IAZlCwE,EAAAC,KAAA,GAaUI,aAAIxS,aAAmBgS,IAbjC,yBAAAG,EAAAS,SAAAwO,GAAA,cAiBO,SAAUF,KAAV,OAAAjP,GAAA9R,EAAA+R,KAAA,SAAAa,GAAA,cAAAA,EAAArD,KAAAqD,EAAAX,MAAA,OACL,OADKW,EAAAX,KAAA,EACCsB,aAAUzb,KAAgB6H,IAD3B,wBAAAiT,EAAAH,SAAAyO,IAIP,SAAUF,KAAV,OAAAlP,GAAA9R,EAAA+R,KAAA,SAAAiB,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAf,MAAA,OACE,OADFe,EAAAf,KAAA,EACQ5O,aAAI,CAAC2Q,aAAK+M,MADlB,wBAAA/N,EAAAP,SAAA0O,IAIeH,uBCjBUI,IAAV,SAAUA,GAASC,GAAnB,OAAAvP,GAAA9R,EAAA+R,KAAA,SAAAC,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAC,MAAA,OACb,OADaD,EAAAC,KAAA,EACP5O,aAAI,CACRiO,KACAgQ,KACAhK,KACAqB,KACA4I,KACAjI,KACAW,KACAQ,KACAM,KACAU,KACAgC,KACAyC,KACAc,OAdW,wBAAAhP,EAAAS,SAAA+O,ICTf,IAAMC,GAAiBC,eACjBC,GAAc,CAACF,ICCrBG,IAASphB,OACLT,EAAAC,EAAAC,cAAC4hB,EAAA,EAAD,CAAUC,MDAP,SAAwBC,GAC3B,IAAMC,EAAmBjX,OAAOkX,sCAAwCC,KAElEJ,EAAQK,aAAYC,GAAUL,EAAcC,EAAiBK,KAAengB,WAAf,EAAmByf,MAEtF,OADAF,GAAea,IAAIC,IACZT,ECLUU,IACbziB,EAAAC,EAAAC,cAACwiB,GAAD,OAEJ1N,SAAS2N,eAAe,ShC8GpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMviB,KAAK,SAAAwiB,GAC/BA,EAAaC","file":"static/js/main.0213d3ca.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS = \"GET_SERVICE_STATISTICS\";\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = \"GET_SERVICE_STATISTICS_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_FAILED = \"GET_SERVICE_STATISTICS_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    //console.log(\"setAuthToken\", token);\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        setAuthToken(user.token);\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    //console.log('getLoggedInUser', user);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA,\r\n    payload: dataType,\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_SUCCESS,\r\n    payload: records,\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const editRecord = (dataType: string, record: FormData): OfflineCsAction => ({\r\n    type: EDIT_RECORD,\r\n    payload: { dataType, record },\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n    type: EDIT_RECORD_SUCCESS,\r\n    payload: result.affectedId,\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n    type: EDIT_RECORD_FAILED,\r\n    payload: errors,\r\n});\r\nexport const getCurrentRecord = (dataType: string, record_id: int, history: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT,\r\n    payload: { dataType, record_id, history },\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT_SUCCESS,\r\n    payload: record,\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_CURRENT_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (account: string, password: string): PlatformAction => ({\n    type: UPDATE_PASSWORD,\n    payload: { account, password },\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n    type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n    type: UPDATE_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n    type: GET_USERS,\r\n    payload: role,\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users,\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n    type: GET_USERS_FAILED,\r\n    payload: error,\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\nconst CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\n//*add new\nconst AdminDashboard = React.lazy(() => import('../pages/dashboards/Admin'));\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/ProjectDetail'));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\nconst ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n// - kanban\nconst Kanban = React.lazy(() => import('../pages/apps/Kanban/'));\n\n// - email\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/Starter'));\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\n\n// uikit\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst General = React.lazy(() => import('../pages/uikit/General'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n//platform\nconst ModifyPassword = React.lazy(() => import('../pages/platform/ModifyPassword'));\n\n//offline cs\nconst CplCaseHome = React.lazy(() => import('../pages/offline/cpl_case/CplCaseHome'));\nconst GovLetterHome = React.lazy(() => import('../pages/offline/gov_letter/GovLetterHome'));\nconst PersonalVisitHome = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitHome'));\nconst PersonalVisitForm = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitForm'));\n\nconst GovLetterForm = React.lazy(() => import('../pages/offline/gov_letter/GovLetterForm'));\n\n\n//service\n\nconst ServiceOverview = React.lazy(() => import('../pages/service/questions/overview'));\nconst ServiceStatistics = React.lazy(() => import('../pages/service/statistics'));\n\nconst AllocateListPage = React.lazy(() => import('../pages/service/allocate'));\nconst QuesionsListPage = React.lazy(() => import('../pages/service/questions'));\nconst SingleQuestionPage = React.lazy(() => import('../pages/service/questions/view'));\n\nconst TestPage = React.lazy(() => import('../pages/service/questions/TestPage'));\n\n//vip\nconst WhaleUserHome = React.lazy(() => import('../pages/vip/whale_users/WhaleUserHome'));\nconst VipOfferHome = React.lazy(() => import('../pages/vip/offers/index'));\nconst VipOfferForm = React.lazy(() => import('../pages/vip/offers/form'));\n\n\n//Games\nconst GamesHome = React.lazy(() => import('../pages/games'));\nconst GamesEditForm = React.lazy(() => import('../pages/games/form'));\nconst ServerHome = React.lazy(() => import('../pages/games/ServerHome'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/service\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst myDashboardRoutes = {\n    path: '/mydashboard',\n    name: '我的',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/mydashboard/ecommerce',\n            name: 'Ecommerce',\n            badge: {\n                variant: 'success',\n                text: '3',\n            },\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/mydashboard/crm',\n            name: 'CRM',\n            component: CRMDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n//official dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/service',\n            name: '客服相關',\n            component: AdminDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n// apps\nconst appRoutes = {\n    path: '/apps',\n    name: 'Apps',\n    icon: 'dripicons-view-apps',\n    children: [\n        {\n            path: '/apps/calendar',\n            name: 'Calendar',\n            component: CalendarApp,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/projects',\n            name: 'Projects',\n            children: [\n                {\n                    path: '/apps/projects/list',\n                    name: 'List',\n                    component: Projects,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/projects/detail',\n                    name: 'Detail',\n                    component: ProjectDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/ecommerce',\n            name: 'eCommerce',\n            children: [\n                {\n                    path: '/apps/ecommerce/products',\n                    name: 'Products',\n                    component: EcommerceProducts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/details',\n                    name: 'Product Details',\n                    component: ProductDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/orders',\n                    name: 'Orders',\n                    component: Orders,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/order/details',\n                    name: 'Order Details',\n                    component: OrderDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/customers',\n                    name: 'Customers',\n                    component: Customers,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/shopping-cart',\n                    name: 'Shopping Cart',\n                    component: Cart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/checkout',\n                    name: 'Checkout',\n                    component: Checkout,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/sellers',\n                    name: 'Sellers',\n                    component: Sellers,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email',\n            name: 'Email',\n            children: [\n                {\n                    path: '/apps/email/inbox',\n                    name: 'Inbox',\n                    component: Inbox,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/email/details',\n                    name: 'Email Details',\n                    component: EmailDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n    ],\n};\n\n// pages\nconst pageRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'dripicons-copy',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/faq',\n            name: 'FAQ',\n            component: FAQ,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404',\n            name: 'Error - 404',\n            component: ErrorPageNotFound,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: ServerError,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'UI Kit',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/ui/buttons',\n            name: 'Buttons',\n            component: Buttons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/cards',\n            name: 'Cards',\n            component: Cards,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/general',\n            name: 'General',\n            component: General,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/grid',\n            name: 'Grid',\n            component: Grid,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            component: Icons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/modals',\n            name: 'Modals',\n            component: Modals,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/notifications',\n            name: 'Notifications',\n            component: Notifications,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/spinners',\n            name: 'Spinners',\n            component: Spinners,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/tabs',\n            name: 'Tabs',\n            component: Tabs,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/typography',\n            name: 'Typography',\n            component: Typography,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// forms\nconst formsRoutes = {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'dripicons-document',\n    children: [\n        {\n            path: '/forms/basic',\n            name: 'Basic Elements',\n            component: BasicForms,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/advanced',\n            name: 'Form Advanced',\n            component: FormAdvanced,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/validation',\n            name: 'Form validation',\n            component: FormValidation,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/wizard',\n            name: 'Form Wizard',\n            component: FormWizard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/upload',\n            name: 'File Upload',\n            component: FileUpload,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/editors',\n            name: 'Editors',\n            component: Editors,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// other features\nconst featuresRoutes = {\n    path: '/features',\n    name: 'Features',\n    icon: 'dripicons-view-list-large',\n    children: [\n        {\n            path: '/features/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/features/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/features/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n\nconst platformRoutesSub = {\n    path: '/platform',\n    name: 'Platform',\n    children: [\n        {\n            path: '/platform/modify_password',\n            name: '修改密碼',\n            component: ModifyPassword,\n            route: PrivateRoute,\n        },\n    ],\n};\n// online cs\n\nconst serviceRoutesSub = {\n    path: '/service',\n    name: 'Service',\n    children: [\n        {\n            path: '/service/view/:question_id',\n            name: '客服案件檢視',\n            component: SingleQuestionPage,\n            route: PrivateRoute,\n        },\n    ],\n}\nconst serviceRoutes = {\n    path: '/service',\n    name: '客服',\n    icon: ' dripicons-device-desktop',\n    children: [\n        {\n            exact: true,\n            path:'/service/overview',\n            name:'總覽',\n            component:ServiceOverview,\n            route: PrivateRoute,\n        },\n        {\n            exact: true,\n            path: '/service/questions/todo',\n            name: '待處理案件',\n            component: QuesionsListPage,\n                    route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/get_list',\n            name: '等待中案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/closed',\n            name: '近期結案案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            exact: true,\n            path: '/service/allocate/list',\n            name: '派單系統- 案件列表',\n            component: AllocateListPage,\n                    route: PrivateRoute,\n            \n        },\n        {\n            exact: true,\n            path:'/service/statistics',\n            name:'件數統計',\n            component:ServiceStatistics,\n            route: PrivateRoute,\n        },\n\n    ],\n};\n// offline cs\nconst offlineRoutes = {\n    path: '/offline',\n    name: '線下客服區',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/offline/cpl_case/home',\n            name: '消保',\n            component: CplCaseHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/home',\n            name: '公函',\n            component: GovLetterHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/home',\n            name: '親訪',\n            component: PersonalVisitHome,\n            route: PrivateRoute,\n        },\n    ],\n};\nconst offlineRoutesSub = {\n    path: '/offline',\n    name: 'offlineCS',\n    children: [\n        {\n            path: '/offline/personal_visit/create',\n            name: '新增親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/edit/:record_id',\n            name: '編輯親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/create',\n            name: '新增公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/edit/:record_id',\n            name: '編輯公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/test',\n            name: '測試',\n            component: TestPage,\n            route: PrivateRoute,\n        },\n        \n    ],\n};\n\n// VIP\nconst vipRoutes = {\n    path: '/vip',\n    name: 'VIP',\n    icon: 'dripicons-trophy', \n    children: [\n        {\n            path: '/vip/whale_users',\n            name: '鯨魚用戶',\n            component: WhaleUserHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/vip/offers',\n            name: 'VIP方案',\n            children: [\n                {\n                    path: '/vip/offers/offer_list',\n                    name: '方案列表',\n                    component: VipOfferHome,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/vip/offers/add_offer',\n                    name: '方案明細',\n                    component: VipOfferForm,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        \n    ],\n};\n//games\n\n\nconst gamesRoutes = {\n    path: '/games',\n    name: '遊戲管理',\n    icon: 'dripicons-archive', \n    children: [\n        {\n            path: '/games/home',\n            name: '遊戲設定',\n            component: GamesHome,\n            route: PrivateRoute,\n            exact: true,\n        },\n        {\n            path: '/games/create',\n            name: '新增遊戲',\n            component: GamesEditForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/games/servers',\n            name: '伺服器設定',\n            component: ServerHome,\n            route: PrivateRoute,\n            exact: true,\n        },\n    ],\n};\n\n// online cs\n\nconst gameRoutesSub = {\n    path: '/games',\n    name: 'games',\n    children: [\n        {\n            path: '/games/edit/:game_id',\n            name: '編輯遊戲',\n            component: GamesEditForm,\n            route: PrivateRoute,\n        },\n    ],\n}\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    dashboardRoutes,\n    appRoutes,\n    authRoutes,\n    pageRoutes,\n    uiRoutes,\n    formsRoutes,\n    featuresRoutes,\n    platformRoutesSub,\n    offlineRoutes,\n    offlineRoutesSub,\n    myDashboardRoutes,\n    serviceRoutes,\n    serviceRoutesSub,\n    vipRoutes,\n    gamesRoutes,\n    gameRoutesSub\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n(loggedInUser !== null && loggedInUser.uid === 112)\n        ? [\n              dashboardRoutes,\n              appRoutes,\n              pageRoutes,\n              uiRoutes,\n              formsRoutes,\n              featuresRoutes,\n              offlineRoutes,\n              myDashboardRoutes,\n              serviceRoutes,\n              vipRoutes,\n              gamesRoutes\n          ]\n        : [dashboardRoutes, offlineRoutes,serviceRoutes,vipRoutes,gamesRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n// For Dark import DarkTheme.scss\n// import './assets/scss/DarkTheme.scss';\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\nconst INIT_STATE = {\n    updated: null,\n    loading: true,\n    error: '',\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n    switch (action.type) {\n        case UPDATE_PASSWORD:\n            return { ...state, loading: true };\n        case UPDATE_PASSWORD_SUCCESS:\n            return { ...state, updated: true, loading: false, error: null };\n        case UPDATE_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    records: [],\r\n    loading: true,\r\n    affectedId: 0,\r\n    error: {},\r\n    currentRecord: {},\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n    switch (action.type) {\r\n        case GET_GOV_DATA:\r\n            return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n        case GET_GOV_DATA_SUCCESS:\r\n            return { ...state, records: action.payload, loading: false, error: null };\r\n        case GET_GOV_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case EDIT_RECORD:\r\n            return { ...state, loading: true };\r\n        case EDIT_RECORD_SUCCESS:\r\n            return { ...state, affectedId: action.payload, loading: false, error: null };\r\n        case EDIT_RECORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case GET_CURRENT:\r\n            return { ...state, loading: true };\r\n        case GET_CURRENT_SUCCESS:\r\n            return { ...state, currentRecord: action.payload, loading: false, error: null };\r\n        case GET_CURRENT_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    loading: true,\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = { user?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return { ...state, loading: true };\r\n        case GET_USERS_SUCCESS:\r\n            return { ...state, users: action.payload, loading: false, error: null };\r\n        case GET_USERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\",\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: []\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: [\r\n            ...state.current.replies.filter(\r\n              reply => reply.id !== action.payload.id\r\n            ),\r\n            { id: action.payload.id, ...action.payload.updatedField }\r\n          ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const { antsHandleData, qCountData, csHandleData } = action.payload;\r\n      var tmpGameIds = [];\r\n      return {\r\n        ...state,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { UPDATE_PASSWORD } from './constants';\r\nimport { updatePasswordSuccess, updatePasswordFailed } from './actions';\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n    const options = {\r\n        data: JSON.stringify({ account, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/platform/modify_password',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(updatePasswordSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(updatePasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n    yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nfunction* PlatformSaga(): any {\r\n    yield all([fork(watchChangePassword)]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GOV_DATA, EDIT_RECORD, GET_CURRENT } from './constants';\r\n\r\nimport {\r\n    getOfflineCsDataSuccess,\r\n    getOfflineCsDataFailed,\r\n    editRecordSuccess,\r\n    editRecordFailed,\r\n    getCurrentRecordSuccess,\r\n    getCurrentRecordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${type === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getOfflineCsDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 403:\r\n                message = error.response.data;\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getOfflineCsDataFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n    //console.log('editGovRecord *****', payload);\r\n    const { dataType, record } = payload;\r\n    //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    const options = {\r\n        data: record,\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        //console.log('editGovRecordSuccess editGovRecord', response);\r\n        yield put(editRecordSuccess(response.data));\r\n    } catch (error) {\r\n        //console.log('error editGovRecord', error.response.data);\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(editRecordFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n    //console.log('getCurrentRecord payload ', payload);\r\n    const { dataType, record_id } = payload;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}/detail/${record_id}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getCurrentRecordSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 400:\r\n                message = error.response.data.msg;\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(getCurrentRecordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n    yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n    yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n    yield all([fork(watchGetData), fork(watchEditRecord), fork(watchGetCurrentRecordData)]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS } from './constants';\r\n\r\nimport { getAdminUsersSuccess, getAdminUsersFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/admin_users/getAdminUsersByRole/${role}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getAdminUsersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getAdminUsersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData)\r\n  ]);\r\n}\r\n\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_VIP_OFFERS } from \"./constants\";\r\n\r\nimport { getVipOffersFailed, getVipOffersSuccess } from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([fork(watchGetOffers)]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}