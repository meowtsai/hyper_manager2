{"version":3,"sources":["redux/service/constants.js","redux/serviceAllocate/constants.js","redux/vip/constants.js","redux/auth/constants.js","redux/layout/constants.js","redux/offlinecs/constants.js","redux/service/actions.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","redux/vip/actions.js","redux/vipoffers/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/platform/constants.js","redux/adminUsers/constants.js","redux/games/constants.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/offlinecs/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/platform/actions.js","redux/games/actions.js","redux/servers/actions.js","redux/adminUsers/actions.js","redux/vipoffers/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/service/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","clearMessage","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","id","qid","allocation_cause","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","game_id","uid","command","record_id","record","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","password","fullname","email","history","passwordResetStatus","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","dataType","records","affectedId","errors","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","updatePassword","updatePasswordSuccess","updatePasswordFailed","account","getGames","getGamesSuccess","getGamesFailed","getServersByGameId","getServersSuccess","getServersFailed","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","role","users","getVipOffers","getVipOffersSuccess","getVipOffersFailed","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","GoogleMaps","ModifyPassword","CplCaseHome","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","PrivateRoute","_ref","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","action","objectSpread","Auth","AppMenu","stat","Dashboard","updated","Platform","currentRecord","OfflineCS","list","Games","Servers","AdminUsers","allocation","allocation_logs","allocationStatus","updateOKMessage","cs_members","ServiceAllocate","newList","logs","log","filter","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","tasks","msg","updatedField","newLog","all_records","game_list","vip_list","requestData","not_allowed","VIP","vip","s","toString","newRecord","newReqData","vip_offer_list","VipOffers","current","Service","question","updateQuestionData","replies","reply","question_type","question_status","_action$payload","antsHandleData","qCountData","tmpGameIds","allgames","reduce","prev","curr","game_name","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","status","test_list","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","watchChangePassword","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","watchGetCurrentRecordData","watchEditRecord","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","offlinecs_saga_marked5","offlinecs_saga_marked6","offlinecs_saga_marked7","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","adminUsers_saga_marked3","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","_ref5","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","saga_marked10","saga_marked11","saga_marked12","saga_marked13","getQuestionsData","getCurrentQuestionData","getTestData","getServiceStat","updateType","updateStatus","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","_ref6","service_saga_marked7","_ref7","service_saga_marked8","_ref8","service_saga_marked9","_ref9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","getVIP","putVIP","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","vipSaga","vip_saga_marked","vip_saga_marked2","_ref2$payload","vip_saga_marked3","vip_saga_marked4","vip_saga_marked5","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","watchGetOffers","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85c94d35.chunk.js","sourcesContent":["export const GET_QUESTIONS = \"GET_QUESTIONS\";\r\nexport const GET_QUESTIONS_SUCCESS = \"GET_QUESTIONS_SUCCESS\";\r\nexport const GET_QUESTIONS_FAILED = \"GET_QUESTIONS_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_TYPE = \"UPDATE_QUESTION_TYPE\";\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = \"UPDATE_QUESTION_TYPE_SUCCESS\";\r\nexport const UPDATE_QUESTION_TYPE_FAILED = \"UPDATE_QUESTION_TYPE_FAILED\";\r\n\r\nexport const UPDATE_QUESTION_STATUS = \"UPDATE_QUESTION_STATUS\";\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = \"UPDATE_QUESTION_STATUS_SUCCESS\";\r\nexport const UPDATE_QUESTION_STATUS_FAILED = \"UPDATE_QUESTION_STATUS_FAILED\";\r\n\r\nexport const GET_TEST_DATA = \"GET_TEST_DATA\";\r\nexport const GET_TEST_DATA_SUCCESS = \"GET_TEST_DATA_SUCCESS\";\r\nexport const GET_TEST_DATA_FAILED = \"GET_TEST_DATA_FAILED\";\r\n\r\nexport const GET_OVERVIEW = \"GET_OVERVIEW\";\r\nexport const GET_OVERVIEW_SUCCESS = \"GET_OVERVIEW_SUCCESS\";\r\nexport const GET_OVERVIEW_FAILED = \"GET_OVERVIEW_FAILED\";\r\n\r\nexport const GET_CURRENT_QUESTION = \"GET_CURRENT_QUESTION\";\r\nexport const GET_CURRENT_QUESTION_SUCCESS = \"GET_CURRENT_QUESTION_SUCCESS\";\r\nexport const GET_CURRENT_QUESTION_FAILED = \"GET_CURRENT_QUESTION_FAILED\";\r\n\r\nexport const ALLOCATE_QUESTION = \"ALLOCATE_QUESTION\";\r\nexport const ALLOCATE_QUESTION_SUCCESS = \"ALLOCATE_QUESTION_SUCCESS\";\r\nexport const ALLOCATE_QUESTION_FAILED = \"ALLOCATE_QUESTION_FAILED\";\r\n\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nexport const REPLY_QUESTION = \"REPLY_QUESTION\";\r\nexport const REPLY_QUESTION_SUCCESS = \"REPLY_QUESTION_SUCCESS\";\r\nexport const REPLY_QUESTION_FAILED = \"REPLY_QUESTION_FAILED\";\r\n\r\nexport const CLOSE_QUESTION = \"CLOSE_QUESTION\";\r\nexport const CLOSE_QUESTION_SUCCESS = \"CLOSE_QUESTION_SUCCESS\";\r\nexport const CLOSE_QUESTION_FAILED = \"CLOSE_QUESTION_FAILED\";\r\n\r\nexport const GET_SERVICE_STATISTICS = \"GET_SERVICE_STATISTICS\";\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = \"GET_SERVICE_STATISTICS_SUCCESS\";\r\nexport const GET_SERVICE_STATISTICS_FAILED = \"GET_SERVICE_STATISTICS_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n","export const GET_VIP_OFFERS = \"GET_VIP_OFFERS\";\r\nexport const GET_VIP_OFFERS_SUCCESS = \"GET_VIP_OFFERS_SUCCESS\";\r\nexport const GET_VIP_OFFERS_FAILED = \"GET_VIP_OFFERS_FAILED\";\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = \"CLEAR_VIP_OFFERS_MESSAGE\";\r\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = 'UPDATE_PASSWORD';\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS';\nexport const UPDATE_PASSWORD_FAILED = 'UPDATE_PASSWORD_FAILED';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nimport axios from 'axios';\n\nconst setAuthToken = token => {\n    //console.log(\"setAuthToken\", token);\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        setAuthToken(user.token);\n        return true;\n    }\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    //console.log('getLoggedInUser', user);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA,\r\n    payload: dataType,\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_SUCCESS,\r\n    payload: records,\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_GOV_DATA_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const editRecord = (dataType: string, record: FormData): OfflineCsAction => ({\r\n    type: EDIT_RECORD,\r\n    payload: { dataType, record },\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n    type: EDIT_RECORD_SUCCESS,\r\n    payload: result.affectedId,\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n    type: EDIT_RECORD_FAILED,\r\n    payload: errors,\r\n});\r\nexport const getCurrentRecord = (dataType: string, record_id: int, history: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT,\r\n    payload: { dataType, record_id, history },\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n    type: GET_CURRENT_SUCCESS,\r\n    payload: record,\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n    type: GET_CURRENT_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (account: string, password: string): PlatformAction => ({\n    type: UPDATE_PASSWORD,\n    payload: { account, password },\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n    type: UPDATE_PASSWORD_SUCCESS,\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n    type: UPDATE_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport { GET_GAMES_DATA, GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n    type: GET_GAMES_DATA,\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n    type: GET_GAMES_DATA_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n    type: GET_GAMES_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n    type: GET_USERS,\r\n    payload: role,\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n    type: GET_USERS_SUCCESS,\r\n    payload: users,\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n    type: GET_USERS_FAILED,\r\n    payload: error,\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst EcommerceDashboard = React.lazy(() => import('../pages/dashboards/Ecommerce'));\nconst CRMDashboard = React.lazy(() => import('../pages/dashboards/CRM'));\n//*add new\nconst AdminDashboard = React.lazy(() => import('../pages/dashboards/Admin'));\n// apps\nconst CalendarApp = React.lazy(() => import('../pages/apps/Calendar'));\nconst Projects = React.lazy(() => import('../pages/apps/Projects'));\nconst ProjectDetail = React.lazy(() => import('../pages/apps/ProjectDetail'));\n// - ecommece pages\nconst EcommerceProducts = React.lazy(() => import('../pages/apps/Ecommerce/Products'));\nconst ProductDetails = React.lazy(() => import('../pages/apps/Ecommerce/ProductDetails'));\nconst Orders = React.lazy(() => import('../pages/apps/Ecommerce/Orders'));\nconst OrderDetails = React.lazy(() => import('../pages/apps/Ecommerce/OrderDetails'));\nconst Customers = React.lazy(() => import('../pages/apps/Ecommerce/Customers'));\nconst Cart = React.lazy(() => import('../pages/apps/Ecommerce/Cart'));\nconst Checkout = React.lazy(() => import('../pages/apps/Ecommerce/Checkout/'));\nconst Sellers = React.lazy(() => import('../pages/apps/Ecommerce/Sellers'));\n// - kanban\nconst Kanban = React.lazy(() => import('../pages/apps/Kanban/'));\n\n// - email\nconst Inbox = React.lazy(() => import('../pages/apps/Email/Inbox'));\nconst EmailDetail = React.lazy(() => import('../pages/apps/Email/Detail'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/Starter'));\nconst Profile = React.lazy(() => import('../pages/profile'));\nconst ErrorPageNotFound = React.lazy(() => import('../pages/error/PageNotFound'));\nconst ServerError = React.lazy(() => import('../pages/error/ServerError'));\n\n// - other\nconst Invoice = React.lazy(() => import('../pages/other/Invoice'));\nconst FAQ = React.lazy(() => import('../pages/other/FAQ'));\nconst Pricing = React.lazy(() => import('../pages/other/Pricing'));\n\n// uikit\nconst Cards = React.lazy(() => import('../pages/uikit/Cards'));\nconst Buttons = React.lazy(() => import('../pages/uikit/Buttons'));\nconst Modals = React.lazy(() => import('../pages/uikit/Modals'));\nconst Tabs = React.lazy(() => import('../pages/uikit/Tabs'));\nconst Notifications = React.lazy(() => import('../pages/uikit/Notifications'));\nconst Grid = React.lazy(() => import('../pages/uikit/Grid'));\nconst General = React.lazy(() => import('../pages/uikit/General'));\nconst Typography = React.lazy(() => import('../pages/uikit/Typography'));\nconst Icons = React.lazy(() => import('../pages/uikit/Icons'));\nconst Spinners = React.lazy(() => import('../pages/uikit/Spinners'));\nconst Widgets = React.lazy(() => import('../pages/uikit/Widgets'));\n// forms\nconst BasicForms = React.lazy(() => import('../pages/forms/Basic'));\nconst FormValidation = React.lazy(() => import('../pages/forms/Validation'));\nconst FormAdvanced = React.lazy(() => import('../pages/forms/Advanced'));\nconst FormWizard = React.lazy(() => import('../pages/forms/Wizard'));\nconst FileUpload = React.lazy(() => import('../pages/forms/FileUpload'));\nconst Editors = React.lazy(() => import('../pages/forms/Editors'));\n// charts\nconst ApexChart = React.lazy(() => import('../pages/charts/Apex'));\nconst BriteChart = React.lazy(() => import('../pages/charts/Brite'));\nconst ChartJs = React.lazy(() => import('../pages/charts/ChartJs'));\n// tables\nconst BasicTables = React.lazy(() => import('../pages/tables/Basic'));\nconst AdvancedTables = React.lazy(() => import('../pages/tables/Advanced'));\n// maps\nconst GoogleMaps = React.lazy(() => import('../pages/GoogleMaps'));\n\n//platform\nconst ModifyPassword = React.lazy(() => import('../pages/platform/ModifyPassword'));\n\n//offline cs\nconst CplCaseHome = React.lazy(() => import('../pages/offline/cpl_case/CplCaseHome'));\nconst GovLetterHome = React.lazy(() => import('../pages/offline/gov_letter/GovLetterHome'));\nconst PersonalVisitHome = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitHome'));\nconst PersonalVisitForm = React.lazy(() => import('../pages/offline/personal_visit/PersonalVisitForm'));\n\nconst GovLetterForm = React.lazy(() => import('../pages/offline/gov_letter/GovLetterForm'));\n\n\n//service\n\nconst ServiceOverview = React.lazy(() => import('../pages/service/questions/overview'));\nconst ServiceStatistics = React.lazy(() => import('../pages/service/statistics'));\n\nconst AllocateListPage = React.lazy(() => import('../pages/service/allocate'));\nconst QuesionsListPage = React.lazy(() => import('../pages/service/questions'));\nconst SingleQuestionPage = React.lazy(() => import('../pages/service/questions/view'));\n\nconst TestPage = React.lazy(() => import('../pages/service/questions/TestPage'));\n\n//vip\nconst WhaleUserHome = React.lazy(() => import('../pages/vip/whale_users/WhaleUserHome'));\nconst VipOfferHome = React.lazy(() => import('../pages/vip/offers/index'));\nconst VipOfferForm = React.lazy(() => import('../pages/vip/offers/form'));\n\n// handle auth and authorization\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n                // not logged in so redirect to login page with the return url\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n            // check if route is restricted by role\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                // role not authorised so redirect to home page\n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/service\" />,\n    route: PrivateRoute,\n};\n\n// dashboards\nconst myDashboardRoutes = {\n    path: '/mydashboard',\n    name: '我的',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/mydashboard/ecommerce',\n            name: 'Ecommerce',\n            badge: {\n                variant: 'success',\n                text: '3',\n            },\n            component: EcommerceDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/mydashboard/crm',\n            name: 'CRM',\n            component: CRMDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n//official dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    icon: 'dripicons-meter',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/service',\n            name: '客服相關',\n            component: AdminDashboard,\n            route: PrivateRoute,\n        },\n    ],\n};\n// apps\nconst appRoutes = {\n    path: '/apps',\n    name: 'Apps',\n    icon: 'dripicons-view-apps',\n    children: [\n        {\n            path: '/apps/calendar',\n            name: 'Calendar',\n            component: CalendarApp,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/projects',\n            name: 'Projects',\n            children: [\n                {\n                    path: '/apps/projects/list',\n                    name: 'List',\n                    component: Projects,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/projects/detail',\n                    name: 'Detail',\n                    component: ProjectDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/ecommerce',\n            name: 'eCommerce',\n            children: [\n                {\n                    path: '/apps/ecommerce/products',\n                    name: 'Products',\n                    component: EcommerceProducts,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/details',\n                    name: 'Product Details',\n                    component: ProductDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/orders',\n                    name: 'Orders',\n                    component: Orders,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/order/details',\n                    name: 'Order Details',\n                    component: OrderDetails,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/customers',\n                    name: 'Customers',\n                    component: Customers,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/shopping-cart',\n                    name: 'Shopping Cart',\n                    component: Cart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/checkout',\n                    name: 'Checkout',\n                    component: Checkout,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/ecommerce/sellers',\n                    name: 'Sellers',\n                    component: Sellers,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/apps/kanban',\n            name: 'Kanban',\n            component: Kanban,\n            route: PrivateRoute,\n        },\n        {\n            path: '/apps/email',\n            name: 'Email',\n            children: [\n                {\n                    path: '/apps/email/inbox',\n                    name: 'Inbox',\n                    component: Inbox,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/apps/email/details',\n                    name: 'Email Details',\n                    component: EmailDetail,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n    ],\n};\n\n// pages\nconst pageRoutes = {\n    path: '/pages',\n    name: 'Pages',\n    icon: 'dripicons-copy',\n    children: [\n        {\n            path: '/pages/starter',\n            name: 'Starter',\n            component: Starter,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/profile',\n            name: 'Profile',\n            component: Profile,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/invoice',\n            name: 'Invoice',\n            component: Invoice,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/faq',\n            name: 'FAQ',\n            component: FAQ,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/pricing',\n            name: 'Pricing',\n            component: Pricing,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-404',\n            name: 'Error - 404',\n            component: ErrorPageNotFound,\n            route: PrivateRoute,\n        },\n        {\n            path: '/pages/error-500',\n            name: 'Error - 500',\n            component: ServerError,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// auth\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        {\n            path: '/account/confirm',\n            name: 'Confirm',\n            component: Confirm,\n            route: Route,\n        },\n        {\n            path: '/account/forget-password',\n            name: 'Forget Password',\n            component: ForgetPassword,\n            route: Route,\n        },\n    ],\n};\n\n// ui\nconst uiRoutes = {\n    path: '/ui',\n    name: 'UI Kit',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/ui/buttons',\n            name: 'Buttons',\n            component: Buttons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/cards',\n            name: 'Cards',\n            component: Cards,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/general',\n            name: 'General',\n            component: General,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/grid',\n            name: 'Grid',\n            component: Grid,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/icons',\n            name: 'Icons',\n            component: Icons,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/modals',\n            name: 'Modals',\n            component: Modals,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/notifications',\n            name: 'Notifications',\n            component: Notifications,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/spinners',\n            name: 'Spinners',\n            component: Spinners,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/tabs',\n            name: 'Tabs',\n            component: Tabs,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/typography',\n            name: 'Typography',\n            component: Typography,\n            route: PrivateRoute,\n        },\n        {\n            path: '/ui/widgets',\n            name: 'Widgets',\n            component: Widgets,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// forms\nconst formsRoutes = {\n    path: '/forms',\n    name: 'Forms',\n    icon: 'dripicons-document',\n    children: [\n        {\n            path: '/forms/basic',\n            name: 'Basic Elements',\n            component: BasicForms,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/advanced',\n            name: 'Form Advanced',\n            component: FormAdvanced,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/validation',\n            name: 'Form validation',\n            component: FormValidation,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/wizard',\n            name: 'Form Wizard',\n            component: FormWizard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/upload',\n            name: 'File Upload',\n            component: FileUpload,\n            route: PrivateRoute,\n        },\n        {\n            path: '/forms/editors',\n            name: 'Editors',\n            component: Editors,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n// other features\nconst featuresRoutes = {\n    path: '/features',\n    name: 'Features',\n    icon: 'dripicons-view-list-large',\n    children: [\n        {\n            path: '/features/charts',\n            name: 'Charts',\n            children: [\n                {\n                    path: '/features/charts/apex',\n                    name: 'Apex',\n                    component: ApexChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/brite',\n                    name: 'Brite',\n                    component: BriteChart,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/charts/chartjs',\n                    name: 'Chartjs',\n                    component: ChartJs,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/tables',\n            name: 'Tables',\n            children: [\n                {\n                    path: '/features/tables/basic',\n                    name: 'Basic',\n                    component: BasicTables,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/features/tables/advanced',\n                    name: 'Advanced',\n                    component: AdvancedTables,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        {\n            path: '/features/googlemaps',\n            name: 'Google Maps',\n            component: GoogleMaps,\n            route: PrivateRoute,\n        },\n    ],\n};\n\n\nconst platformRoutesSub = {\n    path: '/platform',\n    name: 'Platform',\n    children: [\n        {\n            path: '/platform/modify_password',\n            name: '修改密碼',\n            component: ModifyPassword,\n            route: PrivateRoute,\n        },\n    ],\n};\n// online cs\n\nconst serviceRoutesSub = {\n    path: '/service',\n    name: 'Service',\n    children: [\n        {\n            path: '/service/view/:question_id',\n            name: '客服案件檢視',\n            component: SingleQuestionPage,\n            route: PrivateRoute,\n        },\n    ],\n}\nconst serviceRoutes = {\n    path: '/service',\n    name: '客服',\n    icon: ' dripicons-device-desktop',\n    children: [\n        {\n            exact: true,\n            path:'/service/overview',\n            name:'總覽',\n            component:ServiceOverview,\n            route: PrivateRoute,\n        },\n        {\n            exact: true,\n            path: '/service/questions/todo',\n            name: '待處理案件',\n            component: QuesionsListPage,\n                    route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/get_list',\n            name: '等待中案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            path: '/service/questions/closed',\n            name: '近期結案案件',\n            component: QuesionsListPage,\n            route: PrivateRoute,\n\n        },\n        {\n            exact: true,\n            path: '/service/allocate/list',\n            name: '派單系統- 案件列表',\n            component: AllocateListPage,\n                    route: PrivateRoute,\n            \n        },\n        {\n            exact: true,\n            path:'/service/statistics',\n            name:'件數統計',\n            component:ServiceStatistics,\n            route: PrivateRoute,\n        },\n\n    ],\n};\n// offline cs\nconst offlineRoutes = {\n    path: '/offline',\n    name: '線下客服區',\n    icon: 'dripicons-briefcase',\n    children: [\n        {\n            path: '/offline/cpl_case/home',\n            name: '消保',\n            component: CplCaseHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/home',\n            name: '公函',\n            component: GovLetterHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/home',\n            name: '親訪',\n            component: PersonalVisitHome,\n            route: PrivateRoute,\n        },\n    ],\n};\nconst offlineRoutesSub = {\n    path: '/offline',\n    name: 'offlineCS',\n    children: [\n        {\n            path: '/offline/personal_visit/create',\n            name: '新增親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/personal_visit/edit/:record_id',\n            name: '編輯親訪紀錄',\n            component: PersonalVisitForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/create',\n            name: '新增公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/offline/gov_letter/edit/:record_id',\n            name: '編輯公函',\n            component: GovLetterForm,\n            route: PrivateRoute,\n        },\n        {\n            path: '/test',\n            name: '測試',\n            component: TestPage,\n            route: PrivateRoute,\n        },\n        \n    ],\n};\n\n// VIP\nconst vipRoutes = {\n    path: '/vip',\n    name: 'VIP',\n    icon: 'dripicons-trophy', \n    children: [\n        {\n            path: '/vip/whale_users',\n            name: '鯨魚用戶',\n            component: WhaleUserHome,\n            route: PrivateRoute,\n        },\n        {\n            path: '/vip/offers',\n            name: 'VIP方案',\n            children: [\n                {\n                    path: '/vip/offers/offer_list',\n                    name: '方案列表',\n                    component: VipOfferHome,\n                    route: PrivateRoute,\n                },\n                {\n                    path: '/vip/offers/add_offer',\n                    name: '方案明細',\n                    component: VipOfferForm,\n                    route: PrivateRoute,\n                },\n            ],\n        },\n        \n    ],\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// All routes\nconst allRoutes = [\n    rootRoute,\n    dashboardRoutes,\n    appRoutes,\n    authRoutes,\n    pageRoutes,\n    uiRoutes,\n    formsRoutes,\n    featuresRoutes,\n    platformRoutesSub,\n    offlineRoutes,\n    offlineRoutesSub,\n    myDashboardRoutes,\n    serviceRoutes,\n    serviceRoutesSub,\n    vipRoutes\n];\n\n//所有要在leftSideBar顯示的路徑\nconst loggedInUser = getLoggedInUser();\nconst authProtectedRoutes =\n(loggedInUser !== null && loggedInUser.uid === 112)\n        ? [\n              dashboardRoutes,\n              appRoutes,\n              pageRoutes,\n              uiRoutes,\n              formsRoutes,\n              featuresRoutes,\n              offlineRoutes,\n              myDashboardRoutes,\n              serviceRoutes,\n              vipRoutes\n          ]\n        : [dashboardRoutes, offlineRoutes,serviceRoutes,vipRoutes];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\n// Themes\nimport './assets/scss/DefaultTheme.scss';\n\n// For Dark import DarkTheme.scss\n// import './assets/scss/DarkTheme.scss';\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport { UPDATE_PASSWORD, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAILED } from './constants';\n\nconst INIT_STATE = {\n    updated: null,\n    loading: true,\n    error: '',\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n    switch (action.type) {\n        case UPDATE_PASSWORD:\n            return { ...state, loading: true };\n        case UPDATE_PASSWORD_SUCCESS:\n            return { ...state, updated: true, loading: false, error: null };\n        case UPDATE_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n\n        default:\n            return { ...state };\n    }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n    GET_GOV_DATA,\r\n    GET_GOV_DATA_SUCCESS,\r\n    GET_GOV_DATA_FAILED,\r\n    EDIT_RECORD,\r\n    EDIT_RECORD_SUCCESS,\r\n    EDIT_RECORD_FAILED,\r\n    GET_CURRENT,\r\n    GET_CURRENT_SUCCESS,\r\n    GET_CURRENT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    records: [],\r\n    loading: true,\r\n    affectedId: 0,\r\n    error: {},\r\n    currentRecord: {},\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n    switch (action.type) {\r\n        case GET_GOV_DATA:\r\n            return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n        case GET_GOV_DATA_SUCCESS:\r\n            return { ...state, records: action.payload, loading: false, error: null };\r\n        case GET_GOV_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case EDIT_RECORD:\r\n            return { ...state, loading: true };\r\n        case EDIT_RECORD_SUCCESS:\r\n            return { ...state, affectedId: action.payload, loading: false, error: null };\r\n        case EDIT_RECORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case GET_CURRENT:\r\n            return { ...state, loading: true };\r\n        case GET_CURRENT_SUCCESS:\r\n            return { ...state, currentRecord: action.payload, loading: false, error: null };\r\n        case GET_CURRENT_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import { GET_GAMES_DATA_SUCCESS, GET_GAMES_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n    switch (action.type) {\r\n        case GET_GAMES_DATA_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_GAMES_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport { GET_USERS, GET_USERS_SUCCESS, GET_USERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    loading: true,\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = { user?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return { ...state, loading: true };\r\n        case GET_USERS_SUCCESS:\r\n            return { ...state, users: action.payload, loading: false, error: null };\r\n        case GET_USERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  CLEAR_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: \"\"\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: [\r\n            ...state.current.replies.filter(\r\n              reply => reply.id !== action.payload.id\r\n            ),\r\n            action.payload.updatedField\r\n          ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const { antsHandleData, qCountData } = action.payload;\r\n      var tmpGameIds = [];\r\n      return {\r\n        ...state,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\n\nimport { combineReducers } from \"redux\";\nimport Layout from \"./layout/reducers\";\nimport Auth from \"./auth/reducers\";\nimport AppMenu from \"./appMenu/reducers\";\nimport Dashboard from \"./dashboard/reducers\";\nimport Platform from \"./platform/reducers\";\nimport OfflineCs from \"./offlinecs/reducers\";\nimport Games from \"./games/reducers\";\nimport Servers from \"./servers/reducers\";\nimport AdminUsers from \"./adminUsers/reducers\";\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\nimport VIP from \"./vip/reducers\";\nimport VipOffers from \"./vipoffers/reducers\";\nimport Service from \"./service/reducers\";\nexport default combineReducers({\n  Auth,\n  AppMenu,\n  Layout,\n  Dashboard,\n  Platform,\n  OfflineCs,\n  Games,\n  Servers,\n  AdminUsers,\n  ServiceAllocate,\n  Service,\n  VIP,\n  VipOffers\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport axios from \"axios\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { fetchJSON } from \"../../helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  else cookies.remove(\"user\", { path: \"/\" });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/auth\"\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/register\", options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, \"/users/password-reset\", options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { UPDATE_PASSWORD } from './constants';\r\nimport { updatePasswordSuccess, updatePasswordFailed } from './actions';\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n    const options = {\r\n        data: JSON.stringify({ account, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/platform/modify_password',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(updatePasswordSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(updatePasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n    yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nfunction* PlatformSaga(): any {\r\n    yield all([fork(watchChangePassword)]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GOV_DATA, EDIT_RECORD, GET_CURRENT } from './constants';\r\n\r\nimport {\r\n    getOfflineCsDataSuccess,\r\n    getOfflineCsDataFailed,\r\n    editRecordSuccess,\r\n    editRecordFailed,\r\n    getCurrentRecordSuccess,\r\n    getCurrentRecordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${type === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getOfflineCsDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 403:\r\n                message = error.response.data;\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getOfflineCsDataFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n    //console.log('editGovRecord *****', payload);\r\n    const { dataType, record } = payload;\r\n    //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n    const options = {\r\n        data: record,\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        //console.log('editGovRecordSuccess editGovRecord', response);\r\n        yield put(editRecordSuccess(response.data));\r\n    } catch (error) {\r\n        //console.log('error editGovRecord', error.response.data);\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(editRecordFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n    //console.log('getCurrentRecord payload ', payload);\r\n    const { dataType, record_id } = payload;\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/offline_cs/${dataType === 'govletter' ? 'gov_list' : 'pv_list'}/detail/${record_id}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getCurrentRecordSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            case 400:\r\n                message = error.response.data.msg;\r\n                break;\r\n            default:\r\n                message = error.response.data;\r\n        }\r\n        yield put(getCurrentRecordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n    yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n    yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n    yield all([fork(watchGetData), fork(watchEditRecord), fork(watchGetCurrentRecordData)]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_GAMES_DATA } from './constants';\r\n\r\nimport { getGamesSuccess, getGamesFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: '/api/games/list',\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getGamesSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getGamesFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS } from './constants';\r\n\r\nimport { getAdminUsersSuccess, getAdminUsersFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/admin_users/getAdminUsersByRole/${role}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getAdminUsersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getAdminUsersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"沒有權限\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? \"finish_allocate_json\"\r\n        : allocateStatus === 3\r\n        ? \"request_allocate_json\"\r\n        : \"allocate_json\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? \"reserved_question\"\r\n        : closeType === 4\r\n        ? \"close_question\"\r\n        : closeType === 1\r\n        ? \"restored_question\"\r\n        : \"cancel_reserved_question\"\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData)\r\n  ]);\r\n}\r\n\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_VIP_OFFERS } from \"./constants\";\r\n\r\nimport { getVipOffersFailed, getVipOffersSuccess } from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([fork(watchGetOffers)]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","// @flow\nimport { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth/saga\";\nimport layoutSaga from \"./layout/saga\";\nimport appMenuSaga from \"./appMenu/saga\";\nimport dashboardSaga from \"./dashboard/saga\";\nimport platformSaga from \"./platform/saga\";\nimport offlineCsSaga from \"./offlinecs/saga\";\nimport gamesSaga from \"./games/saga\";\nimport serversSaga from \"./servers/saga\";\nimport adminUsersSaga from \"./adminUsers/saga\";\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\nimport serviceSaga from \"./service/saga\";\nimport vipSaga from \"./vip/saga\";\nimport vipOfferSaga from \"./vipoffers/saga\";\nexport default function* rootSaga(getState: any): any {\n  yield all([\n    authSaga(),\n    layoutSaga(),\n    appMenuSaga(),\n    dashboardSaga(),\n    platformSaga(),\n    offlineCsSaga(),\n    gamesSaga(),\n    serversSaga(),\n    adminUsersSaga(),\n    serviceAllocateSaga(),\n    serviceSaga(),\n    vipSaga(),\n    vipOfferSaga()\n  ]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}