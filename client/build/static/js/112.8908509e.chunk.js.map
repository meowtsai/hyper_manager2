{"version":3,"sources":["pages/vip/whale_users/UserViewBasic.js","pages/vip/whale_users/UserRequestData.js","pages/vip/whale_users/UserDashboard.js","components/PageTitle.js","redux/actions.js","pages/vip/whale_users/whaleOptConfig.js"],"names":["UserViewBasic","_ref","vip","_ref$errors","errors","onEditWhaleUser","updateOKMessage","_useState","useState","line_date","_useState2","Object","slicedToArray","setLineDate","_useState3","is_added","_useState4","setIsAdded","_useState5","char_name","_useState6","setCharName","_useState7","_useState8","charNameEditMode","setCharNameEditMode","_useState9","_useState10","lineStatusEditMode","setLineStatusEditMode","_useState11","_useState12","inactiveEditMode","setInactiveEditMode","_useState13","inactive_confirm_date","_useState14","isActive","setIsActive","opt","vipRankingOptions","filter","value","vip_ranking","useEffect","react_default","a","createElement","Row","Col","xl","Card","className","CardBody","msg","Alert","color","isOpen","form","md","FormGroup","Label","uid","server_name","char_in_game_id","row","sm","InputGroup","Input","type","name","id","plaintext","onChange","e","target","invalid","readOnly","InputGroupAddon","addonType","Button","onClick","size","FormFeedback","htmlFor","concat","label","moment","vip_ranking_updated","format","last_login","create_time","Form","inline","for","Number","parseInt","FormText","UserRequestData","requests","lbltext","onDeleteClick","expand","setExpand","length","style","cursor","Table","bordered","x","i","map","r","key","width","admin_name","dist_default","Badge","vipServiceOptions","service_type","list","request_code","tag","note","ButtonGroup","connect","state","VIP","currentWhaleUser","getCurrentWhaleUser","updateVipInfo","clearVIPMessage","addVipServiceRequest","deleteVipServiceRequest","match","history","requestType","setRequestType","code","setCode","reqNote","setReqNote","tagText","setTagText","formErrors","setFormErrors","game_id","params","search","window","location","query_user","URLSearchParams","get","quickOptionList","v","document","title","timeOutId","setTimeout","clearTimeout","onDeleteRequestRecord","confirm","react","PageTitle","breadCrumbItems","path","active","lg","whale_users_UserViewBasic","goBack","modifiedContent","keys","whale_users_UserRequestData","request_data","qo","placeholder","maxLength","rows","record","site","role_id","tmpErrors","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","props","to","item","index","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","d","__webpack_exports__","_layout_actions__WEBPACK_IMPORTED_MODULE_1__","_appMenu_actions__WEBPACK_IMPORTED_MODULE_2__","_dashboard_actions__WEBPACK_IMPORTED_MODULE_3__","_platform_actions__WEBPACK_IMPORTED_MODULE_4__","_offlinecs_actions__WEBPACK_IMPORTED_MODULE_5__","_games_actions__WEBPACK_IMPORTED_MODULE_6__","_servers_actions__WEBPACK_IMPORTED_MODULE_7__","_adminUsers_actions__WEBPACK_IMPORTED_MODULE_8__","_serviceAllocate_actions__WEBPACK_IMPORTED_MODULE_9__","_service_actions__WEBPACK_IMPORTED_MODULE_10__","_vip_actions__WEBPACK_IMPORTED_MODULE_11__","_vipoffers_actions__WEBPACK_IMPORTED_MODULE_12__","_batch_actions__WEBPACK_IMPORTED_MODULE_13__","_event_actions__WEBPACK_IMPORTED_MODULE_14__","isAddedOptions","0","1","icon","2","3","4","5","6","7","8","9"],"mappings":"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","file":"static/js/112.8908509e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Alert,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  InputGroupAddon,\r\n  InputGroup,\r\n  Form,\r\n  FormText\r\n} from \"reactstrap\";\r\nimport Moment from \"react-moment\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { vipRankingOptions } from \"./whaleOptConfig\";\r\n\r\nconst UserViewBasic = ({\r\n  vip,\r\n  errors = {},\r\n  onEditWhaleUser,\r\n  updateOKMessage\r\n}) => {\r\n  const [line_date, setLineDate] = useState(vip.line_date);\r\n  const [is_added, setIsAdded] = useState(vip.is_added);\r\n\r\n  const [char_name, setCharName] = useState(vip.char_name);\r\n  const [charNameEditMode, setCharNameEditMode] = useState(false);\r\n  const [lineStatusEditMode, setLineStatusEditMode] = useState(false);\r\n\r\n  const [inactiveEditMode, setInactiveEditMode] = useState(false);\r\n  const [isActive, setIsActive] = useState(\r\n    vip.inactive_confirm_date === null ? \"active\" : \"inactive\"\r\n  );\r\n\r\n  const opt = vipRankingOptions.filter(opt => opt.value === vip.vip_ranking)[0];\r\n\r\n  useEffect(() => {\r\n    if (updateOKMessage) {\r\n      setCharNameEditMode(false);\r\n      setLineStatusEditMode(false);\r\n      setInactiveEditMode(false);\r\n    }\r\n  }, [updateOKMessage]);\r\n  return (\r\n    <Row>\r\n      <Col xl={6}>\r\n        <Card className=\"border p-1 mb-1 rounded font-13 bg-light\">\r\n          <CardBody>\r\n            {errors && errors.msg && (\r\n              <Alert color=\"danger\" isOpen={errors.msg ? true : false}>\r\n                <div>{errors.msg}</div>\r\n              </Alert>\r\n            )}\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>帳號：</Label>\r\n                  <span>{vip.uid} </span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>伺服器：</Label>\r\n                  <span>{vip.server_name} </span>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>角色ID：</Label>\r\n                  <span>{vip.char_in_game_id} </span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup row>\r\n                  <Label sm={4}>角色名稱：</Label>\r\n                  <Col sm={8}>\r\n                    <InputGroup>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"char_name\"\r\n                        id=\"char_name\"\r\n                        plaintext={!charNameEditMode}\r\n                        value={char_name}\r\n                        onChange={e => setCharName(e.target.value)}\r\n                        invalid={errors.char_name ? true : false}\r\n                        readOnly={!charNameEditMode}\r\n                      />\r\n\r\n                      {charNameEditMode ? (\r\n                        <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={e => onEditWhaleUser({ char_name })}\r\n                            size=\"sm\"\r\n                          >\r\n                            <i className=\"mdi mdi-content-save\" />\r\n                          </Button>\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            onClick={e => {\r\n                              setCharNameEditMode(false);\r\n                              setCharName(vip.char_name);\r\n                            }}\r\n                            size=\"sm\"\r\n                          >\r\n                            <i className=\"mdi mdi-window-close\" />\r\n                          </Button>\r\n                        </InputGroupAddon>\r\n                      ) : (\r\n                        <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            color=\"secondary\"\r\n                            onClick={e => setCharNameEditMode(true)}\r\n                            size=\"sm\"\r\n                          >\r\n                            <i className=\"mdi mdi-pencil-outline\" />\r\n                          </Button>\r\n                        </InputGroupAddon>\r\n                      )}\r\n                    </InputGroup>\r\n                  </Col>\r\n\r\n                  <FormFeedback>{errors.char_name}</FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"report_id\">VIP 分層</Label>\r\n\r\n                  {vip.vip_ranking && (\r\n                    <span\r\n                      className={`mr-1 badge badge-${opt.color}-lighten badge-pill`}\r\n                    >\r\n                      {opt.label || \"\"}\r\n                    </span>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>升階時間：</Label>\r\n                  <span>\r\n                    {moment(vip.vip_ranking_updated).format(\"YYYY-MM-DD hh:mm\")}{\" \"}\r\n                  </span>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"report_id\">最後登入：</Label>\r\n                  <span>\r\n                    {moment(vip.last_login).format(\"YYYY-MM-DD hh:mm\")}{\" \"}\r\n                  </span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label>建立時間：</Label>\r\n                  <span>\r\n                    {moment(vip.create_time).format(\"YYYY-MM-DD hh:mm\")}{\" \"}\r\n                  </span>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={12}>\r\n                <hr />\r\n                <FormGroup>\r\n                  <Label>加Line狀態：</Label>\r\n\r\n                  {vip.is_added === 1 ? (\r\n                    <span className=\"text-success\">\r\n                      <strong>\r\n                        <i className=\"mdi mdi-account-check-outline mr-2\"></i>\r\n                        已在 {moment(vip.line_date).format(\r\n                          \"YYYY-MM-DDTHH:mm\"\r\n                        )}{\" \"}\r\n                        加入\r\n                      </strong>\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"text-secondary\">\r\n                      <strong>尚未 加入</strong>\r\n                    </span>\r\n                  )}\r\n                  {!lineStatusEditMode && (\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"sm\"\r\n                      className=\"ml-1\"\r\n                      onClick={e => setLineStatusEditMode(true)}\r\n                    >\r\n                      <i className=\"mdi mdi-pencil-outline\" />\r\n                    </Button>\r\n                  )}\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            {lineStatusEditMode && (\r\n              <Row form className=\"mb-2\">\r\n                <Col md={12}>\r\n                  <Form inline>\r\n                    <FormGroup className=\"mb-2 mr-sm-2\">\r\n                      <Label for=\"select_line_status\" className=\"mr-sm-2\">\r\n                        狀態\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"select_line_status\"\r\n                        id=\"select_line_status\"\r\n                        value={is_added}\r\n                        onChange={e => {\r\n                          setIsAdded(Number.parseInt(e.target.value));\r\n                          setLineDate(\r\n                            vip.line_date\r\n                              ? vip.line_date\r\n                              : moment().format(\"YYYY-MM-DDTHH:mm\")\r\n                          );\r\n                        }}\r\n                      >\r\n                        <option value=\"0\">未加入Line</option>\r\n                        <option value=\"1\">已加入Line</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n\r\n                    {is_added === 1 && (\r\n                      <FormGroup className=\"mb-2 mr-sm-2\">\r\n                        <Label for=\"line_date\" className=\"mr-sm-2\">\r\n                          加入時間\r\n                        </Label>\r\n                        <Input\r\n                          type=\"datetime-local\"\r\n                          name=\"line_date\"\r\n                          id=\"line_date\"\r\n                          value={moment(line_date).format(\"YYYY-MM-DDTHH:mm\")}\r\n                          onChange={e => setLineDate(e.target.value)}\r\n                          invalid={errors.line_date ? true : false}\r\n                        />\r\n                      </FormGroup>\r\n                    )}\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={e =>\r\n                        onEditWhaleUser({\r\n                          is_added,\r\n                          line_date: is_added === 1 ? line_date : null\r\n                        })\r\n                      }\r\n                      size=\"sm\"\r\n                    >\r\n                      <i className=\"mdi mdi-content-save\" />\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={e => {\r\n                        setLineStatusEditMode(false);\r\n                        setLineDate(vip.line_date);\r\n                        setIsAdded(vip.is_added);\r\n                      }}\r\n                      size=\"sm\"\r\n                    >\r\n                      <i className=\"mdi mdi-window-close\" />\r\n                    </Button>\r\n                    <FormText>可以變更加入line狀態以及加入日期</FormText>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n\r\n            <Row form>\r\n              <Col md={12}>\r\n                <hr />\r\n                {!inactiveEditMode && (\r\n                  <FormGroup>\r\n                    <Label>活躍狀態：</Label>\r\n\r\n                    {vip.inactive_confirm_date === null ? (\r\n                      <span className=\"text-success\">\r\n                        <strong>正常</strong>\r\n                      </span>\r\n                    ) : (\r\n                      <span className=\"text-danger\">\r\n                        <strong>流失</strong>\r\n                      </span>\r\n                    )}\r\n\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      size=\"sm\"\r\n                      className=\"ml-1\"\r\n                      onClick={e => setInactiveEditMode(true)}\r\n                    >\r\n                      <i className=\"mdi mdi-pencil-outline\" />\r\n                    </Button>\r\n                  </FormGroup>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            {inactiveEditMode && (\r\n              <Row form className=\"mb-2\">\r\n                <Col md={12}>\r\n                  <Form inline>\r\n                    <FormGroup className=\"mb-2 mr-sm-2\">\r\n                      <Label for=\"select_line_status\" className=\"mr-sm-2\">\r\n                        活躍狀態\r\n                      </Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        name=\"selectActiveStatus\"\r\n                        id=\"selectActiveStatus\"\r\n                        value={isActive}\r\n                        onChange={e => setIsActive(e.target.value)}\r\n                      >\r\n                        <option value=\"active\">正常</option>\r\n                        <option value=\"inactive\">流失</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={e =>\r\n                        onEditWhaleUser({\r\n                          inactive_confirm_date:\r\n                            isActive === \"active\"\r\n                              ? null\r\n                              : moment().format(\"YYYY-MM-DD HH:mm\")\r\n                        })\r\n                      }\r\n                      size=\"sm\"\r\n                    >\r\n                      <i className=\"mdi mdi-content-save\" />\r\n                    </Button>\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={e => {\r\n                        setInactiveEditMode(false);\r\n                        setIsActive(\r\n                          vip.inactive_confirm_date === null\r\n                            ? \"active\"\r\n                            : \"inactive\"\r\n                        );\r\n                      }}\r\n                      size=\"sm\"\r\n                    >\r\n                      <i className=\"mdi mdi-window-close\" />\r\n                    </Button>\r\n                    <FormText>標示玩家的活躍狀態</FormText>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nUserViewBasic.propTypes = {\r\n  vip: PropTypes.object.isRequired,\r\n  onEditWhaleUser: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserViewBasic;\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Table, Button, ButtonGroup, Badge } from \"reactstrap\";\r\nimport Moment from \"react-moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { vipServiceOptions } from \"./whaleOptConfig\";\r\n\r\nconst UserRequestData = ({ requests, lbltext, onDeleteClick }) => {\r\n  const [expand, setExpand] = useState(false);\r\n  return (\r\n    <Row className=\"mt-2\">\r\n      <Col xl={6}>\r\n        <h5 className=\"text-primary\">{lbltext}</h5>\r\n        <div className=\"text-muted\">\r\n          {\" \"}\r\n          共{requests.length}筆{\" \"}\r\n          {requests.length > 5 && !expand ? \"目前顯示最近5筆\" : \"\"}\r\n          {requests.length > 5 ? (\r\n            expand ? (\r\n              <span\r\n                className=\"float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={e => setExpand(!expand)}\r\n              >\r\n                <i className=\"mdi mdi-collapse-all-outline\" /> 收合\r\n              </span>\r\n            ) : (\r\n              <span\r\n                className=\"float-right\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={e => setExpand(!expand)}\r\n              >\r\n                <i className=\"mdi mdi-expand-all-outline\" /> 展開\r\n              </span>\r\n            )\r\n          ) : null}\r\n        </div>\r\n        <Table className=\"mb-0 font-13\" bordered>\r\n          <tbody>\r\n            {requests &&\r\n              (expand ? requests : requests.filter((x, i) => i < 5)).map(r => (\r\n                <tr key={`reply-${r.id}`} className=\"mt-2\">\r\n                  <th style={{ width: \"100px\" }}>\r\n                    <div># {r.id}</div>\r\n\r\n                    <div>專員: {r.admin_name}</div>\r\n                  </th>\r\n                  <td>\r\n                    <div className=\"text-muted\">\r\n                      <Moment format=\"YYYY-MM-DD hh:mm\">{r.create_time}</Moment>\r\n                    </div>\r\n                    <Badge color=\"warning\" className=\"mr-1\">\r\n                      {\r\n                        vipServiceOptions.filter(\r\n                          opt => opt.type == r.service_type\r\n                        )[0].list[r.request_code]\r\n                      }\r\n                    </Badge>\r\n                    <Badge color=\"dark\" className=\"mr-1\">\r\n                      {r.tag}\r\n                    </Badge>\r\n                    {r.note}\r\n                  </td>\r\n                  <td style={{ width: \"50px\" }}>\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        size=\"sm\"\r\n                        color=\"danger\"\r\n                        className=\"btn-icon\"\r\n                        onClick={e => onDeleteClick(r.id)}\r\n                      >\r\n                        <i className=\"mdi mdi-trash-can-outline\"></i>\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n\r\n            {(!requests || requests.length === 0) && (\r\n              <tr>\r\n                <td>尚無資料</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nUserRequestData.propTypes = {\r\n  requests: PropTypes.array.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n \r\n};\r\n\r\nexport default UserRequestData;\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { vipServiceOptions } from \"./whaleOptConfig\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n  Alert,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\nimport PageTitle from \"../../../components/PageTitle\";\r\nimport UserViewBasic from \"./UserViewBasic\";\r\nimport UserRequestData from \"./UserRequestData\";\r\nimport {\r\n  getCurrentWhaleUser,\r\n  updateVipInfo,\r\n  addVipServiceRequest,\r\n  deleteVipServiceRequest,\r\n  clearVIPMessage\r\n} from \"../../../redux/actions\";\r\nconst WhaleUserDashboard = ({\r\n  vip,\r\n  updateOKMessage,\r\n  getCurrentWhaleUser,\r\n  updateVipInfo,\r\n  addVipServiceRequest,\r\n  deleteVipServiceRequest,\r\n  clearVIPMessage,\r\n  match,\r\n  history\r\n}) => {\r\n  const [requestType, setRequestType] = useState(1);\r\n  const [code, setCode] = useState();\r\n  const [reqNote, setReqNote] = useState(\"\");\r\n\r\n  const [tagText, setTagText] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const game_id = match.params.game_id ? match.params.game_id : null;\r\n  const search = window.location.search;\r\n  const params = new URLSearchParams(search);\r\n  const query_user = params.get(\"user\");\r\n  const quickOptionList =\r\n    vipServiceOptions.filter(v => v.type === requestType)[0].list || {};\r\n\r\n  useEffect(() => {\r\n    if (game_id && query_user) {\r\n      \r\n      getCurrentWhaleUser(game_id, query_user, history);\r\n    }\r\n    document.title = \"VIP - 鯨魚用戶檢視\";\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let timeOutId;\r\n    if (updateOKMessage) {\r\n      setTagText(\"\");\r\n      setReqNote(\"\");\r\n\r\n      timeOutId = setTimeout(() => {\r\n        clearVIPMessage();\r\n        //console.log(\"error effect timeOutId\", timeOutId);\r\n      }, 2000);\r\n      return () => {\r\n        clearTimeout(timeOutId);\r\n      };\r\n    }\r\n  }, [updateOKMessage]);\r\n\r\n  const onEditWhaleUser = modifiedContent => {\r\n    if (Object.keys(modifiedContent).length > 0) {\r\n      //fire save aciton\r\n      // console.log(\"modifiedContent\", modifiedContent);\r\n      // console.log(\"game_id\", game_id, vip.char_in_game_id);\r\n\r\n      updateVipInfo(game_id, vip.char_in_game_id, modifiedContent);\r\n    }\r\n  };\r\n  const onDeleteRequestRecord = id => {\r\n    const deleteOk = window.confirm(\"確定要刪除#\" + id + \"這筆紀錄嗎?\");\r\n    if (deleteOk) {\r\n      deleteVipServiceRequest(id);\r\n    }\r\n  };\r\n\r\n  const onAddRequestRecord = () => {\r\n    const record = {\r\n      game_id: vip.site,\r\n      role_id: vip.char_in_game_id,\r\n      service_type: requestType,\r\n      request_code: code,\r\n      tag: tagText,\r\n      note: reqNote\r\n    };\r\n    //console.log(\"record\", record);\r\n\r\n    let tmpErrors = {};\r\n    if (!requestType) {\r\n      tmpErrors.requestType = \"必選\";\r\n    }\r\n    if (!code) {\r\n      tmpErrors.code = \"必選\";\r\n    }\r\n    if (tagText && tagText.length > 10) {\r\n      tmpErrors.tagText = \"字數太長\";\r\n    }\r\n    if (reqNote && reqNote.length > 500) {\r\n      tmpErrors.reqNote = \"字數太長, 請控制在500字內\";\r\n    }\r\n    setFormErrors(tmpErrors);\r\n    if (Object.keys(tmpErrors) > 0) {\r\n      return;\r\n    }\r\n\r\n    addVipServiceRequest(record);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          {\r\n            label: \"VIP\",\r\n            path: \"/vip/whale_users\",\r\n            active: false\r\n          },\r\n          {\r\n            label: \"鯨魚用戶\",\r\n            path: `/vip/whale_users?game_id=${game_id}`,\r\n            active: false\r\n          },\r\n          {\r\n            label: \"檢視用戶資料\",\r\n            path: `/vip/user_dashboard/${game_id}?user=${query_user}`,\r\n            active: true\r\n          }\r\n        ]}\r\n        title=\"檢視用戶資料\"\r\n      />\r\n      <Row className=\"mb-2\">\r\n        <Col lg={6}></Col>\r\n      </Row>\r\n      {vip && (\r\n        <Fragment>\r\n          <UserViewBasic\r\n            vip={vip}\r\n            goBack={e => history.goBack()}\r\n            onEditWhaleUser={onEditWhaleUser}\r\n            updateOKMessage={updateOKMessage}\r\n          />\r\n          <UserRequestData\r\n            requests={vip.request_data.filter(r => r.service_type == \"1\")}\r\n            lbltext=\"服務紀錄\"\r\n            onDeleteClick={onDeleteRequestRecord}\r\n          />\r\n          <UserRequestData\r\n            requests={vip.request_data.filter(r => r.service_type == \"2\")}\r\n            lbltext=\"重點對話節錄\"\r\n            onDeleteClick={onDeleteRequestRecord}\r\n          />\r\n\r\n          <Row className=\"mt-2\">\r\n            <Col lg={4}>\r\n              {updateOKMessage && (\r\n                <Alert color=\"success\" isOpen={updateOKMessage ? true : false}>\r\n                  <div>{updateOKMessage}</div>\r\n                </Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row form>\r\n            <Col md={6}>\r\n              <Card className=\"border p-1 mt-3 mb-1 rounded font-13 bg-light\">\r\n                <CardBody>\r\n                  <h5>添加服務或對話紀錄</h5>\r\n                  <hr />\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <div className=\"form-group\">\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"typeSelect\"\r\n                          id=\"typeSelect\"\r\n                          value={requestType}\r\n                          onChange={e => {\r\n                            if (e.target.value !== \"\") {\r\n                              setRequestType(Number.parseInt(e.target.value));\r\n                            }\r\n                          }}\r\n                          invalid={formErrors.requestType ? true : false}\r\n                        >\r\n                          <option value=\"\">==選擇服務類型==</option>\r\n                          {vipServiceOptions.map(opt => (\r\n                            <option\r\n                              key={`selType-${opt.type}`}\r\n                              value={opt.type}\r\n                            >\r\n                              {opt.label}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </div>\r\n                    </Col>\r\n\r\n                    <Col md={4}>\r\n                      <div className=\"form-group\">\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"codeSelect\"\r\n                          id=\"codeSelect\"\r\n                          onChange={e =>\r\n                            setCode(Number.parseInt(e.target.value))\r\n                          }\r\n                          value={code}\r\n                          invalid={formErrors.code ? true : false}\r\n                        >\r\n                          <option value=\"\">==快選==</option>\r\n\r\n                          {Object.keys(quickOptionList).map(qo => (\r\n                            <option key={`selQuickType-${qo}`} value={qo}>\r\n                              {quickOptionList[qo]}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </div>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <div className=\"form-group\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"txtTag\"\r\n                          id=\"txtTag\"\r\n                          placeholder=\"(選填)自訂標籤\"\r\n                          onChange={e => setTagText(e.target.value)}\r\n                          maxLength=\"10\"\r\n                          value={tagText}\r\n                          invalid={formErrors.tagText ? true : false}\r\n                        />\r\n                        <FormFeedback>{formErrors.tagText}</FormFeedback>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <FormGroup>\r\n                    <Label for=\"txtNote\">說明</Label>\r\n\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      name=\"reqNote\"\r\n                      id=\"reqNote\"\r\n                      rows=\"5\"\r\n                      placeholder=\"(選填) 輸入服務項目相關說明或重點對話, 250字以內...\"\r\n                      onChange={e => setReqNote(e.target.value)}\r\n                      value={reqNote}\r\n                      invalid={formErrors.reqNote ? true : false}\r\n                    />\r\n                    <FormFeedback>{formErrors.reqNote}</FormFeedback>\r\n                  </FormGroup>\r\n\r\n                  <hr />\r\n\r\n                  <Button\r\n                    color=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={onAddRequestRecord}\r\n                  >\r\n                    確認送出\r\n                  </Button>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nWhaleUserDashboard.propTypes = {\r\n  getCurrentWhaleUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  vip: state.VIP.currentWhaleUser,\r\n  updateOKMessage: state.VIP.updateOKMessage\r\n});\r\nexport default connect(mapStateToProps, {\r\n  getCurrentWhaleUser,\r\n  updateVipInfo,\r\n  clearVIPMessage,\r\n  addVipServiceRequest,\r\n  deleteVipServiceRequest\r\n})(WhaleUserDashboard);\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Hyper</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","export * from './auth/actions';\r\nexport * from './layout/actions';\r\nexport * from './appMenu/actions';\r\nexport * from './dashboard/actions';\r\nexport * from './platform/actions';\r\nexport * from './offlinecs/actions';\r\nexport * from './games/actions';\r\nexport * from './servers/actions';\r\nexport * from './adminUsers/actions';\r\nexport * from './serviceAllocate/actions';\r\nexport * from './service/actions';\r\nexport * from './vip/actions';\r\nexport * from './vipoffers/actions';\r\nexport * from './batch/actions';\r\nexport * from './event/actions';\r\n","export const isAddedOptions = {\r\n  0: \"未加入\",\r\n  1: \"已加入\"\r\n};\r\n\r\nexport const vipRankingOptions = [\r\n  {\r\n    value: \"revered\",\r\n    label: \"尊榮R\",\r\n    color: \"success\"\r\n  },\r\n  {\r\n    value: \"red\",\r\n    label: \"紅R\",\r\n    color: \"danger\"\r\n  },\r\n  {\r\n    value: \"black\",\r\n    label: \"黑R\",\r\n    color: \"dark\"\r\n  },\r\n  {\r\n    value: \"platinum\",\r\n    label: \"白金R\",\r\n    color: \"info\"\r\n  },\r\n  {\r\n    value: \"gold\",\r\n    label: \"金R\",\r\n    color: \"warning\"\r\n  },\r\n  {\r\n    value: \"silver\",\r\n    label: \"銀R\",\r\n    color: \"secondary\"\r\n  },\r\n  {\r\n    value: \"general\",\r\n    label: \"普R\",\r\n    color: \"primary\"\r\n  }\r\n];\r\n\r\nexport const vipServiceOptions = [\r\n  {\r\n    type: 1,\r\n    label: \"服務紀錄\",\r\n    icon: \"mdi mdi-room-service-outline\",\r\n    list: {\r\n      \"1\": \"轉職時間限制重置\",\r\n      \"2\": \"更名時間限制重置\",\r\n      \"3\": \"分解物品救回(裝備/坐騎/材料/友好度)\",\r\n      \"4\": \"帳號綁定轉移\",\r\n      \"5\": \"盜用恢復\",\r\n      \"6\": \"儲值異常查詢\",\r\n      \"7\": \"流失關懷\",\r\n      \"8\": \"簡訊通知\",\r\n      \"9\": \"其他\"\r\n    }\r\n  },\r\n  {\r\n    type: 2,\r\n    label: \"重點對話節錄\",\r\n    icon: \"mdi mdi-chat-processing\",\r\n    list: { \"1\": \"心聲建議\", \"2\": \"Bug 反映\", \"9\": \"其他\" }\r\n  }\r\n];\r\n"],"sourceRoot":""}