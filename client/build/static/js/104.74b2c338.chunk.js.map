{"version":3,"sources":["pages/service/statistics/index.js","components/PageTitle.js","redux/actions.js","components/Spinner.js"],"names":["connect","state","antsHandleData","Service","csHandleData","qCountData","csHandleAllocationData","antsHandleAllocationData","question_type","allgames","loading","error","user","Auth","getServiceStatistics","_ref","_useState","useState","_useState2","Object","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","gameId","setGameId","_useState3","_useState4","gameName","setGameName","_useState5","concat","Date","getFullYear","getMonth","toString","padStart","_useState6","yyyymm","setYyyymm","_useState7","_useState8","rptCondition","setRptCondition","_useState9","_useState10","activeTab","setActiveTab","useEffect","document","title","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_Spinner__WEBPACK_IMPORTED_MODULE_26__","className","color","mmGroup","dd","mIndex","yyyy","push","index","curY","curM","react__WEBPACK_IMPORTED_MODULE_4__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_25__","breadCrumbItems","label","path","active","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","md","sm","length","reactstrap__WEBPACK_IMPORTED_MODULE_9__","inline","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","htmlFor","reactstrap__WEBPACK_IMPORTED_MODULE_12__","type","name","id","value","onChange","e","gameid","target","undefined","filter","g","game_id","game_name","map","mItem","key","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","onClick","lg","reactstrap__WEBPACK_IMPORTED_MODULE_15__","tabs","icon","tab","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","href","classnames","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_18__","reactstrap__WEBPACK_IMPORTED_MODULE_19__","tabId","react_csv__WEBPACK_IMPORTED_MODULE_6__","data","item","headers","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","keys","t","filename","getTime","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","reactstrap__WEBPACK_IMPORTED_MODULE_22__","bordered","size","時間","cnt","reduce","b","statTable","role","statData","condition","dataRaw","d","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","dt","admin_name","test_cnt","itemSet","cond","condLabel","prev","curr","indexOf","_ref2","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","Number","parseInt","colSpan","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","PageTitle","props","to","_auth_actions__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__","_layout_actions__WEBPACK_IMPORTED_MODULE_1__","_appMenu_actions__WEBPACK_IMPORTED_MODULE_2__","_dashboard_actions__WEBPACK_IMPORTED_MODULE_3__","_platform_actions__WEBPACK_IMPORTED_MODULE_4__","_offlinecs_actions__WEBPACK_IMPORTED_MODULE_5__","_games_actions__WEBPACK_IMPORTED_MODULE_6__","_servers_actions__WEBPACK_IMPORTED_MODULE_7__","_adminUsers_actions__WEBPACK_IMPORTED_MODULE_8__","_serviceAllocate_actions__WEBPACK_IMPORTED_MODULE_9__","_service_actions__WEBPACK_IMPORTED_MODULE_10__","_vip_actions__WEBPACK_IMPORTED_MODULE_11__","_vipoffers_actions__WEBPACK_IMPORTED_MODULE_12__","_batch_actions__WEBPACK_IMPORTED_MODULE_13__","Spinner","children","Tag","tag","react__WEBPACK_IMPORTED_MODULE_1___default","classNames","spinner-border","spinner-grow","defaultProps"],"mappings":"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","file":"static/js/104.74b2c338.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Table,\r\n  Form,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  ButtonGroup,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { getServiceStatistics } from \"../../../redux/actions\";\r\nimport PageTitle from \"../../../components/PageTitle\";\r\nimport Spinner from \"../../../components/Spinner\";\r\nconst ServiceStatistics = ({\r\n  getServiceStatistics,\r\n  antsHandleData,\r\n  csHandleData,\r\n  qCountData,\r\n  csHandleAllocationData,\r\n  antsHandleAllocationData,\r\n  question_type,\r\n  loading,\r\n  allgames,\r\n  error,\r\n  user\r\n}) => {\r\n  const mainTitle = \"客服案件統計\";\r\n  const mainPath = \"/service\";\r\n\r\n  const [gameId, setGameId] = useState(\"g78naxx2hmt\");\r\n  const [gameName, setGameName] = useState(\"決戰平安京\");\r\n  const [yyyymm, setYyyymm] = useState(\r\n    `${new Date().getFullYear()}-${(new Date().getMonth() + 1)\r\n      .toString()\r\n      .padStart(2, \"0\")}`\r\n  );\r\n\r\n  const [rptCondition, setRptCondition] = useState(\"all\");\r\n\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const tabContents = [\r\n    {\r\n      id: \"1\",\r\n      title: \"提問單\",\r\n      icon: \"mdi mdi-home-variant\"\r\n    },\r\n    {\r\n      id: \"2\",\r\n      title: \"後送案件\",\r\n      icon: \"mdi mdi-account-circle\"\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getServiceStatistics(yyyymm);\r\n    document.title = mainTitle;\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onSearchClick = () => {\r\n    getServiceStatistics(yyyymm);\r\n  };\r\n\r\n  const onGameIDChange = gameid => {\r\n    if (gameid !== \"\" && gameid !== undefined && gameid !== null) {\r\n      setGameId(gameid);\r\n      setGameName(allgames.filter(g => g.game_id === gameid)[0].game_name);\r\n    }\r\n  };\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) {\r\n      setActiveTab(tab);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <Spinner className=\"m-2\" color=\"secondary\" />;\r\n  }\r\n\r\n  let mmGroup = [];\r\n  const dd = new Date();\r\n  const mIndex = dd.getMonth();\r\n  const yyyy = dd.getFullYear();\r\n\r\n  // const mIndex = 0;\r\n  // const yyyy = 2020;\r\n\r\n  mmGroup.push(`${yyyy}-${(mIndex + 1).toString().padStart(2, \"0\")}`);\r\n\r\n  for (let index = 0; index < 5; index++) {\r\n    let curY = yyyy;\r\n    let curM = mIndex - index;\r\n    if (curM <= 0) {\r\n      curM = 12 - index;\r\n      curY = yyyy - 1;\r\n    }\r\n\r\n    mmGroup.push(`${curY}-${curM.toString().padStart(2, \"0\")}`);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <PageTitle\r\n        breadCrumbItems={[\r\n          { label: \"客服\", path: mainPath, active: false },\r\n          { label: mainTitle, path: mainPath, active: true }\r\n        ]}\r\n        title={mainTitle}\r\n      />\r\n      <Row className=\"mt-2\">\r\n        <Col md={6} sm={6}>\r\n          {allgames.length > 0 && (\r\n            <Form inline className=\"mb-2\">\r\n              <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                <Label htmlFor=\"selGameId\" className=\"mr-sm-2\">\r\n                  遊戲:\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"selGameId\"\r\n                  id=\"selGameId\"\r\n                  className=\"custom-select\"\r\n                  value={gameId}\r\n                  onChange={e => onGameIDChange(e.target.value)}\r\n                >\r\n                  <option value=\"\">選擇遊戲...</option>\r\n\r\n                  {allgames.map(mItem => (\r\n                    <option key={`game-` + mItem.game_id} value={mItem.game_id}>\r\n                      {mItem.game_name}\r\n                    </option>\r\n                  ))}\r\n                </Input>\r\n              </FormGroup>\r\n\r\n              <ButtonGroup className=\"btn-group mb-2 ml-3\">\r\n                <Button\r\n                  onClick={e => setRptCondition(\"all\")}\r\n                  color={rptCondition === \"all\" ? \"danger\" : \"light\"}\r\n                >\r\n                  by 日期 + 人員\r\n                </Button>\r\n                <Button\r\n                  onClick={e => setRptCondition(\"date\")}\r\n                  color={rptCondition === \"date\" ? \"danger\" : \"light\"}\r\n                >\r\n                  by 日期\r\n                </Button>\r\n                <Button\r\n                  onClick={e => setRptCondition(\"user\")}\r\n                  color={rptCondition === \"user\" ? \"danger\" : \"light\"}\r\n                >\r\n                  by 人員\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n        <Col md={6} sm={6}>\r\n          <Form inline className=\"mb-2  float-right\">\r\n            <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n              <Label htmlFor=\"selMonth\" className=\"mr-sm-2\">\r\n                月份:\r\n              </Label>\r\n              <Input\r\n                type=\"select\"\r\n                name=\"selMonth\"\r\n                id=\"selMonth\"\r\n                className=\"custom-select\"\r\n                value={yyyymm}\r\n                onChange={e => setYyyymm(e.target.value)}\r\n              >\r\n                {mmGroup.map(mItem => (\r\n                  <option key={`yymm-` + mItem} value={mItem}>\r\n                    {mItem}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"mb-2 mr-1\"\r\n              onClick={onSearchClick}\r\n            >\r\n              搜尋\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Nav tabs className=\"nav-bordered\">\r\n            {tabContents.map((tab, index) => {\r\n              return (\r\n                <NavItem key={`tab_${index}`}>\r\n                  <NavLink\r\n                    href=\"#\"\r\n                    className={classnames({\r\n                      active: activeTab === tab.id\r\n                    })}\r\n                    onClick={() => {\r\n                      toggle(tab.id);\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className={classnames(\r\n                        tab.icon,\r\n                        \"d-lg-none\",\r\n                        \"d-block\",\r\n                        \"mr-1\"\r\n                      )}\r\n                    ></i>\r\n                    <span className=\"d-none d-lg-block\">{tab.title}</span>\r\n                  </NavLink>\r\n                </NavItem>\r\n              );\r\n            })}\r\n          </Nav>\r\n        </Col>\r\n      </Row>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Row className=\"mb-2\">\r\n            <Col lg={4}>\r\n              {qCountData.length > 0 && (\r\n                <CSVLink\r\n                  data={qCountData.filter(item => item.game_id === gameId)}\r\n                  headers={[\r\n                    { label: \"日期\", key: \"時間\" },\r\n                    { label: \"數量\", key: \"cnt\" },\r\n                    ...Object.keys(question_type).map(t => ({\r\n                      label: question_type[t],\r\n                      key: question_type[t]\r\n                    }))\r\n                  ]}\r\n                  filename={\r\n                    gameName +\r\n                    yyyymm +\r\n                    \"提問單進件量\" +\r\n                    new Date().getTime() +\r\n                    \".csv\"\r\n                  }\r\n                >\r\n                  下載 csv檔案\r\n                </CSVLink>\r\n              )}\r\n\r\n              {qCountData && (\r\n                <Card>\r\n                  <CardBody>\r\n                    <h4 className=\"header-title\">{gameName}-提問單進件量</h4>\r\n                    <Table className=\"mb-0\" bordered size=\"sm\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>日期</th>\r\n                          <th>數量</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {qCountData\r\n                          .filter(item => item.game_id === gameId)\r\n                          .map((item, index) => (\r\n                            <tr key={`q_${index}`}>\r\n                              <th>{item.時間}</th>\r\n                              <td>{item.cnt}</td>\r\n                            </tr>\r\n                          ))}\r\n\r\n                        <tr>\r\n                          <th>總計</th>\r\n                          <td>\r\n                            {qCountData\r\n                              .filter(item => item.game_id === gameId)\r\n                              .reduce((a, b) => a + b.cnt, 0)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </CardBody>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n            <Col lg={4}>\r\n              {statTable(\r\n                antsHandleData,\r\n                `${gameName}-蟻力提問單處理量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                question_type\r\n              )}\r\n            </Col>\r\n            <Col lg={4}>\r\n              {statTable(\r\n                csHandleData,\r\n                `${gameName}-客服提問單處理量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                question_type\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <Row className=\"mb-2\">\r\n            <Col lg={4}>\r\n              {statTable(\r\n                antsHandleAllocationData,\r\n                `${gameName}-蟻力後送案件量`,\r\n                gameId,\r\n                yyyymm,\r\n                rptCondition,\r\n                {}\r\n              )}\r\n            </Col>\r\n            {(user.role === \"admin\" || user.role === \"pm\") && (\r\n              <Col lg={4}>\r\n                {statTable(\r\n                  csHandleAllocationData,\r\n                  `${gameName}-客服後送處理量`,\r\n                  gameId,\r\n                  yyyymm,\r\n                  rptCondition,\r\n                  {}\r\n                )}\r\n              </Col>\r\n            )}\r\n          </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nServiceStatistics.propTypes = {\r\n  getServiceStatistics: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  antsHandleData: state.Service.antsHandleData,\r\n  csHandleData: state.Service.csHandleData,\r\n  qCountData: state.Service.qCountData,\r\n  csHandleAllocationData: state.Service.csHandleAllocationData,\r\n  antsHandleAllocationData: state.Service.antsHandleAllocationData,\r\n  question_type: state.Service.question_type,\r\n  allgames: state.Service.allgames,\r\n  loading: state.Service.loading,\r\n  error: state.Service.error,\r\n  user: state.Auth.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { getServiceStatistics })(\r\n  ServiceStatistics\r\n);\r\n\r\nconst statTable = (\r\n  statData,\r\n  label,\r\n  gameId,\r\n  yyyymm,\r\n  condition,\r\n  question_type\r\n) => {\r\n  const dataRaw = statData\r\n    .filter(d => d.game_id === gameId)\r\n    .map(d => ({\r\n      dt: d.時間,\r\n      admin_name: d.admin_name,\r\n      test_cnt: d.test_cnt,\r\n      cnt: d.cnt,\r\n      ...d\r\n    }));\r\n\r\n  let itemSet = [];\r\n  let cond =\r\n    condition === \"all\" ? \"all\" : condition === \"date\" ? \"dt\" : \"admin_name\";\r\n  //let cond = condition ======\"date\" ? \"dt\" : \"admin_name\";\r\n  const condLabel = condition === \"all\" ? \"日期\" : \"人員\";\r\n\r\n  const data =\r\n    cond === \"all\"\r\n      ? dataRaw\r\n      : dataRaw.reduce(function(prev, curr) {\r\n          if (itemSet.indexOf(curr[cond]) < 0) {\r\n            itemSet.push(curr[cond]);\r\n            return [...prev, { ...curr }];\r\n          } else {\r\n            prev = prev.map(user => {\r\n              if (user[cond] === curr[cond]) {\r\n                return {\r\n                  [cond]: user[cond],\r\n                  test_cnt:\r\n                    Number.parseInt(user.test_cnt) +\r\n                    Number.parseInt(curr.test_cnt),\r\n                  cnt: Number.parseInt(user.cnt) + Number.parseInt(curr.cnt)\r\n                };\r\n              } else {\r\n                return user;\r\n              }\r\n            });\r\n            return prev;\r\n          }\r\n        }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <CSVLink\r\n        data={dataRaw}\r\n        headers={[\r\n          { label: \"日期\", key: \"dt\" },\r\n          { label: \"人員\", key: \"admin_name\" },\r\n          { label: \"數量\", key: \"cnt\" },\r\n          { label: \"測試\", key: \"test_cnt\" },\r\n          ...Object.keys(question_type).map(t => ({\r\n            label: question_type[t],\r\n            key: question_type[t]\r\n          }))\r\n        ]}\r\n        filename={label + yyyymm + new Date().getTime() + \".csv\"}\r\n      >\r\n        下載 csv檔案\r\n      </CSVLink>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <h4 className=\"header-title\">{label} </h4>\r\n          <Table className=\"mb-0\" bordered size=\"sm\">\r\n            <thead>\r\n              <tr>\r\n                {condition === \"all\" ? (\r\n                  <Fragment>\r\n                    <th>日期</th> <th>人員</th>\r\n                  </Fragment>\r\n                ) : (\r\n                  <th>{condLabel}</th>\r\n                )}\r\n                <th>數量</th>\r\n                {Object.keys(question_type).length !== 0 && <th>測試</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((item, index) => (\r\n                <tr key={`q_${index}`}>\r\n                  {condition === \"all\" ? (\r\n                    <Fragment>\r\n                      <th>{item.dt}</th> <th>{item.admin_name}</th>\r\n                    </Fragment>\r\n                  ) : (\r\n                    <th>{item[cond]}</th>\r\n                  )}\r\n                  <td>{item.cnt}</td>\r\n                  {Object.keys(question_type).length !== 0 && (\r\n                    <td>{item.test_cnt}</td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n\r\n              <tr>\r\n                {condition === \"all\" ? (\r\n                  <Fragment>\r\n                    <th colSpan=\"2\">總計</th>\r\n                  </Fragment>\r\n                ) : (\r\n                  <th>總計</th>\r\n                )}\r\n\r\n                <td>{data.reduce((a, b) => a + Number.parseInt(b.cnt), 0)}</td>\r\n                {Object.keys(question_type).length !== 0 && (\r\n                  <td>\r\n                    {data.reduce((a, b) => a + Number.parseInt(b.test_cnt), 0)}\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\ntype PageTitleProps = {\n    breadCrumbItems: PropTypes.object,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb>\n                            <BreadcrumbItem>\n                                <Link to=\"/\">Hyper</Link>\n                            </BreadcrumbItem>\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <BreadcrumbItem active key={index}>\n                                        {item.label}\n                                    </BreadcrumbItem>\n                                ) : (\n                                    <BreadcrumbItem key={index}>\n                                        <Link to={item.path}>{item.label}</Link>\n                                    </BreadcrumbItem>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","export * from \"./auth/actions\";\nexport * from \"./layout/actions\";\nexport * from \"./appMenu/actions\";\nexport * from \"./dashboard/actions\";\nexport * from \"./platform/actions\";\nexport * from \"./offlinecs/actions\";\nexport * from \"./games/actions\";\nexport * from \"./servers/actions\";\nexport * from \"./adminUsers/actions\";\nexport * from \"./serviceAllocate/actions\";\nexport * from \"./service/actions\";\nexport * from \"./vip/actions\";\nexport * from \"./vipoffers/actions\";\nexport * from \"./batch/actions\";\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\ntype SpinnerProps = {\n    tag?: string,\n    className?: string,\n    size?: 'lg' | 'md' | 'sm' | null,\n    type: 'bordered' | 'grow',\n    color: string,\n    children?: PropTypes.object,\n};\n\n/**\n * Spinner\n */\nconst Spinner = (props: SpinnerProps) => {\n    const children = props.children || null;\n    const Tag = props.tag;\n\n    return (\n        <Tag\n            role=\"status\"\n            className={classNames(\n                { 'spinner-border': props.type === 'bordered', 'spinner-grow': props.type === 'grow' },\n                [`text-${props.color}`],\n                { [`avatar-${props.size}`]: props.size },\n                props.className\n            )}>\n            {children}\n        </Tag>\n    );\n};\n\nSpinner.defaultProps = {\n    tag: 'div',\n    type: 'bordered',\n    color: 'primary',\n};\n\nexport default Spinner;\n"],"sourceRoot":""}