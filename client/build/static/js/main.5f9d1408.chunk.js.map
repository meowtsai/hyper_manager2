{"version":3,"sources":["redux/service/constants.js","redux/offlinecs/constants.js","redux/vip/constants.js","redux/vipoffers/constants.js","redux/batch/constants.js","redux/serviceAllocate/constants.js","redux/service/actions.js","redux/platform/constants.js","redux/offlinecs/actions.js","redux/auth/constants.js","redux/games/constants.js","redux/layout/constants.js","redux/adminUsers/constants.js","redux/vip/actions.js","redux/vipoffers/actions.js","redux/batch/actions.js","redux/serviceAllocate/actions.js","redux/appMenu/constants.js","constants/layout.js","redux/dashboard/constants.js","redux/viprpt/constants.js","redux/event/constants.js","redux/platform/actions.js","redux/servers/constants.js","redux/layout/actions.js","helpers/authUtils.js","redux/auth/actions.js","redux/games/actions.js","redux/adminUsers/actions.js","redux/appMenu/actions.js","redux/dashboard/actions.js","redux/servers/actions.js","redux/viprpt/actions.js","redux/event/actions.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/dashboard/reducers.js","redux/platform/reducers.js","redux/offlinecs/reducers.js","redux/games/reducers.js","redux/servers/reducers.js","redux/adminUsers/reducers.js","redux/serviceAllocate/reducers.js","redux/vip/reducers.js","redux/vipoffers/reducers.js","redux/viprpt/reducers.js","redux/service/reducers.js","redux/batch/reducers.js","redux/event/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/dashboard/saga.js","redux/platform/saga.js","redux/offlinecs/saga.js","redux/games/saga.js","redux/servers/saga.js","redux/adminUsers/saga.js","redux/serviceAllocate/saga.js","redux/service/saga.js","redux/vip/saga.js","redux/vipoffers/saga.js","redux/viprpt/saga.js","redux/batch/saga.js","redux/event/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","GET_QUESTIONS","GET_QUESTIONS_SUCCESS","GET_QUESTIONS_FAILED","UPDATE_QUESTION_TYPE","UPDATE_QUESTION_TYPE_SUCCESS","UPDATE_QUESTION_TYPE_FAILED","UPDATE_QUESTION_STATUS","UPDATE_QUESTION_STATUS_SUCCESS","UPDATE_QUESTION_STATUS_FAILED","GET_TEST_DATA","GET_TEST_DATA_SUCCESS","GET_TEST_DATA_FAILED","GET_OVERVIEW","GET_OVERVIEW_SUCCESS","GET_OVERVIEW_FAILED","GET_CURRENT_QUESTION","GET_CURRENT_QUESTION_SUCCESS","GET_CURRENT_QUESTION_FAILED","ALLOCATE_QUESTION","ALLOCATE_QUESTION_SUCCESS","ALLOCATE_QUESTION_FAILED","CLEAR_MESSAGE","REPLY_QUESTION","REPLY_QUESTION_SUCCESS","REPLY_QUESTION_FAILED","CLOSE_QUESTION","CLOSE_QUESTION_SUCCESS","CLOSE_QUESTION_FAILED","GET_SERVICE_STATISTICS","GET_SERVICE_STATISTICS_SUCCESS","GET_SERVICE_STATISTICS_FAILED","GET_SERVICE_STATISTICS_BY_HOUR","GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS","GET_SERVICE_STATISTICS_BY_HOUR_FAILED","GET_SERVICE_CONFIG","GET_SERVICE_CONFIG_SUCCESS","GET_QUESTIONS_BY_USER","GET_QUESTIONS_BY_USER_SUCCESS","GET_QUESTIONS_BY_USER_FAILED","FAVORITE_QUESTION_ACTION","FAVORITE_QUESTION_ACTION_SUCCESS","FAVORITE_QUESTION_ACTION_FAILED","ADD_QUESTION_TO_BATCH","ADD_QUESTION_TO_BATCH_SUCCESS","ADD_QUESTION_TO_BATCH_FAILED","REMOVE_QUESTION_FROM_BATCH","REMOVE_QUESTION_FROM_BATCH_SUCCESS","REMOVE_QUESTION_FROM_BATCH_FAILED","ADD_MULTIPLE_QUESTIONS_TO_BATCH","ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS","ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED","ADD_USER_ACTION_LOG","GET_GOV_DATA","GET_GOV_DATA_SUCCESS","GET_GOV_DATA_FAILED","EDIT_RECORD","EDIT_RECORD_SUCCESS","EDIT_RECORD_FAILED","GET_CURRENT","GET_CURRENT_SUCCESS","GET_CURRENT_FAILED","EDIT_CPL_REPLY","EDIT_CPL_REPLY_SUCCESS","EDIT_CPL_REPLY_FAILED","DELETE_CPL","DELETE_CPL_SUCCESS","DELETE_CPL_FAILED","MOVE_CPL","MOVE_CPL_SUCCESS","MOVE_CPL_FAILED","EDIT_CPL_MEDIATION","EDIT_CPL_MEDIATION_SUCCESS","EDIT_CPL_MEDIATION_FAILED","DELETE_CPL_REPLY","DELETE_CPL_REPLY_SUCCESS","DELETE_CPL_REPLY_FAILED","DELETE_CPL_MEDIATION","DELETE_CPL_MEDIATION_SUCCESS","DELETE_CPL_MEDIATION_FAILED","EDIT_CPL_REF","EDIT_CPL_REF_SUCCESS","EDIT_CPL_REF_FAILED","DELETE_CPL_REF","DELETE_CPL_REF_SUCCESS","DELETE_CPL_REF_FAILED","ADD_CPL_ATTACHMENT","ADD_CPL_ATTACHMENT_SUCCESS","ADD_CPL_ATTACHMENT_FAILED","DELETE_CPL_ATTACHMENT","DELETE_CPL_ATTACHMENT_SUCCESS","DELETE_CPL_ATTACHMENT_FAILED","DELETE_GOV_LETTER","DELETE_GOV_LETTER_SUCCESS","DELETE_GOV_LETTER_FAILED","GET_VIP_GAMES","GET_VIP_GAMES_SUCCESS","GET_VIP_GAMES_FAILED","GET_VIP","GET_VIP_SUCCESS","GET_VIP_FAILED","UPDATE_VIP_STATUS","UPDATE_VIP_STATUS_SUCCESS","UPDATE_VIP_STATUS_FAILED","CLEAR_VIP_MESSAGE","DELETE_VIP_REQUEST","DELETE_VIP_REQUEST_SUCCESS","DELETE_VIP_REQUEST_FAILED","ADD_VIP_REQUEST","ADD_VIP_REQUEST_SUCCESS","ADD_VIP_REQUEST_FAILED","ADD_VIP_REQUEST_VALIDATION_FAILED","GET_CURRENT_WHALE_USER","GET_CURRENT_WHALE_USER_SUCCESS","GET_CURRENT_WHALE_USER_FAILED","UPDATE_VIP_INFO","UPDATE_VIP_INFO_SUCCESS","UPDATE_VIP_INFO_FAILED","GET_VIP_REQUESTS","GET_VIP_REQUESTS_SUCCESS","GET_VIP_REQUESTS_FAILED","GET_VIP_OFFERS","GET_VIP_OFFERS_SUCCESS","GET_VIP_OFFERS_FAILED","CLEAR_VIP_OFFERS_MESSAGE","GET_VIP_ORDERS","GET_VIP_ORDERS_SUCCESS","GET_VIP_ORDERS_FAILED","GET_CURRENT_VIP_REPORT","GET_CURRENT_VIP_REPORT_SUCCESS","GET_CURRENT_VIP_REPORT_FAILED","GET_VIP_PRODS_BY_GAMEID","GET_VIP_PRODS_BY_GAMEID_SUCCESS","GET_VIP_PRODS_BY_GAMEID_FAILED","EDIT_VIP_WIRE_REPORT","EDIT_VIP_WIRE_REPORT_SUCCESS","EDIT_VIP_WIRE_REPORT_FAILED","DELETE_VIP_WIRE_REPORT","DELETE_VIP_WIRE_REPORT_SUCCESS","DELETE_VIP_WIRE_REPORT_FAILED","GET_CURRENT_VIP_PRODUCT","GET_CURRENT_VIP_PRODUCT_SUCCESS","GET_CURRENT_VIP_PRODUCT_FAILED","EDIT_VIP_PRODUCT","EDIT_VIP_PRODUCT_SUCCESS","EDIT_VIP_PRODUCT_FAILED","GET_BATCH_TASKS","GET_BATCH_TASKS_SUCCESS","GET_BATCH_TASKS_FAILED","EDIT_BATCH_TASK","EDIT_BATCH_TASK_SUCCESS","EDIT_BATCH_TASK_FAILED","DELETE_BATCH_TASK","DELETE_BATCH_TASK_SUCCESS","DELETE_BATCH_TASK_FAILED","CLEAR_BATCH_TASK_MESSAGE","GET_CURRENT_BATCH_TASK","GET_CURRENT_BATCH_TASK_SUCCESS","GET_CURRENT_BATCH_TASK_FAILED","REMOVE_BATCH_Q","REMOVE_BATCH_Q_SUCCESS","REMOVE_BATCH_Q_FAILED","REMOVE_Q_FROM_BATCH","REMOVE_Q_FROM_BATCH_SUCCESS","REMOVE_Q_FROM_BATCH_FAILED","BATCH_REPLY_ACTION","BATCH_REPLY_ACTION_SUCCESS","BATCH_REPLY_ACTION_FAILED","GET_ALLOCATE_DATA","GET_ALLOCATE_DATA_SUCCESS","GET_ALLOCATE_DATA_FAILED","GET_ALLOCATE_BY_ID","GET_ALLOCATE_BY_ID_SUCCESS","GET_ALLOCATE_BY_ID_FAILED","POST_ALLOCATION","POST_ALLOCATION_SUCCESS","POST_ALLOCATION_FAILED","PUT_ALLOCATION","PUT_ALLOCATION_SUCCESS","PUT_ALLOCATION_FAILED","TAKE_ALLOCATION_TASKS","TAKE_ALLOCATION_TASKS_SUCCESS","TAKE_ALLOCATION_TASKS_FAILED","CLEAR_ALLOCATION_MESSAGE","REASSIGN_ALLOCATION_TASK","REASSIGN_ALLOCATION_TASK_SUCCESS","REASSIGN_ALLOCATION_TASK_FAILED","getQuestions","getQuestionsSuccess","getQuestionsFailed","getQuestionsByUser","getQuestionsByUserSuccess","getQuestionsByUserFailed","getCurrentQuestion","getCurrentQuestionSuccess","getCurrentQuestionFailed","updateQuestionType","updateQuestionTypeSuccess","updateQuestionTypeFailed","allocateQuestion","allocateQuestionSuccess","allocateQuestionFailed","replyQuestion","replyQuestionSuccess","replyQuestionFailed","closeQuestion","closeQuestionSuccess","closeQuestionFailed","updateQuestionStatus","updateQuestionStatusSuccess","updateQuestionStatusFailed","getTestDataSuccess","getTestDataFailed","getOverview","getOverviewSuccess","getOverviewFailed","getServiceStatistics","getServiceStatisticsSuccess","getServiceStatisticsFailed","getServiceStatisticsByHour","getServiceStatisticsByHourSuccess","getServiceStatisticsByHourFailed","clearMessage","getServiceConfig","getServiceConfigSuccess","favorQuestion","favorQuestionSuccess","favorQuestionFailed","addQuestionToBatch","addQuestionToBatchSuccess","addQuestionToBatchFailed","removeQuestionFromBatch","removeQuestionFromBatchSuccess","removeQuestionFromBatchFailed","addMultipleQuestionsToBatch","addMultipleQuestionsToBatchSuccess","addMultipleQuestionsToBatchFailed","addUserActionLog","_constants__WEBPACK_IMPORTED_MODULE_0__","condition","type","payload","data","error","question_id","qId","newType","result","aField","allocateStatus","replyContent","closeType","newStatus","yyyymm","sDate","action","batch_id","errors","ids","act","func","desc","UPDATE_PASSWORD","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILED","GET_PRESET_MESSAGE","GET_PRESET_MESSAGE_SUCCESS","GET_PRESET_MESSAGE_FAILED","EDIT_PRESET_MESSAGE","EDIT_PRESET_MESSAGE_SUCCESS","EDIT_PRESET_MESSAGE_FAILED","DELETE_PRESET_MESSAGE","DELETE_PRESET_MESSAGE_SUCCESS","DELETE_PRESET_MESSAGE_FAILED","getOfflineCsData","getOfflineCsDataSuccess","getOfflineCsDataFailed","editRecord","editRecordSuccess","editRecordFailed","getCurrentRecord","getCurrentRecordSuccess","getCurrentRecordFailed","editCplReply","editCplReplySuccess","editCplReplyFailed","editCplMediation","editCplMediationSuccess","editCplMediationFailed","deleteCplCase","deleteCplCaseSuccess","deleteCplCaseFailed","deleteGovLetter","deleteGovLetterSuccess","deleteGovLetterFailed","deleteCplCaseReply","deleteCplCaseReplySuccess","deleteCplCaseReplyFailed","deleteCplMediation","deleteCplMediationSuccess","deleteCplMediationFailed","moveCplCase","moveCplCaseSuccess","moveCplCaseFailed","editCplRef","editCplRefSuccess","editCplRefFailed","deleteCplRef","deleteCplRefSuccess","deleteCplRefFailed","addCplAttachment","addCplAttachmentSuccess","addCplAttachmentFailed","deleteCplAttachment","deleteCplAttachmentSuccess","deleteCplAttachmentFailed","dataType","records","record","affectedId","record_id","history","id","case_id","ref_id","attachment_id","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","GET_GAMES_DATA_SUCCESS","GET_GAMES_DATA_FAILED","GET_GAMES_DATA","EDIT_GAME","EDIT_GAME_SUCCESS","EDIT_GAME_FAILED","GET_CURRENT_GAME","GET_CURRENT_GAME_SUCCESS","GET_CURRENT_GAME_FAILED","CLEAR_CURRENT_GAME","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","GET_USERS","GET_USERS_SUCCESS","GET_USERS_FAILED","GET_USER_TASKS","GET_USER_TASKS_SUCCESS","GET_USER_TASKS_FAILED","GET_USER_LOGS","GET_USER_LOGS_SUCCESS","GET_USER_LOGS_FAILED","getVipGames","getVipGamesSuccess","getVipGamesFailed","getVip","getVipSuccess","getVipFailed","putVip","putVipSuccess","putVipFailed","clearVIPMessage","deleteVipServiceRequest","deleteVipServiceRequestSuccess","deleteVipServiceRequestFailed","addVipServiceRequest","addVipServiceRequestSuccess","addVipServiceRequestFailed","getCurrentWhaleUser","getCurrentWhaleUserSuccess","getCurrentWhaleUserFailed","updateVipInfo","updateVipInfoSuccess","updateVipInfoFailed","getVipRequests","getVipRequestsSuccess","getVipRequestsFailed","game_id","uid","command","role_id","fields","getVipOffers","getVipOffersSuccess","getVipOffersFailed","getVipProductsByGameId","getVipProductsByGameIdSuccess","getVipProductsByGameIdFailed","getVipOrders","getVipOrdersSuccess","getVipOrdersFailed","getCurrentVipReport","getCurrentVipReportSuccess","getCurrentVipReportFailed","editVipWireReport","editVipWireReportSuccess","editVipWireReportFailed","deleteVipWireReport","deleteVipWireReportSuccess","deleteVipWireReportFailed","getCurrentVipProduct","getCurrentVipProductSuccess","getCurrentVipProductFailed","editVipProduct","editVipProductSuccess","editVipProductFailed","report_id","product_id","getBatchTasks","getBatchTasksSuccess","getBatchTasksFailed","editBatchTask","editBatchTaskSuccess","editBatchTaskFailed","deleteBatchTask","deleteBatchTaskSuccess","deleteBatchTaskFailed","clearBatchTaskMessage","getCurrentBatchTask","getCurrentBatchTaskSuccess","getCurrentBatchTaskFailed","removeBatchQ","removeBatchQSuccess","removeBatchQFailed","removeQFromBatch","removeQFromBatchSuccess","removeQFromBatchFailed","batchReplyAction","batchReplyActionSuccess","batchReplyActionFailed","replyData","reassignAllocationTask","reassignAllocationTaskSuccess","reassignAllocationTaskFailed","takeAllocationTasks","takeAllocationTasksSuccess","takeAllocationTasksFailed","getAllocateById","getAllocateByIdSuccess","getAllocateByIdFailed","getAllocateData","getAllocateDataSuccess","getAllocateDataFailed","postAllocation","postAllocationSuccess","postAllocationFailed","putAllocation","putAllocationSuccess","putAllocationFailed","clearAllocationMessage","allocation_id","new_assignee","qid","allocation_cause","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","GET_DATA","GET_DATA_SUCCESS","GET_DATA_FAILED","GET_VIP_DASHBOARD_DATA","GET_VIP_DASHBOARD_DATA_SUCCESS","GET_VIP_DASHBOARD_DATA_FAILED","GET_SERIAL_RECORDS","GET_SERIAL_RECORDS_SUCCESS","GET_SERIAL_RECORDS_FAILED","updatePassword","updatePasswordSuccess","updatePasswordFailed","getPresetMessage","getPresetMessageSuccess","getPresetMessageFailed","editPresetMessage","editPresetMessageSuccess","editPresetMessageFailed","deletePresetMessage","deletePresetMessageSuccess","deletePresetMessageFailed","clearPresetMessageMessage","account","password","GET_SERVERS","GET_SERVERS_SUCCESS","GET_SERVERS_FAILED","changeLayout","changeLayoutWidth","changeSidebarTheme","changeSidebarType","hideRightSidebar","layout","width","theme","sidebarType","isUserAuthenticated","getLoggedInUser","jwt_decode__WEBPACK_IMPORTED_MODULE_0__","jwt_decode__WEBPACK_IMPORTED_MODULE_0___default","n","react_cookie__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_2__","axios__WEBPACK_IMPORTED_MODULE_2___default","user","token","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","axios","defaults","headers","common","Cookies","get","JSON","parse","loginUser","loginUserSuccess","loginUserFailed","registerUser","registerUserSuccess","registerUserFailed","logoutUser","forgetPassword","forgetPasswordSuccess","forgetPasswordFailed","username","fullname","email","passwordResetStatus","getGames","getGamesSuccess","getGamesFailed","editGame","editGameSuccess","editGameFailed","getCurrentGame","getCurrentGameSuccess","getCurrentGameFailed","clearCurrentGame","getAdminUsers","getAdminUsersSuccess","getAdminUsersFailed","getUserTasks","getUserTasksSuccess","getUserLogs","getUserLogsSuccess","getUserLogsFailed","role","users","tasks","_ref","date_begin","date_end","logs","initMenu","initMenuSuccess","changeActiveMenuFromLocation","changeActiveMenuFromLocationSuccess","menuItems","activatedMenuItemIds","getData","getDataSuccess","getDataFailed","startDate","endDate","summary","getServersByGameId","getServersSuccess","getServersFailed","getVipDashboardData","getVipDashboardDataSuccess","getVipDashboardDataFailed","option","getSerialEventRecords","getSerialEventRecordsSuccess","getSerialEventRecordsFailed","event_id","loading","react_default","a","createElement","AuthLayout","Loadable","loader","e","then","bind","render","loaded","props","Component","default","VerticalLayout","HorizontalLayout","DetachedLayout","withLayout","WrappedComponent","HOC","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getLayout","layoutCls","layoutType","layoutConstants","inherits","createClass","key","value","Layout","react","fallback","connect","state","Login","React","lazy","Promise","all","Logout","Register","ForgetPassword","Confirm","EcommerceDashboard","CRMDashboard","AdminDashboard","CalendarApp","Projects","ProjectDetail","EcommerceProducts","ProductDetails","Orders","OrderDetails","Customers","Cart","Checkout","Sellers","Kanban","Inbox","EmailDetail","Starter","Profile","ErrorPageNotFound","ServerError","ErrorForbidden","Invoice","FAQ","Pricing","Cards","Buttons","Modals","Tabs","Notifications","Grid","General","Typography","Icons","Spinners","Widgets","BasicForms","FormValidation","FormAdvanced","FormWizard","FileUpload","Editors","ApexChart","BriteChart","ChartJs","BasicTables","AdvancedTables","TestTable","GoogleMaps","ModifyPassword","PresetMessageHome","UserLogsHome","CplCaseHome","CplCaseForm","CplCaseView","GovLetterHome","PersonalVisitHome","PersonalVisitForm","GovLetterForm","ServiceOverview","ServiceStatistics","ServiceStatisticsByHour","QuestionsQueryHome","AllocateListPage","QuesionsListPage","SingleQuestionPage","TestPage","BatchListPage","BatchTaskView","WhaleUserHome","WhaleUserDashboard","VipDashboardHome","RequestReportHome","VipOfferHome","VipOfferForm","VipOrdersHome","VipOrdersForm","GamesHome","GamesEditForm","PrivateRoute","component","roles","rest","objectWithoutProperties","react_router","assign","to","pathname","from","location","loggedInUser","indexOf","myDashboardRoutes","path","name","icon","header","children","badge","variant","text","route","dashboardRoutes","appRoutes","pageRoutes","uiRoutes","formsRoutes","featuresRoutes","serviceRoutes","exact","offlineRoutes","vipRoutes","gamesRoutes","eventsRoutes","allRoutes","Route","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","toConsumableArray","Routes","react_router_dom","map","index","App","routes_Routes","Boolean","window","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","undefined","objectSpread","Auth","AppMenu","stat","Dashboard","updated","preset_messages","updateOKMessage","Platform","msg","updField","toString","filter","deleted_id","currentRecord","OfflineCS","list","config_status","replies","re","mediations","attachments","mediation","refs","ref_case_list","reply","Games","Servers","user_tasks","AdminUsers","allocation","allocation_logs","allocation_quick_msg","allocationStatus","cs_members","ServiceAllocate","newList","log","allocate_status","assignee_name","assignee","lastestNote","allocate_note","ins_status","newTasks","updatedField","newLog","all_records","game_list","vip_list","currentWhaleUser","requestData","not_allowed","VIP","vip","s","request_data","newRecord","newReqData","vip_offer_list","vip_orders_list","vip_prods","current_report","current_product","affectedRecord","VipOffers","report","vip_dashboard_data","VipRpt","current","allgames","antsHandleData","qCountData","csHandleData","csHandleAllocationData","antsHandleAllocationData","statReportData","games_list","user_history","add_favor_ok","Service","tmpGameIds","keys","status","q_batch_info","batch_info","q","is_batch","Number","parseInt","removed_q_id","question","is_favorite","updateQuestionData","question_type","question_status","cs_admins","ants_admins","reduce","prev","curr","game_name","statReplyData","_action$payload","_action$payload2","ovToday","ovTotal","ovAllocate","ovAllocateNew","_action$payload3","query","reply_query","newAllocationStatus","allocation_status","test_list","BatchTasks","task","q_list","affectedRow","mode","batch_tasks","games","serial_list","Event","combineReducers","OfflineCs","fetchJSON","url","options","fetch","response","json","catch","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","_ref$payload","message","regenerator_default","wrap","_context","next","method","Content-Type","sent","put","t0","t1","abrupt","stop","_marked","_ref2","_context2","_marked2","_ref3","_ref3$payload","_context3","body","_marked3","_ref4","_context4","_marked4","_context5","takeEvery","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","fork","_marked9","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","saga_marked","saga_marked2","saga_marked3","saga_marked4","saga_marked5","saga_marked6","saga_marked7","saga_marked8","saga_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","_context14","_marked14","_context15","_marked15","uuid","utils","assignIdAndParent","parentId","active","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","menuItem","err","return","assignIds","appMenu_saga_marked","appMenu_saga_marked2","appMenu_saga_marked3","appMenu_saga_marked4","appMenu_saga_marked5","watchGetData","dashboardSaga","dashboard_saga_marked","dashboard_saga_marked2","dashboard_saga_marked3","getPresetMessageData","editPresetMessageData","deletePresetMessageData","watchChangePassword","watchgetPresetMessageData","watchUpdatePresetMessageData","watchDeletePresetMessageData","PlatformSaga","platform_saga_marked","platform_saga_marked2","platform_saga_marked3","platform_saga_marked4","platform_saga_marked5","platform_saga_marked6","platform_saga_marked7","platform_saga_marked8","platform_saga_marked9","moveCplRecord","addCplAttach","delCplCase","delGovLetter","delCplCaseReply","delCplCaseAttachment","delCplMd","watchGetCurrentRecordData","watchEditRecord","watchEditCplReply","watchEditCplMediation","watchDeleteCpl","watchdelGovLetter","watchDeleteCplReply","watchDeleteCplMediation","watchMoveCplStatus","watchEditCplRef","watchDeleteCplRef","watchAddCplAttach","watchDelCplAttach","offlineCsSaga","offlinecs_saga_marked","offlinecs_saga_marked2","offlinecs_saga_marked3","offlinecs_saga_marked4","_ref5","offlinecs_saga_marked5","_ref6","offlinecs_saga_marked6","_ref7","offlinecs_saga_marked7","_ref8","offlinecs_saga_marked8","_ref9","offlinecs_saga_marked9","_ref10","_ref10$payload","saga_marked10","_ref11","_ref11$payload","saga_marked11","_ref12","saga_marked12","_ref13","saga_marked13","_ref14","saga_marked14","saga_marked15","_context16","_marked16","_context17","_marked17","_context18","_marked18","_context19","_marked19","_context20","_marked20","_context21","_marked21","_context22","_marked22","_context23","_marked23","_context24","_marked24","_context25","_marked25","_context26","_marked26","_context27","_marked27","_context28","_marked28","_context29","_marked29","watchGetGameData","watchGetCurrentGameData","watchEditGameRecord","gamesSaga","games_saga_marked","games_saga_marked2","games_saga_marked3","games_saga_marked4","games_saga_marked5","games_saga_marked6","games_saga_marked7","serversSaga","gameId","servers_saga_marked","servers_saga_marked2","servers_saga_marked3","getAdminUsersByRole","getUserTask","getUserLog","watchGetUserTasks","watchGetUserLogs","adminUsersSaga","adminUsers_saga_marked","adminUsers_saga_marked2","_ref2$payload","adminUsers_saga_marked3","adminUsers_saga_marked4","adminUsers_saga_marked5","adminUsers_saga_marked6","adminUsers_saga_marked7","reassignAllocation","watchGetDataById","watchPostAllocationData","watchPutAllocationData","watchTakeAllocationTasks","watchReassignAllocation","serviceAllocateSaga","serviceAllocate_saga_marked","serviceAllocate_saga_marked2","allocate_cause","serviceAllocate_saga_marked3","_ref4$payload","serviceAllocate_saga_marked4","serviceAllocate_saga_marked5","serviceAllocate_saga_marked6","serviceAllocate_saga_marked7","serviceAllocate_saga_marked8","serviceAllocate_saga_marked9","serviceAllocate_saga_marked10","serviceAllocate_saga_marked11","serviceAllocate_saga_marked12","serviceAllocate_saga_marked13","getQuestionsData","getCurrentQuestionData","getQuestionsByUserData","getTestData","getServiceStat","getServiceStatByHour","updateType","updateStatus","updateQuestionFavorite","addIdsToBatch","logUserAction","watchGetCurrent","watchGetTestData","watchOverviewData","watchStatData","watchStatDataByHour","watchUpdateType","watchallocateQuestion","watchReplyQuestion","watchCloseQuestion","watchUpdateStatus","watchGetServiceConfig","watchGetRelaventUserData","watchupdateQuestionFavorite","watchAddQuestionToBatch","watchRemoveQuestionFromBatch","watchAddMultiToBatch","watchUserActionLog","serviceSaga","service_saga_marked","service_saga_marked2","service_saga_marked3","service_saga_marked4","service_saga_marked5","service_saga_marked6","service_saga_marked7","service_saga_marked8","service_saga_marked9","service_saga_marked10","service_saga_marked11","service_saga_marked12","service_saga_marked13","service_saga_marked14","service_saga_marked15","saga_marked16","_ref15","_ref15$payload","saga_marked17","_ref16","_ref16$payload","saga_marked18","saga_marked19","saga_marked20","saga_marked21","saga_marked22","saga_marked23","saga_marked24","saga_marked25","saga_marked26","saga_marked27","saga_marked28","saga_marked29","_context30","_marked30","_context31","_marked31","_context32","_marked32","_context33","_marked33","_context34","_marked34","_context35","_marked35","_context36","_marked36","_context37","_marked37","getVipReqData","getVIP","getSingleVip","putVIP","updateVIPInfo","delVIPRequest","addVIPRequest","watchGetGames","watchGetVip","watchPutVip","watchDelVipRequest","watchAddVipRequest","watchGetCurrentWhaleUser","watchUpdateVIPInfo","watchGetVipReqData","vipSaga","vip_saga_marked","beginTime","endTime","vip_saga_marked2","vip_saga_marked3","encodeURIComponent","vip_saga_marked4","vip_saga_marked5","_ref5$payload","vip_saga_marked6","vip_saga_marked7","vip_saga_marked8","vip_saga_marked9","vip_saga_marked10","vip_saga_marked11","vip_saga_marked12","vip_saga_marked13","vip_saga_marked14","vip_saga_marked15","vip_saga_marked16","vip_saga_marked17","getVipOrder","getProdsByGameId","delVIPWReport","getCurrentVipProductRecord","editVipProductRecord","watchGetOffers","watchGetOrders","watchGetCurrentReport","watchGetProdsByGameId","watchEditVipWireReport","watchDeleteVipWireReport","watchGetCurrentVipProductRecord","watcheditVipProductRecord","vipOfferSaga","vipoffers_saga_marked","vipoffers_saga_marked2","vipoffers_saga_marked3","vipoffers_saga_marked4","vipoffers_saga_marked5","vipoffers_saga_marked6","vipoffers_saga_marked7","vipoffers_saga_marked8","vipoffers_saga_marked9","vipoffers_saga_marked10","vipoffers_saga_marked11","vipoffers_saga_marked12","vipoffers_saga_marked13","vipoffers_saga_marked14","vipoffers_saga_marked15","vipoffers_saga_marked16","vipoffers_saga_marked17","getVipDashboard","watchGetVipRptData","vipRptSaga","function","viprpt_saga_marked","viprpt_saga_marked2","viprpt_saga_marked3","getCurrentBatch","batchReply","delBatchTask","removeBatchQuestions","watchGetBatchTasksData","watchEditBatchRecord","watchDeleteBatchRecord","watchgetCurrentBatch","watchgetRemoveBatchQ","watchgetRemoveQFromBatch","watchBatchReply","batchTaskSaga","batch_saga_marked","batch_saga_marked2","batch_saga_marked3","batch_saga_marked4","batch_saga_marked5","batch_saga_marked6","batch_saga_marked7","batch_saga_marked8","batch_saga_marked9","batch_saga_marked10","batch_saga_marked11","batch_saga_marked12","batch_saga_marked13","batch_saga_marked14","batch_saga_marked15","getSerialRecords","watchGetSerialRecords","EventSaga","event_saga_marked","event_saga_marked2","event_saga_marked3","rootSaga","getState","layoutSaga","platformSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","es","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f9d1408.chunk.js","sourcesContent":["export const GET_QUESTIONS = 'GET_QUESTIONS';\r\nexport const GET_QUESTIONS_SUCCESS = 'GET_QUESTIONS_SUCCESS';\r\nexport const GET_QUESTIONS_FAILED = 'GET_QUESTIONS_FAILED';\r\n\r\nexport const UPDATE_QUESTION_TYPE = 'UPDATE_QUESTION_TYPE';\r\nexport const UPDATE_QUESTION_TYPE_SUCCESS = 'UPDATE_QUESTION_TYPE_SUCCESS';\r\nexport const UPDATE_QUESTION_TYPE_FAILED = 'UPDATE_QUESTION_TYPE_FAILED';\r\n\r\nexport const UPDATE_QUESTION_STATUS = 'UPDATE_QUESTION_STATUS';\r\nexport const UPDATE_QUESTION_STATUS_SUCCESS = 'UPDATE_QUESTION_STATUS_SUCCESS';\r\nexport const UPDATE_QUESTION_STATUS_FAILED = 'UPDATE_QUESTION_STATUS_FAILED';\r\n\r\nexport const GET_TEST_DATA = 'GET_TEST_DATA';\r\nexport const GET_TEST_DATA_SUCCESS = 'GET_TEST_DATA_SUCCESS';\r\nexport const GET_TEST_DATA_FAILED = 'GET_TEST_DATA_FAILED';\r\n\r\nexport const GET_OVERVIEW = 'GET_OVERVIEW';\r\nexport const GET_OVERVIEW_SUCCESS = 'GET_OVERVIEW_SUCCESS';\r\nexport const GET_OVERVIEW_FAILED = 'GET_OVERVIEW_FAILED';\r\n\r\nexport const GET_CURRENT_QUESTION = 'GET_CURRENT_QUESTION';\r\nexport const GET_CURRENT_QUESTION_SUCCESS = 'GET_CURRENT_QUESTION_SUCCESS';\r\nexport const GET_CURRENT_QUESTION_FAILED = 'GET_CURRENT_QUESTION_FAILED';\r\n\r\nexport const ALLOCATE_QUESTION = 'ALLOCATE_QUESTION';\r\nexport const ALLOCATE_QUESTION_SUCCESS = 'ALLOCATE_QUESTION_SUCCESS';\r\nexport const ALLOCATE_QUESTION_FAILED = 'ALLOCATE_QUESTION_FAILED';\r\n\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\r\n\r\nexport const REPLY_QUESTION = 'REPLY_QUESTION';\r\nexport const REPLY_QUESTION_SUCCESS = 'REPLY_QUESTION_SUCCESS';\r\nexport const REPLY_QUESTION_FAILED = 'REPLY_QUESTION_FAILED';\r\n\r\nexport const CLOSE_QUESTION = 'CLOSE_QUESTION';\r\nexport const CLOSE_QUESTION_SUCCESS = 'CLOSE_QUESTION_SUCCESS';\r\nexport const CLOSE_QUESTION_FAILED = 'CLOSE_QUESTION_FAILED';\r\n\r\nexport const GET_SERVICE_STATISTICS = 'GET_SERVICE_STATISTICS';\r\nexport const GET_SERVICE_STATISTICS_SUCCESS = 'GET_SERVICE_STATISTICS_SUCCESS';\r\nexport const GET_SERVICE_STATISTICS_FAILED = 'GET_SERVICE_STATISTICS_FAILED';\r\n\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR = 'GET_SERVICE_STATISTICS_BY_HOUR';\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS =\r\n  'GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS';\r\nexport const GET_SERVICE_STATISTICS_BY_HOUR_FAILED =\r\n  'GET_SERVICE_STATISTICS_BY_HOUR_FAILED';\r\n\r\nexport const GET_SERVICE_CONFIG = 'GET_SERVICE_CONFIG';\r\nexport const GET_SERVICE_CONFIG_SUCCESS = 'GET_SERVICE_CONFIG_SUCCESS';\r\n\r\nexport const GET_QUESTIONS_BY_USER = 'GET_QUESTIONS_BY_USER';\r\nexport const GET_QUESTIONS_BY_USER_SUCCESS = 'GET_QUESTIONS_BY_USER_SUCCESS';\r\nexport const GET_QUESTIONS_BY_USER_FAILED = 'GET_QUESTIONS_BY_USER_FAILED';\r\n\r\nexport const FAVORITE_QUESTION_ACTION = 'FAVORITE_QUESTION_ACTION';\r\nexport const FAVORITE_QUESTION_ACTION_SUCCESS =\r\n  'FAVORITE_QUESTION_ACTION_SUCCESS';\r\nexport const FAVORITE_QUESTION_ACTION_FAILED =\r\n  'FAVORITE_QUESTION_ACTION_FAILED';\r\n\r\nexport const ADD_QUESTION_TO_BATCH = 'ADD_QUESTION_TO_BATCH';\r\nexport const ADD_QUESTION_TO_BATCH_SUCCESS = 'ADD_QUESTION_TO_BATCH_SUCCESS';\r\nexport const ADD_QUESTION_TO_BATCH_FAILED = 'ADD_QUESTION_TO_BATCH_FAILED';\r\n\r\nexport const REMOVE_QUESTION_FROM_BATCH = 'REMOVE_QUESTION_FROM_BATCH';\r\nexport const REMOVE_QUESTION_FROM_BATCH_SUCCESS =\r\n  'REMOVE_QUESTION_FROM_BATCH_SUCCESS';\r\nexport const REMOVE_QUESTION_FROM_BATCH_FAILED =\r\n  'REMOVE_QUESTION_FROM_BATCH_FAILED';\r\n\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH';\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS';\r\nexport const ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED =\r\n  'ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED';\r\n\r\nexport const ADD_USER_ACTION_LOG = 'ADD_USER_ACTION_LOG';\r\n","export const GET_OCSDATA_SUCCESS = 'GET_OCSDATA_SUCCESS';\r\nexport const GET_OCSDATA_FAILED = 'GET_OCSDATA_FAILED';\r\nexport const ADD_OCSDATA_SUCCESS = 'ADD_OCSDATA_SUCCESS';\r\nexport const ADD_OCSDATA_FAILED = 'ADD_OCSDATA_FAILED';\r\nexport const LOADING_BEGIN = 'LOADING_BEGIN';\r\nexport const LOADING_END = 'LOADING_END';\r\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\nexport const GET_CURRENT_RECORD = 'GET_CURRENT_RECORD';\r\nexport const CLEAR_CURRENT_RECORD = 'CLEAR_CURRENT_RECORD';\r\nexport const GET_CSMASTER_SUCCESS = 'GET_CSMASTER_SUCCESS';\r\nexport const GET_CSMASTER_FAILED = 'GET_CSMASTER_FAILED';\r\n\r\nexport const GET_GOV_DATA = 'GET_GOV_DATA';\r\nexport const GET_GOV_DATA_SUCCESS = 'GET_GOV_DATA_SUCCESS';\r\nexport const GET_GOV_DATA_FAILED = 'GET_GOV_DATA_FAILED';\r\n\r\nexport const EDIT_RECORD = 'EDIT_RECORD';\r\nexport const EDIT_RECORD_SUCCESS = 'EDIT_RECORD_SUCCESS';\r\nexport const EDIT_RECORD_FAILED = 'EDIT_RECORD_FAILED';\r\n\r\nexport const GET_CURRENT = 'GET_CURRENT';\r\nexport const GET_CURRENT_SUCCESS = 'GET_CURRENT_SUCCESS';\r\nexport const GET_CURRENT_FAILED = 'GET_CURRENT_FAILED';\r\n\r\nexport const EDIT_CPL_REPLY = 'EDIT_CPL_REPLY';\r\nexport const EDIT_CPL_REPLY_SUCCESS = 'EDIT_CPL_REPLY_SUCCESS';\r\nexport const EDIT_CPL_REPLY_FAILED = 'EDIT_CPL_REPLY_FAILED';\r\n\r\nexport const DELETE_CPL = 'DELETE_CPL';\r\nexport const DELETE_CPL_SUCCESS = 'DELETE_CPL_SUCCESS';\r\nexport const DELETE_CPL_FAILED = 'DELETE_CPL_FAILED';\r\n\r\nexport const MOVE_CPL = 'MOVE_CPL';\r\nexport const MOVE_CPL_SUCCESS = 'MOVE_CPL_SUCCESS';\r\nexport const MOVE_CPL_FAILED = 'MOVE_CPL_FAILED';\r\n\r\nexport const EDIT_CPL_MEDIATION = 'EDIT_CPL_MEDIATION';\r\nexport const EDIT_CPL_MEDIATION_SUCCESS = 'EDIT_CPL_MEDIATION_SUCCESS';\r\nexport const EDIT_CPL_MEDIATION_FAILED = 'EDIT_CPL_MEDIATION_FAILED';\r\n\r\nexport const DELETE_CPL_REPLY = 'DELETE_CPL_REPLY';\r\nexport const DELETE_CPL_REPLY_SUCCESS = 'DELETE_CPL_REPLY_SUCCESS';\r\nexport const DELETE_CPL_REPLY_FAILED = 'DELETE_CPL_REPLY_FAILED';\r\n\r\nexport const DELETE_CPL_MEDIATION = 'DELETE_CPL_MEDIATION';\r\nexport const DELETE_CPL_MEDIATION_SUCCESS = 'DELETE_CPL_MEDIATION_SUCCESS';\r\nexport const DELETE_CPL_MEDIATION_FAILED = 'DELETE_CPL_MEDIATION_FAILED';\r\n\r\nexport const EDIT_CPL_REF = 'EDIT_CPL_REF';\r\nexport const EDIT_CPL_REF_SUCCESS = 'EDIT_CPL_REF_SUCCESS';\r\nexport const EDIT_CPL_REF_FAILED = 'EDIT_CPL_REF_FAILED';\r\nexport const DELETE_CPL_REF = 'DELETE_CPL_REF';\r\nexport const DELETE_CPL_REF_SUCCESS = 'DELETE_CPL_REF_SUCCESS';\r\nexport const DELETE_CPL_REF_FAILED = 'DELETE_CPL_REF_FAILED';\r\n\r\nexport const ADD_CPL_ATTACHMENT = 'ADD_CPL_ATTACHMENT';\r\nexport const ADD_CPL_ATTACHMENT_SUCCESS = 'ADD_CPL_ATTACHMENT_SUCCESS';\r\nexport const ADD_CPL_ATTACHMENT_FAILED = 'ADD_CPL_ATTACHMENT_FAILED';\r\n\r\nexport const DELETE_CPL_ATTACHMENT = 'DELETE_CPL_ATTACHMENT';\r\nexport const DELETE_CPL_ATTACHMENT_SUCCESS = 'DELETE_CPL_ATTACHMENT_SUCCESS';\r\nexport const DELETE_CPL_ATTACHMENT_FAILED = 'DELETE_CPL_ATTACHMENT_FAILED';\r\n\r\nexport const DELETE_GOV_LETTER = 'DELETE_GOV_LETTER';\r\nexport const DELETE_GOV_LETTER_SUCCESS = 'DELETE_GOV_LETTER_SUCCESS';\r\nexport const DELETE_GOV_LETTER_FAILED = 'DELETE_GOV_LETTER_FAILED';\r\n","export const GET_VIP_GAMES = \"GET_VIP_GAMES\";\r\nexport const GET_VIP_GAMES_SUCCESS = \"GET_VIP_GAMES_SUCCESS\";\r\nexport const GET_VIP_GAMES_FAILED = \"GET_VIP_GAMES_FAILED\";\r\n\r\nexport const GET_VIP = \"GET_VIP\";\r\nexport const GET_VIP_SUCCESS = \"GET_VIP_SUCCESS\";\r\nexport const GET_VIP_FAILED = \"GET_VIP_FAILED\";\r\n\r\nexport const UPDATE_VIP_STATUS = \"UPDATE_VIP_STATUS\";\r\nexport const UPDATE_VIP_STATUS_SUCCESS = \"UPDATE_VIP_STATUS_SUCCESS\";\r\nexport const UPDATE_VIP_STATUS_FAILED = \"UPDATE_VIP_STATUS_FAILED\";\r\n\r\nexport const CLEAR_VIP_MESSAGE = \"CLEAR_VIP_MESSAGE\";\r\n\r\nexport const DELETE_VIP_REQUEST = \"DELETE_VIP_REQUEST\";\r\nexport const DELETE_VIP_REQUEST_SUCCESS = \"DELETE_VIP_REQUEST_SUCCESS\";\r\nexport const DELETE_VIP_REQUEST_FAILED = \"DELETE_VIP_REQUEST_FAILED\";\r\n\r\nexport const ADD_VIP_REQUEST = \"ADD_VIP_REQUEST\";\r\nexport const ADD_VIP_REQUEST_SUCCESS = \"ADD_VIP_REQUEST_SUCCESS\";\r\nexport const ADD_VIP_REQUEST_FAILED = \"ADD_VIP_REQUEST_FAILED\";\r\nexport const ADD_VIP_REQUEST_VALIDATION_FAILED =\r\n  \"ADD_VIP_REQUEST_VALIDATION_FAILED\";\r\n\r\nexport const GET_CURRENT_WHALE_USER = \"GET_CURRENT_WHALE_USER\";\r\nexport const GET_CURRENT_WHALE_USER_SUCCESS = \"GET_CURRENT_WHALE_USER_SUCCESS\";\r\nexport const GET_CURRENT_WHALE_USER_FAILED = \"GET_CURRENT_WHALE_USER_FAILED\";\r\n\r\nexport const UPDATE_VIP_INFO = \"UPDATE_VIP_INFO\";\r\nexport const UPDATE_VIP_INFO_SUCCESS = \"UPDATE_VIP_INFO_SUCCESS\";\r\nexport const UPDATE_VIP_INFO_FAILED = \"UPDATE_VIP_INFO_FAILED\";\r\n\r\nexport const GET_VIP_REQUESTS = \"GET_VIP_REQUESTS\";\r\nexport const GET_VIP_REQUESTS_SUCCESS = \"GET_VIP_REQUESTS_SUCCESS\";\r\nexport const GET_VIP_REQUESTS_FAILED = \"GET_VIP_REQUESTS_FAILED\";\r\n","export const GET_VIP_OFFERS = 'GET_VIP_OFFERS';\r\nexport const GET_VIP_OFFERS_SUCCESS = 'GET_VIP_OFFERS_SUCCESS';\r\nexport const GET_VIP_OFFERS_FAILED = 'GET_VIP_OFFERS_FAILED';\r\nexport const CLEAR_VIP_OFFERS_MESSAGE = 'CLEAR_VIP_OFFERS_MESSAGE';\r\n\r\nexport const GET_VIP_ORDERS = 'GET_VIP_ORDERS';\r\nexport const GET_VIP_ORDERS_SUCCESS = 'GET_VIP_ORDERS_SUCCESS';\r\nexport const GET_VIP_ORDERS_FAILED = 'GET_VIP_ORDERS_FAILED';\r\n\r\nexport const GET_CURRENT_VIP_REPORT = 'GET_CURRENT_VIP_REPORT';\r\nexport const GET_CURRENT_VIP_REPORT_SUCCESS = 'GET_CURRENT_VIP_REPORT_SUCCESS';\r\nexport const GET_CURRENT_VIP_REPORT_FAILED = 'GET_CURRENT_VIP_REPORT_FAILED';\r\n\r\nexport const GET_VIP_PRODS_BY_GAMEID = 'GET_VIP_PRODS_BY_GAMEID';\r\nexport const GET_VIP_PRODS_BY_GAMEID_SUCCESS =\r\n  'GET_VIP_PRODS_BY_GAMEID_SUCCESS';\r\nexport const GET_VIP_PRODS_BY_GAMEID_FAILED = 'GET_VIP_PRODS_BY_GAMEID_FAILED';\r\n\r\nexport const EDIT_VIP_WIRE_REPORT = 'EDIT_VIP_WIRE_REPORT';\r\nexport const EDIT_VIP_WIRE_REPORT_SUCCESS = 'EDIT_VIP_WIRE_REPORT_SUCCESS';\r\nexport const EDIT_VIP_WIRE_REPORT_FAILED = 'EDIT_VIP_WIRE_REPORT_FAILED';\r\n\r\nexport const DELETE_VIP_WIRE_REPORT = 'DELETE_VIP_WIRE_REPORT';\r\nexport const DELETE_VIP_WIRE_REPORT_SUCCESS = 'DELETE_VIP_WIRE_REPORT_SUCCESS';\r\nexport const DELETE_VIP_WIRE_REPORT_FAILED = 'DELETE_VIP_WIRE_REPORT_FAILED';\r\n\r\nexport const GET_CURRENT_VIP_PRODUCT = 'GET_CURRENT_VIP_PRODUCT';\r\nexport const GET_CURRENT_VIP_PRODUCT_SUCCESS =\r\n  'GET_CURRENT_VIP_PRODUCT_SUCCESS';\r\nexport const GET_CURRENT_VIP_PRODUCT_FAILED = 'GET_CURRENT_VIP_PRODUCT_FAILED';\r\nexport const EDIT_VIP_PRODUCT = 'EDIT_VIP_PRODUCT';\r\nexport const EDIT_VIP_PRODUCT_SUCCESS = 'EDIT_VIP_PRODUCT_SUCCESS';\r\nexport const EDIT_VIP_PRODUCT_FAILED = 'EDIT_VIP_PRODUCT_FAILED';\r\n","export const GET_BATCH_TASKS = \"GET_BATCH_TASKS\";\r\nexport const GET_BATCH_TASKS_SUCCESS = \"GET_BATCH_TASKS_SUCCESS\";\r\nexport const GET_BATCH_TASKS_FAILED = \"GET_BATCH_TASKS_FAILED\";\r\n\r\nexport const EDIT_BATCH_TASK = \"EDIT_BATCH_TASK\";\r\nexport const EDIT_BATCH_TASK_SUCCESS = \"EDIT_BATCH_TASK_SUCCESS\";\r\nexport const EDIT_BATCH_TASK_FAILED = \"EDIT_BATCH_TASK_FAILED\";\r\nexport const DELETE_BATCH_TASK = \"DELETE_BATCH_TASK\";\r\nexport const DELETE_BATCH_TASK_SUCCESS = \"DELETE_BATCH_TASK_SUCCESS\";\r\nexport const DELETE_BATCH_TASK_FAILED = \"DELETE_BATCH_TASK_FAILED\";\r\n\r\nexport const CLEAR_BATCH_TASK_MESSAGE = \"CLEAR_BATCH_TASK_MESSAGE\";\r\n\r\nexport const GET_CURRENT_BATCH_TASK = \"GET_CURRENT_BATCH_TASK\";\r\nexport const GET_CURRENT_BATCH_TASK_SUCCESS = \"GET_CURRENT_BATCH_TASK_SUCCESS\";\r\nexport const GET_CURRENT_BATCH_TASK_FAILED = \"GET_CURRENT_BATCH_TASK_FAILED\";\r\n\r\nexport const REMOVE_BATCH_Q = \"REMOVE_BATCH_Q\";\r\nexport const REMOVE_BATCH_Q_SUCCESS = \"REMOVE_BATCH_Q_SUCCESS\";\r\nexport const REMOVE_BATCH_Q_FAILED = \"REMOVE_BATCH_Q_FAILED\";\r\nexport const REMOVE_Q_FROM_BATCH = \"REMOVE_Q_FROM_BATCH\";\r\nexport const REMOVE_Q_FROM_BATCH_SUCCESS = \"REMOVE_Q_FROM_BATCH_SUCCESS\";\r\nexport const REMOVE_Q_FROM_BATCH_FAILED = \"REMOVE_Q_FROM_BATCH_FAILED\";\r\n\r\nexport const BATCH_REPLY_ACTION = \"BATCH_REPLY_ACTION\";\r\nexport const BATCH_REPLY_ACTION_SUCCESS = \"BATCH_REPLY_ACTION_SUCCESS\";\r\nexport const BATCH_REPLY_ACTION_FAILED = \"BATCH_REPLY_ACTION_FAILED\";\r\n","export const GET_ALLOCATE_DATA = \"GET_ALLOCATE_DATA\";\r\nexport const GET_ALLOCATE_DATA_SUCCESS = \"GET_ALLOCATE_DATA_SUCCESS\";\r\nexport const GET_ALLOCATE_DATA_FAILED = \"GET_ALLOCATE_DATA_FAILED\";\r\n\r\nexport const GET_ALLOCATE_BY_ID = \"GET_ALLOCATE_BY_ID\";\r\nexport const GET_ALLOCATE_BY_ID_SUCCESS = \"GET_ALLOCATE_BY_ID_SUCCESS\";\r\nexport const GET_ALLOCATE_BY_ID_FAILED = \"GET_ALLOCATE_BY_ID_FAILED\";\r\n\r\nexport const POST_ALLOCATION = \"POST_ALLOCATION\";\r\nexport const POST_ALLOCATION_SUCCESS = \"POST_ALLOCATION_SUCCESS\";\r\nexport const POST_ALLOCATION_FAILED = \"POST_ALLOCATION_FAILED\";\r\n\r\nexport const PUT_ALLOCATION = \"PUT_ALLOCATION\";\r\nexport const PUT_ALLOCATION_SUCCESS = \"PUT_ALLOCATION_SUCCESS\";\r\nexport const PUT_ALLOCATION_FAILED = \"PUT_ALLOCATION_FAILED\";\r\n\r\nexport const TAKE_ALLOCATION_TASKS = \"TAKE_ALLOCATION_TASKS\";\r\nexport const TAKE_ALLOCATION_TASKS_SUCCESS = \"TAKE_ALLOCATION_TASKS_SUCCESS\";\r\nexport const TAKE_ALLOCATION_TASKS_FAILED = \"TAKE_ALLOCATION_TASKS_FAILED\";\r\n\r\nexport const CLEAR_ALLOCATION_MESSAGE = \"CLEAR_ALLOCATION_MESSAGE\";\r\n\r\nexport const REASSIGN_ALLOCATION_TASK = \"REASSIGN_ALLOCATION_TASK\";\r\nexport const REASSIGN_ALLOCATION_TASK_SUCCESS =\r\n  \"REASSIGN_ALLOCATION_TASK_SUCCESS\";\r\nexport const REASSIGN_ALLOCATION_TASK_FAILED =\r\n  \"REASSIGN_ALLOCATION_TASK_FAILED\";\r\n","// @flow\r\nimport {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_TEST_DATA_FAILED,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  ADD_USER_ACTION_LOG\r\n} from './constants';\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\n\r\nexport const getQuestions = (condition: {}): ServiceAction => ({\r\n  type: GET_QUESTIONS,\r\n  payload: condition\r\n});\r\n\r\nexport const getQuestionsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getQuestionsByUser = (question_id: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER,\r\n  payload: question_id\r\n});\r\n\r\nexport const getQuestionsByUserSuccess = (data: []): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getQuestionsByUserFailed = (error: string): ServiceAction => ({\r\n  type: GET_QUESTIONS_BY_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getCurrentQuestion = (question_id: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION,\r\n  payload: question_id\r\n});\r\n\r\nexport const getCurrentQuestionSuccess = (data: {}): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getCurrentQuestionFailed = (error: string): ServiceAction => ({\r\n  type: GET_CURRENT_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionType = (\r\n  qId: number,\r\n  newType: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE,\r\n  payload: { qId, newType }\r\n});\r\n\r\nexport const updateQuestionTypeSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionTypeFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_TYPE_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const allocateQuestion = (\r\n  aField: {},\r\n  allocateStatus: number\r\n): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION,\r\n  payload: { aField, allocateStatus }\r\n});\r\n\r\nexport const allocateQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const allocateQuestionFailed = (error: string): ServiceAction => ({\r\n  type: ALLOCATE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const replyQuestion = (replyContent: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION,\r\n  payload: replyContent\r\n});\r\n\r\nexport const replyQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: REPLY_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const replyQuestionFailed = (error: string): ServiceAction => ({\r\n  type: REPLY_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const closeQuestion = (\r\n  question_id: {},\r\n  closeType: number\r\n): ServiceAction => ({\r\n  type: CLOSE_QUESTION,\r\n  payload: { question_id, closeType }\r\n});\r\n\r\nexport const closeQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: CLOSE_QUESTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const closeQuestionFailed = (error: string): ServiceAction => ({\r\n  type: CLOSE_QUESTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateQuestionStatus = (\r\n  qId: number,\r\n  newStatus: string\r\n): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS,\r\n  payload: { qId, newStatus }\r\n});\r\n\r\nexport const updateQuestionStatusSuccess = (result: {}): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const updateQuestionStatusFailed = (error: string): ServiceAction => ({\r\n  type: UPDATE_QUESTION_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getTestData = (condition: {}): ServiceAction => ({\r\n  type: GET_TEST_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getTestDataSuccess = (data: []): ServiceAction => ({\r\n  type: GET_TEST_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getTestDataFailed = (error: string): ServiceAction => ({\r\n  type: GET_TEST_DATA_FAILED,\r\n  payload: error\r\n});\r\nexport const getOverview = (): ServiceAction => ({\r\n  type: GET_OVERVIEW\r\n});\r\n\r\nexport const getOverviewSuccess = (data: []): ServiceAction => ({\r\n  type: GET_OVERVIEW_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getOverviewFailed = (error: string): ServiceAction => ({\r\n  type: GET_OVERVIEW_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatistics = (yyyymm: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS,\r\n  payload: { yyyymm }\r\n});\r\n\r\nexport const getServiceStatisticsSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsFailed = (error: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getServiceStatisticsByHour = (sDate: string): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR,\r\n  payload: { sDate }\r\n});\r\n\r\nexport const getServiceStatisticsByHourSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getServiceStatisticsByHourFailed = (\r\n  error: string\r\n): ServiceAction => ({\r\n  type: GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearMessage = (): ServiceAction => ({\r\n  type: CLEAR_MESSAGE\r\n});\r\n\r\nexport const getServiceConfig = (): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG\r\n});\r\n\r\nexport const getServiceConfigSuccess = (data: []): ServiceAction => ({\r\n  type: GET_SERVICE_CONFIG_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const favorQuestion = (qId: number, action: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION,\r\n  payload: { qId, action }\r\n});\r\n\r\nexport const favorQuestionSuccess = (result: {}): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const favorQuestionFailed = (error: string): ServiceAction => ({\r\n  type: FAVORITE_QUESTION_ACTION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addQuestionToBatch = (\r\n  question_id: Number,\r\n  batch_id: Number\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH,\r\n  payload: { question_id, batch_id }\r\n});\r\n\r\nexport const addQuestionToBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addQuestionToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_QUESTION_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQuestionFromBatch = (\r\n  question_id: Number\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQuestionFromBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQuestionFromBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//將多個問題一次加入某個批次\r\n\r\nexport const addMultipleQuestionsToBatch = (\r\n  batch_id: number,\r\n  ids: []\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  payload: { batch_id, ids }\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchSuccess = (result: {}): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addMultipleQuestionsToBatchFailed = (\r\n  errors: {} | string\r\n): ServiceAction => ({\r\n  type: ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const addUserActionLog = (\r\n  act: string,\r\n  func: string,\r\n  desc: string\r\n): ServiceAction => ({\r\n  type: ADD_USER_ACTION_LOG,\r\n  payload: { act, func, desc }\r\n});\r\n","/* AUTH */\nexport const UPDATE_PASSWORD = \"UPDATE_PASSWORD\";\nexport const UPDATE_PASSWORD_SUCCESS = \"UPDATE_PASSWORD_SUCCESS\";\nexport const UPDATE_PASSWORD_FAILED = \"UPDATE_PASSWORD_FAILED\";\n\nexport const GET_PRESET_MESSAGE = \"GET_PRESET_MESSAGE\";\nexport const GET_PRESET_MESSAGE_SUCCESS = \"GET_PRESET_MESSAGE_SUCCESS\";\nexport const GET_PRESET_MESSAGE_FAILED = \"GET_PRESET_MESSAGE_FAILED\";\nexport const EDIT_PRESET_MESSAGE = \"EDIT_PRESET_MESSAGE\";\nexport const EDIT_PRESET_MESSAGE_SUCCESS = \"EDIT_PRESET_MESSAGE_SUCCESS\";\nexport const EDIT_PRESET_MESSAGE_FAILED = \"EDIT_PRESET_MESSAGE_FAILED\";\nexport const DELETE_PRESET_MESSAGE = \"DELETE_PRESET_MESSAGE\";\nexport const DELETE_PRESET_MESSAGE_SUCCESS = \"DELETE_PRESET_MESSAGE_SUCCESS\";\nexport const DELETE_PRESET_MESSAGE_FAILED = \"DELETE_PRESET_MESSAGE_FAILED\";\n\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED,\r\n  DELETE_GOV_LETTER,\r\n  DELETE_GOV_LETTER_SUCCESS,\r\n  DELETE_GOV_LETTER_FAILED\r\n} from './constants';\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\n\r\nexport const getOfflineCsData = (dataType: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA,\r\n  payload: dataType\r\n});\r\n\r\nexport const getOfflineCsDataSuccess = (records: []): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_SUCCESS,\r\n  payload: records\r\n});\r\n\r\nexport const getOfflineCsDataFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_GOV_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editRecord = (\r\n  dataType: string,\r\n  record: FormData\r\n): OfflineCsAction => ({\r\n  type: EDIT_RECORD,\r\n  payload: { dataType, record }\r\n});\r\n\r\nexport const editRecordSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_RECORD_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editRecordFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_RECORD_FAILED,\r\n  payload: errors\r\n});\r\nexport const getCurrentRecord = (\r\n  dataType: string,\r\n  record_id: int,\r\n  history: {}\r\n): OfflineCsAction => ({\r\n  type: GET_CURRENT,\r\n  payload: { dataType, record_id, history }\r\n});\r\n\r\nexport const getCurrentRecordSuccess = (record: {}): OfflineCsAction => ({\r\n  type: GET_CURRENT_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentRecordFailed = (error: string): OfflineCsAction => ({\r\n  type: GET_CURRENT_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editCplReply = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY,\r\n  payload: record\r\n});\r\n\r\nexport const editCplReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplReplyFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplMediation = (record: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION,\r\n  payload: record\r\n});\r\n\r\nexport const editCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCase = (id: string, history: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteGovLetter = (\r\n  dataType: string,\r\n  id: string,\r\n  history: {}\r\n): OfflineCsAction => ({\r\n  type: DELETE_GOV_LETTER,\r\n  payload: { dataType, id, history }\r\n});\r\n\r\nexport const deleteGovLetterSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_GOV_LETTER_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteGovLetterFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_GOV_LETTER_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplCaseReply = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplCaseReplySuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplCaseReplyFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REPLY_FAILED,\r\n  payload: errors\r\n});\r\nexport const deleteCplMediation = (id: string): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION,\r\n  payload: id\r\n});\r\n\r\nexport const deleteCplMediationSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplMediationFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_MEDIATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const moveCplCase = (id: string, record: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL,\r\n  payload: { id, record }\r\n});\r\n\r\nexport const moveCplCaseSuccess = (result: {}): OfflineCsAction => ({\r\n  type: MOVE_CPL_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const moveCplCaseFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: MOVE_CPL_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const editCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: EDIT_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplRef = (\r\n  case_id: String,\r\n  ref_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF,\r\n  payload: { case_id, ref_id }\r\n});\r\n\r\nexport const deleteCplRefSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplRefFailed = (errors: {} | string): OfflineCsAction => ({\r\n  type: DELETE_CPL_REF_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//add_attachment_json\r\n\r\nexport const addCplAttachment = (record: FormData): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT,\r\n  payload: record\r\n});\r\n\r\nexport const addCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const addCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: ADD_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteCplAttachment = (\r\n  attachment_id: String\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT,\r\n  payload: attachment_id\r\n});\r\n\r\nexport const deleteCplAttachmentSuccess = (result: {}): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteCplAttachmentFailed = (\r\n  errors: {} | string\r\n): OfflineCsAction => ({\r\n  type: DELETE_CPL_ATTACHMENT_FAILED,\r\n  payload: errors\r\n});\r\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\n","export const GET_GAMES_DATA_SUCCESS = \"GET_GAMES_DATA_SUCCESS\";\r\nexport const GET_GAMES_DATA_FAILED = \"GET_GAMES_DATA_FAILED\";\r\nexport const GET_GAMES_DATA = \"GET_GAMES_DATA\";\r\n\r\nexport const EDIT_GAME = \"EDIT_GAME\";\r\nexport const EDIT_GAME_SUCCESS = \"EDIT_GAME_SUCCESS\";\r\nexport const EDIT_GAME_FAILED = \"EDIT_GAME_FAILED\";\r\n\r\nexport const GET_CURRENT_GAME = \"GET_CURRENT_GAME\";\r\nexport const GET_CURRENT_GAME_SUCCESS = \"GET_CURRENT_GAME_SUCCESS\";\r\nexport const GET_CURRENT_GAME_FAILED = \"GET_CURRENT_GAME_FAILED\";\r\n\r\nexport const CLEAR_CURRENT_GAME = \"CLEAR_CURRENT_GAME\";\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","export const GET_USERS = 'GET_USERS';\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS';\r\nexport const GET_USERS_FAILED = 'GET_USERS_FAILED';\r\n\r\nexport const GET_USER_TASKS = 'GET_USER_TASKS';\r\nexport const GET_USER_TASKS_SUCCESS = 'GET_USER_TASKS_SUCCESS';\r\nexport const GET_USER_TASKS_FAILED = 'GET_USER_TASKS_FAILED';\r\n\r\nexport const GET_USER_LOGS = 'GET_USER_LOGS';\r\nexport const GET_USER_LOGS_SUCCESS = 'GET_USER_LOGS_SUCCESS';\r\nexport const GET_USER_LOGS_FAILED = 'GET_USER_LOGS_FAILED';\r\n","// @flow\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipGames = (): VipAction => ({\r\n  type: GET_VIP_GAMES\r\n});\r\n\r\nexport const getVipGamesSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_GAMES_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipGamesFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_GAMES_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVip = (game_id: string): VipAction => ({\r\n  type: GET_VIP,\r\n  payload: game_id\r\n});\r\n\r\nexport const getVipSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putVip = (\r\n  game_id: string,\r\n  uid: String,\r\n  command: string\r\n): VipAction => ({\r\n  type: UPDATE_VIP_STATUS,\r\n  payload: { game_id, uid, command }\r\n});\r\n\r\nexport const putVipSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putVipFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_STATUS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearVIPMessage = (): VipAction => ({\r\n  type: CLEAR_VIP_MESSAGE\r\n});\r\n\r\nexport const deleteVipServiceRequest = (record_id: int): VipAction => ({\r\n  type: DELETE_VIP_REQUEST,\r\n  payload: record_id\r\n});\r\n\r\nexport const deleteVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const deleteVipServiceRequestFailed = (error: string): VipAction => ({\r\n  type: DELETE_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequest = (record): VipAction => ({\r\n  type: ADD_VIP_REQUEST,\r\n  payload: record\r\n});\r\n\r\nexport const addVipServiceRequestSuccess = (data: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const addVipServiceRequestFailed = (error: string | {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const addVipServiceRequestValidationFailed = (errors: {}): VipAction => ({\r\n  type: ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentWhaleUser = (\r\n  game_id: string,\r\n  role_id: string,\r\n  history: {}\r\n): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER,\r\n  payload: { game_id, role_id, history }\r\n});\r\n\r\nexport const getCurrentWhaleUserSuccess = (record: {}): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentWhaleUserFailed = (error: string): VipAction => ({\r\n  type: GET_CURRENT_WHALE_USER_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const updateVipInfo = (\r\n  game_id: string,\r\n  role_id: String,\r\n  fields: {}\r\n): VipAction => ({\r\n  type: UPDATE_VIP_INFO,\r\n  payload: { game_id, role_id, fields }\r\n});\r\n\r\nexport const updateVipInfoSuccess = (data: {}): VipAction => ({\r\n  type: UPDATE_VIP_INFO_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const updateVipInfoFailed = (error: string): VipAction => ({\r\n  type: UPDATE_VIP_INFO_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getVipRequests = (condition: {}): VipAction => ({\r\n  type: GET_VIP_REQUESTS,\r\n  payload: condition\r\n});\r\n\r\nexport const getVipRequestsSuccess = (data: []): VipAction => ({\r\n  type: GET_VIP_REQUESTS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getVipRequestsFailed = (error: string): VipAction => ({\r\n  type: GET_VIP_REQUESTS_FAILED,\r\n  payload: error\r\n});\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED,\r\n  GET_CURRENT_VIP_PRODUCT,\r\n  GET_CURRENT_VIP_PRODUCT_SUCCESS,\r\n  GET_CURRENT_VIP_PRODUCT_FAILED,\r\n  EDIT_VIP_PRODUCT,\r\n  EDIT_VIP_PRODUCT_SUCCESS,\r\n  EDIT_VIP_PRODUCT_FAILED,\r\n} from './constants';\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipOffers = (): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS,\r\n});\r\n\r\nexport const getVipOffersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getVipOffersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_OFFERS_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const getVipProductsByGameId = (game_id: string): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID,\r\n  payload: game_id,\r\n});\r\n\r\nexport const getVipProductsByGameIdSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getVipProductsByGameIdFailed = (\r\n  error: string\r\n): VipOfferAction => ({\r\n  type: GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const getVipOrders = (): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS,\r\n});\r\n\r\nexport const getVipOrdersSuccess = (data: []): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getVipOrdersFailed = (error: string): VipOfferAction => ({\r\n  type: GET_VIP_ORDERS_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const getCurrentVipReport = (\r\n  report_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT,\r\n  payload: { report_id, history },\r\n});\r\n\r\nexport const getCurrentVipReportSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  payload: record,\r\n});\r\n\r\nexport const getCurrentVipReportFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_REPORT_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const editVipWireReport = (record: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT,\r\n  payload: { record },\r\n});\r\n\r\nexport const editVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result,\r\n});\r\n\r\nexport const editVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: EDIT_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors,\r\n});\r\n\r\nexport const deleteVipWireReport = (record_id: string): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT,\r\n  payload: record_id,\r\n});\r\n\r\nexport const deleteVipWireReportSuccess = (result: {}): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  payload: result,\r\n});\r\n\r\nexport const deleteVipWireReportFailed = (\r\n  errors: {} | string\r\n): VipOfferAction => ({\r\n  type: DELETE_VIP_WIRE_REPORT_FAILED,\r\n  payload: errors,\r\n});\r\n\r\nexport const getCurrentVipProduct = (\r\n  product_id: string,\r\n  history: {}\r\n): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_PRODUCT,\r\n  payload: { product_id, history },\r\n});\r\n\r\nexport const getCurrentVipProductSuccess = (record: {}): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_PRODUCT_SUCCESS,\r\n  payload: record,\r\n});\r\n\r\nexport const getCurrentVipProductFailed = (error: string): VipOfferAction => ({\r\n  type: GET_CURRENT_VIP_PRODUCT_FAILED,\r\n  payload: error,\r\n});\r\n\r\nexport const editVipProduct = (data: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_PRODUCT,\r\n  payload: data,\r\n});\r\n\r\nexport const editVipProductSuccess = (result: {}): VipOfferAction => ({\r\n  type: EDIT_VIP_PRODUCT_SUCCESS,\r\n  payload: result,\r\n});\r\n\r\nexport const editVipProductFailed = (errors: {} | string): VipOfferAction => ({\r\n  type: EDIT_VIP_PRODUCT_FAILED,\r\n  payload: errors,\r\n});\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\ntype BatchTaskAction = { type: string, payload: {} | string };\r\n\r\nexport const getBatchTasks = (): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS\r\n});\r\n\r\nexport const getBatchTasksSuccess = (data: []): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getBatchTasksFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: GET_BATCH_TASKS_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const editBatchTask = (record: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK,\r\n  payload: record\r\n});\r\n\r\nexport const editBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const editBatchTaskFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: EDIT_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const deleteBatchTask = (id: string, history: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK,\r\n  payload: { id, history }\r\n});\r\n\r\nexport const deleteBatchTaskSuccess = (result: {}): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const deleteBatchTaskFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: DELETE_BATCH_TASK_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const clearBatchTaskMessage = (): BatchTaskAction => ({\r\n  type: CLEAR_BATCH_TASK_MESSAGE\r\n});\r\n\r\nexport const getCurrentBatchTask = (\r\n  record_id: int,\r\n  history: {}\r\n): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK,\r\n  payload: { record_id, history }\r\n});\r\n\r\nexport const getCurrentBatchTaskSuccess = (record: {}): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentBatchTaskFailed = (error: string): BatchTaskAction => ({\r\n  type: GET_CURRENT_BATCH_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const removeBatchQ = (batch_id: number): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q,\r\n  payload: batch_id\r\n});\r\n\r\nexport const removeBatchQSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeBatchQFailed = (errors: {} | string): BatchTaskAction => ({\r\n  type: REMOVE_BATCH_Q_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const removeQFromBatch = (question_id: number): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH,\r\n  payload: question_id\r\n});\r\n\r\nexport const removeQFromBatchSuccess = (result: {}): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const removeQFromBatchFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: REMOVE_Q_FROM_BATCH_FAILED,\r\n  payload: errors\r\n});\r\n\r\n//回覆批次問題\r\n//data: `batch_id=${batch_id}&new_type=${new_type}&post_content=${post_content}&mode=${mode}`,\r\nexport const batchReplyAction = (replyData: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION,\r\n  payload: replyData\r\n});\r\n\r\nexport const batchReplyActionSuccess = (result: {}): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_SUCCESS,\r\n  payload: result\r\n});\r\n\r\nexport const batchReplyActionFailed = (\r\n  errors: {} | string\r\n): BatchTaskAction => ({\r\n  type: BATCH_REPLY_ACTION_FAILED,\r\n  payload: errors\r\n});\r\n","// @flow\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\n\r\nexport const reassignAllocationTask = (\r\n  allocation_id,\r\n  new_assignee\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK,\r\n  payload: { allocation_id, new_assignee }\r\n});\r\n\r\nexport const reassignAllocationTaskSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const reassignAllocationTaskFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: REASSIGN_ALLOCATION_TASK_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const takeAllocationTasks = (): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS\r\n});\r\n\r\nexport const takeAllocationTasksSuccess = (\r\n  data: []\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const takeAllocationTasksFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: TAKE_ALLOCATION_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateById = (id: string): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID,\r\n  payload: id\r\n});\r\n\r\nexport const getAllocateByIdSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateByIdFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_BY_ID_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getAllocateData = (condition: {}): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA,\r\n  payload: condition\r\n});\r\n\r\nexport const getAllocateDataSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getAllocateDataFailed = (\r\n  error: string\r\n): ServiceAllocateAction => ({\r\n  type: GET_ALLOCATE_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const postAllocation = (\r\n  qid,\r\n  allocation_cause\r\n): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION,\r\n  payload: { qid, allocation_cause }\r\n});\r\n\r\nexport const postAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const postAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: POST_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const putAllocation = (data: {}): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationSuccess = (data: []): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const putAllocationFailed = (error: string): ServiceAllocateAction => ({\r\n  type: PUT_ALLOCATION_FAILED,\r\n  payload: error\r\n});\r\nexport const clearAllocationMessage = (): ServiceAction => ({\r\n  type: CLEAR_ALLOCATION_MESSAGE\r\n});\r\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","/* DASHBOARD */\r\nexport const GET_DATA = 'GET_DATA';\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const GET_DATA_FAILED = 'GET_DATA_FAILED';\r\n","export const GET_VIP_DASHBOARD_DATA = \"GET_VIP_DASHBOARD_DATA\";\r\nexport const GET_VIP_DASHBOARD_DATA_SUCCESS = \"GET_VIP_DASHBOARD_DATA_SUCCESS\";\r\nexport const GET_VIP_DASHBOARD_DATA_FAILED = \"GET_VIP_DASHBOARD_DATA_FAILED\";\r\n","export const GET_SERIAL_RECORDS = 'GET_SERIAL_RECORDS';\r\nexport const GET_SERIAL_RECORDS_SUCCESS = 'GET_SERIAL_RECORDS_SUCCESS';\r\nexport const GET_SERIAL_RECORDS_FAILED = 'GET_SERIAL_RECORDS_FAILED';\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\ntype PlatformAction = { type: string, payload: {} | string };\n\nexport const updatePassword = (\n  account: string,\n  password: string\n): PlatformAction => ({\n  type: UPDATE_PASSWORD,\n  payload: { account, password }\n});\n\nexport const updatePasswordSuccess = (): PlatformAction => ({\n  type: UPDATE_PASSWORD_SUCCESS\n});\n\nexport const updatePasswordFailed = (error: string): PlatformAction => ({\n  type: UPDATE_PASSWORD_FAILED,\n  payload: error\n});\n\nexport const getPresetMessage = (): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE\n});\n\nexport const getPresetMessageSuccess = (records: []): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_SUCCESS,\n  payload: records\n});\n\nexport const getPresetMessageFailed = (error: string): OfflineCsAction => ({\n  type: GET_PRESET_MESSAGE_FAILED,\n  payload: error\n});\n\nexport const editPresetMessage = (record: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE,\n  payload: record\n});\n\nexport const editPresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const editPresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: EDIT_PRESET_MESSAGE_FAILED,\n  payload: errors\n});\n\nexport const deletePresetMessage = (id: string): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE,\n  payload: id\n});\n\nexport const deletePresetMessageSuccess = (result: {}): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: result\n});\n\nexport const deletePresetMessageFailed = (\n  errors: {} | string\n): OfflineCsAction => ({\n  type: DELETE_PRESET_MESSAGE_SUCCESS,\n  payload: errors\n});\n\nexport const clearPresetMessageMessage = (): ServiceAction => ({\n  type: CLEAR_MESSAGE\n});\n","export const GET_SERVERS = 'GET_SERVERS';\r\nexport const GET_SERVERS_SUCCESS = 'GET_SERVERS_SUCCESS';\r\nexport const GET_SERVERS_FAILED = 'GET_SERVERS_FAILED';\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  //console.log(\"setAuthToken\", token);\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n  const user = getLoggedInUser();\r\n  if (!user) {\r\n    return false;\r\n  }\r\n  const decoded = jwtDecode(user.token);\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded.exp < currentTime) {\r\n    console.warn(\"access token expired\");\r\n    return false;\r\n  } else {\r\n    setAuthToken(user.token);\r\n    return true;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n  const cookies = new Cookies();\r\n  const user = cookies.get(\"user\");\r\n  //console.log(\"getLoggedInUser\", user);\r\n  return user ? (typeof user == \"object\" ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser, setAuthToken };\r\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username: string): AuthAction => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus: string): AuthAction => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error: string): AuthAction => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\r\nimport {\r\n  GET_GAMES_DATA,\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\n\r\nexport const getGames = (): GamesAction => ({\r\n  type: GET_GAMES_DATA\r\n});\r\n\r\nexport const getGamesSuccess = (data: []): GamesAction => ({\r\n  type: GET_GAMES_DATA_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getGamesFailed = (error: string): GamesAction => ({\r\n  type: GET_GAMES_DATA_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const editGame = (record: FormData): GamesAction => ({\r\n  type: EDIT_GAME,\r\n  payload: { record }\r\n});\r\n\r\nexport const editGameSuccess = (result: {}): GamesAction => ({\r\n  type: EDIT_GAME_SUCCESS,\r\n  payload: result.affectedId\r\n});\r\n\r\nexport const editGameFailed = (errors: {} | string): GamesAction => ({\r\n  type: EDIT_GAME_FAILED,\r\n  payload: errors\r\n});\r\n\r\nexport const getCurrentGame = (game_id: string, history: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME,\r\n  payload: { game_id, history }\r\n});\r\n\r\nexport const getCurrentGameSuccess = (record: {}): GamesAction => ({\r\n  type: GET_CURRENT_GAME_SUCCESS,\r\n  payload: record\r\n});\r\n\r\nexport const getCurrentGameFailed = (error: string): GamesAction => ({\r\n  type: GET_CURRENT_GAME_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const clearCurrentGame = (): GamesAction => ({\r\n  type: CLEAR_CURRENT_GAME\r\n});\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED,\r\n  GET_USER_LOGS,\r\n  GET_USER_LOGS_SUCCESS,\r\n  GET_USER_LOGS_FAILED\r\n} from './constants';\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\n\r\nexport const getAdminUsers = (role: string): AdminUserAction => ({\r\n  type: GET_USERS,\r\n  payload: role\r\n});\r\n\r\nexport const getAdminUsersSuccess = (users: []): AdminUserAction => ({\r\n  type: GET_USERS_SUCCESS,\r\n  payload: users\r\n});\r\n\r\nexport const getAdminUsersFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USERS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getUserTasks = (): AdminUserAction => ({\r\n  type: GET_USER_TASKS\r\n});\r\n\r\nexport const getUserTasksSuccess = (tasks: {}): AdminUserAction => ({\r\n  type: GET_USER_TASKS_SUCCESS,\r\n  payload: tasks\r\n});\r\n\r\nexport const getUserTasksFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USER_TASKS_FAILED,\r\n  payload: error\r\n});\r\n\r\nexport const getUserLogs = ({ date_begin, date_end }): AdminUserAction => ({\r\n  type: GET_USER_LOGS,\r\n  payload: { date_begin, date_end }\r\n});\r\nexport const getUserLogsSuccess = (logs: []): AdminUserAction => ({\r\n  type: GET_USER_LOGS_SUCCESS,\r\n  payload: logs\r\n});\r\n\r\nexport const getUserLogsFailed = (error: string): AdminUserAction => ({\r\n  type: GET_USER_LOGS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\n\r\nexport const getData = (startDate: date, endDate: date): DashboardAction => ({\r\n    type: GET_DATA,\r\n    payload: { startDate, endDate },\r\n});\r\n\r\nexport const getDataSuccess = (summary: {}): DashboardAction => ({\r\n    type: GET_DATA_SUCCESS,\r\n    payload: summary,\r\n});\r\n\r\nexport const getDataFailed = (error: string): DashboardAction => ({\r\n    type: GET_DATA_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport { GET_SERVERS, GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\n\r\nexport const getServersByGameId = (game_id: string): ServersAction => ({\r\n    type: GET_SERVERS,\r\n    payload: game_id,\r\n});\r\n\r\nexport const getServersSuccess = (data: []): ServersAction => ({\r\n    type: GET_SERVERS_SUCCESS,\r\n    payload: data,\r\n});\r\n\r\nexport const getServersFailed = (error: string): ServersAction => ({\r\n    type: GET_SERVERS_FAILED,\r\n    payload: error,\r\n});\r\n","import {\r\n  GET_VIP_DASHBOARD_DATA,\r\n  GET_VIP_DASHBOARD_DATA_SUCCESS,\r\n  GET_VIP_DASHBOARD_DATA_FAILED,\r\n} from \"./constants\";\r\n\r\ntype VipRptAction = { type: string, payload: {} | string };\r\n\r\nexport const getVipDashboardData = (option: {}): VipRptAction => ({\r\n  type: GET_VIP_DASHBOARD_DATA,\r\n  payload: option,\r\n});\r\n\r\nexport const getVipDashboardDataSuccess = (data: []): VipRptAction => ({\r\n  type: GET_VIP_DASHBOARD_DATA_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getVipDashboardDataFailed = (error: string): VipRptAction => ({\r\n  type: GET_VIP_DASHBOARD_DATA_FAILED,\r\n  payload: error,\r\n});\r\n","import {\r\n  GET_SERIAL_RECORDS,\r\n  GET_SERIAL_RECORDS_SUCCESS,\r\n  GET_SERIAL_RECORDS_FAILED\r\n} from './constants';\r\n\r\ntype EventAction = { type: string, payload: {} | string };\r\n\r\nexport const getSerialEventRecords = (event_id: Number): EventAction => ({\r\n  type: GET_SERIAL_RECORDS,\r\n  payload: event_id\r\n});\r\n\r\nexport const getSerialEventRecordsSuccess = (data: []): EventAction => ({\r\n  type: GET_SERIAL_RECORDS_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nexport const getSerialEventRecordsFailed = (error: string): EventAction => ({\r\n  type: GET_SERIAL_RECORDS_FAILED,\r\n  payload: error\r\n});\r\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\nimport Loadable from 'react-loadable';\n\nimport { isUserAuthenticated } from '../helpers/authUtils';\nimport * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div></div>;\n\n// All layouts/containers\nconst AuthLayout = Loadable({\n    loader: () => import('../layouts/Auth'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst VerticalLayout = Loadable({\n    loader: () => import('../layouts/Vertical'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst HorizontalLayout = Loadable({\n    loader: () => import('../layouts/Horizontal'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\nconst DetachedLayout = Loadable({\n    loader: () => import('../layouts/Detached'),\n    render(loaded, props) {\n        let Component = loaded.default;\n        return <Component {...props} />;\n    },\n    loading,\n});\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent: any) => {\n    type HOCProps = {\n        layout: { layoutType?: string },\n    };\n    const HOC = class extends Component<HOCProps> {\n        /**\n         * Returns the layout component based on different properties\n         */\n        getLayout = () => {\n            if (!isUserAuthenticated()) return AuthLayout;\n\n            let layoutCls = VerticalLayout;\n\n            switch (this.props.layout.layoutType) {\n                case layoutConstants.LAYOUT_HORIZONTAL:\n                    layoutCls = HorizontalLayout;\n                    break;\n                case layoutConstants.LAYOUT_DETACHED:\n                    layoutCls = DetachedLayout;\n                    break;\n                default:\n                    layoutCls = VerticalLayout;\n                    break;\n            }\n            return layoutCls;\n        };\n\n        render() {\n            const Layout = this.getLayout();\n            return (\n                <Suspense fallback={loading()}>\n                    <Layout {...this.props}>\n                        <WrappedComponent {...this.props} />\n                    </Layout>\n                </Suspense>\n            );\n        }\n    };\n\n    const mapStateToProps = state => {\n        return {\n            layout: state.Layout,\n        };\n    };\n\n    return connect(\n        mapStateToProps,\n        null\n    )(HOC);\n};\n\nexport default withLayout;\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from \"../helpers/authUtils\";\r\n\r\n// lazy load all the views\r\n\r\n// auth\r\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\r\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\r\nconst Register = React.lazy(() => import(\"../pages/auth/Register\"));\r\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\r\nconst Confirm = React.lazy(() => import(\"../pages/auth/Confirm\"));\r\n// dashboard\r\nconst EcommerceDashboard = React.lazy(() =>\r\n  import(\"../pages/dashboards/Ecommerce\")\r\n);\r\nconst CRMDashboard = React.lazy(() => import(\"../pages/dashboards/CRM\"));\r\n//*add new\r\nconst AdminDashboard = React.lazy(() => import(\"../pages/dashboards/Admin\"));\r\n// apps\r\nconst CalendarApp = React.lazy(() => import(\"../pages/apps/Calendar\"));\r\nconst Projects = React.lazy(() => import(\"../pages/apps/Projects\"));\r\nconst ProjectDetail = React.lazy(() => import(\"../pages/apps/ProjectDetail\"));\r\n// - ecommece pages\r\nconst EcommerceProducts = React.lazy(() =>\r\n  import(\"../pages/apps/Ecommerce/Products\")\r\n);\r\nconst ProductDetails = React.lazy(() =>\r\n  import(\"../pages/apps/Ecommerce/ProductDetails\")\r\n);\r\nconst Orders = React.lazy(() => import(\"../pages/apps/Ecommerce/Orders\"));\r\nconst OrderDetails = React.lazy(() =>\r\n  import(\"../pages/apps/Ecommerce/OrderDetails\")\r\n);\r\nconst Customers = React.lazy(() => import(\"../pages/apps/Ecommerce/Customers\"));\r\nconst Cart = React.lazy(() => import(\"../pages/apps/Ecommerce/Cart\"));\r\nconst Checkout = React.lazy(() => import(\"../pages/apps/Ecommerce/Checkout/\"));\r\nconst Sellers = React.lazy(() => import(\"../pages/apps/Ecommerce/Sellers\"));\r\n// - kanban\r\nconst Kanban = React.lazy(() => import(\"../pages/apps/Kanban/\"));\r\n\r\n// - email\r\nconst Inbox = React.lazy(() => import(\"../pages/apps/Email/Inbox\"));\r\nconst EmailDetail = React.lazy(() => import(\"../pages/apps/Email/Detail\"));\r\n\r\n// pages\r\nconst Starter = React.lazy(() => import(\"../pages/Starter\"));\r\nconst Profile = React.lazy(() => import(\"../pages/profile\"));\r\nconst ErrorPageNotFound = React.lazy(() =>\r\n  import(\"../pages/error/PageNotFound\")\r\n);\r\nconst ServerError = React.lazy(() => import(\"../pages/error/ServerError\"));\r\nconst ErrorForbidden = React.lazy(() =>\r\n  import(\"../pages/error/ErrorForbidden\")\r\n);\r\n\r\n// - other\r\nconst Invoice = React.lazy(() => import(\"../pages/other/Invoice\"));\r\nconst FAQ = React.lazy(() => import(\"../pages/other/FAQ\"));\r\nconst Pricing = React.lazy(() => import(\"../pages/other/Pricing\"));\r\n\r\n// uikit\r\nconst Cards = React.lazy(() => import(\"../pages/uikit/Cards\"));\r\nconst Buttons = React.lazy(() => import(\"../pages/uikit/Buttons\"));\r\nconst Modals = React.lazy(() => import(\"../pages/uikit/Modals\"));\r\nconst Tabs = React.lazy(() => import(\"../pages/uikit/Tabs\"));\r\nconst Notifications = React.lazy(() => import(\"../pages/uikit/Notifications\"));\r\nconst Grid = React.lazy(() => import(\"../pages/uikit/Grid\"));\r\nconst General = React.lazy(() => import(\"../pages/uikit/General\"));\r\nconst Typography = React.lazy(() => import(\"../pages/uikit/Typography\"));\r\nconst Icons = React.lazy(() => import(\"../pages/uikit/Icons\"));\r\nconst Spinners = React.lazy(() => import(\"../pages/uikit/Spinners\"));\r\nconst Widgets = React.lazy(() => import(\"../pages/uikit/Widgets\"));\r\n// forms\r\nconst BasicForms = React.lazy(() => import(\"../pages/forms/Basic\"));\r\nconst FormValidation = React.lazy(() => import(\"../pages/forms/Validation\"));\r\nconst FormAdvanced = React.lazy(() => import(\"../pages/forms/Advanced\"));\r\nconst FormWizard = React.lazy(() => import(\"../pages/forms/Wizard\"));\r\nconst FileUpload = React.lazy(() => import(\"../pages/forms/FileUpload\"));\r\nconst Editors = React.lazy(() => import(\"../pages/forms/Editors\"));\r\n// charts\r\nconst ApexChart = React.lazy(() => import(\"../pages/charts/Apex\"));\r\nconst BriteChart = React.lazy(() => import(\"../pages/charts/Brite\"));\r\nconst ChartJs = React.lazy(() => import(\"../pages/charts/ChartJs\"));\r\n// tables\r\nconst BasicTables = React.lazy(() => import(\"../pages/tables/Basic\"));\r\nconst AdvancedTables = React.lazy(() => import(\"../pages/tables/Advanced\"));\r\nconst TestTable = React.lazy(() => import(\"../pages/tables/TestTable\"));\r\n\r\n// maps\r\nconst GoogleMaps = React.lazy(() => import(\"../pages/GoogleMaps\"));\r\n\r\n//platform\r\nconst ModifyPassword = React.lazy(() =>\r\n  import(\"../pages/platform/ModifyPassword\")\r\n);\r\n\r\nconst PresetMessageHome = React.lazy(() =>\r\n  import(\"../pages/platform/preset_messages/index\")\r\n);\r\n\r\nconst UserLogsHome = React.lazy(() => import(\"../pages/platform/logs/index\"));\r\n\r\n//offline cs\r\nconst CplCaseHome = React.lazy(() =>\r\n  import(\"../pages/offline/cpl_case/CplCaseHome\")\r\n);\r\nconst CplCaseForm = React.lazy(() =>\r\n  import(\"../pages/offline/cpl_case/CplCaseForm\")\r\n);\r\n\r\nconst CplCaseView = React.lazy(() =>\r\n  import(\"../pages/offline/cpl_case/CplCaseView\")\r\n);\r\n\r\nconst GovLetterHome = React.lazy(() =>\r\n  import(\"../pages/offline/gov_letter/GovLetterHome\")\r\n);\r\nconst PersonalVisitHome = React.lazy(() =>\r\n  import(\"../pages/offline/personal_visit/PersonalVisitHome\")\r\n);\r\nconst PersonalVisitForm = React.lazy(() =>\r\n  import(\"../pages/offline/personal_visit/PersonalVisitForm\")\r\n);\r\n\r\nconst GovLetterForm = React.lazy(() =>\r\n  import(\"../pages/offline/gov_letter/GovLetterForm\")\r\n);\r\n\r\n//service\r\n\r\nconst ServiceOverview = React.lazy(() =>\r\n  import(\"../pages/service/questions/overview\")\r\n);\r\nconst ServiceStatistics = React.lazy(() =>\r\n  import(\"../pages/service/statistics\")\r\n);\r\n\r\nconst ServiceStatisticsByHour = React.lazy(() =>\r\n  import(\"../pages/service/statistics/ServiceStatisticsByHour\")\r\n);\r\n\r\nconst QuestionsQueryHome = React.lazy(() =>\r\n  import(\"../pages/service/questions/query/QueryHome\")\r\n);\r\n\r\nconst AllocateListPage = React.lazy(() => import(\"../pages/service/allocate\"));\r\nconst QuesionsListPage = React.lazy(() => import(\"../pages/service/questions\"));\r\nconst SingleQuestionPage = React.lazy(() =>\r\n  import(\"../pages/service/questions/view\")\r\n);\r\n\r\nconst TestPage = React.lazy(() =>\r\n  import(\"../pages/service/questions/TestPage\")\r\n);\r\n\r\nconst BatchListPage = React.lazy(() => import(\"../pages/service/batch\"));\r\nconst BatchTaskView = React.lazy(() =>\r\n  import(\"../pages/service/batch/BatchTaskView\")\r\n);\r\n\r\n//vip\r\nconst WhaleUserHome = React.lazy(() =>\r\n  import(\"../pages/vip/whale_users/WhaleUserHome\")\r\n);\r\n\r\n///vip/user_dashboard/${gameId}?\r\nconst WhaleUserDashboard = React.lazy(() =>\r\n  import(\"../pages/vip/whale_users/UserDashboard\")\r\n);\r\n\r\nconst VipDashboardHome = React.lazy(() =>\r\n  import(\"../pages/vip/dashboard/VipDashboardHome\")\r\n);\r\n\r\nconst RequestReportHome = React.lazy(() =>\r\n  import(\"../pages/vip/whale_users/RequestReportHome\")\r\n);\r\n\r\nconst VipOfferHome = React.lazy(() => import(\"../pages/vip/offers/index\"));\r\nconst VipOfferForm = React.lazy(() => import(\"../pages/vip/offers/form\"));\r\nconst VipOrdersHome = React.lazy(() =>\r\n  import(\"../pages/vip/offers/VipOrdersHome\")\r\n);\r\nconst VipOrdersForm = React.lazy(() =>\r\n  import(\"../pages/vip/offers/VipOrdersForm\")\r\n);\r\n\r\n//Games\r\nconst GamesHome = React.lazy(() => import(\"../pages/games\"));\r\nconst GamesEditForm = React.lazy(() => import(\"../pages/games/form\"));\r\nconst ServerHome = React.lazy(() => import(\"../pages/games/ServerHome\"));\r\n\r\n//event\r\n\r\nconst SerialRecordsHome = React.lazy(() =>\r\n  import(\"../pages/events/SerialRecordsHome\")\r\n);\r\n\r\n// handle auth and authorization\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (!isUserAuthenticated()) {\r\n        // not logged in so redirect to login page with the return url\r\n        return (\r\n          <Redirect\r\n            to={{ pathname: \"/account/login\", state: { from: props.location } }}\r\n          />\r\n        );\r\n      }\r\n\r\n      const loggedInUser = getLoggedInUser();\r\n      // check if route is restricted by role\r\n      if (roles && roles.indexOf(loggedInUser.role) === -1) {\r\n        // role not authorised so redirect to home page\r\n        return <Redirect to={{ pathname: \"/\" }} />;\r\n      }\r\n\r\n      // authorised so return component\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n  path: \"/\",\r\n  exact: true,\r\n  component: () => <Redirect to=\"/dashboard/service\" />,\r\n  route: PrivateRoute,\r\n};\r\n\r\n// dashboards\r\nconst myDashboardRoutes = {\r\n  path: \"/mydashboard\",\r\n  name: \"我的\",\r\n  icon: \"dripicons-meter\",\r\n  header: \"Navigation\",\r\n  children: [\r\n    {\r\n      path: \"/mydashboard/ecommerce\",\r\n      name: \"Ecommerce\",\r\n      badge: {\r\n        variant: \"success\",\r\n        text: \"3\",\r\n      },\r\n      component: EcommerceDashboard,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/mydashboard/crm\",\r\n      name: \"CRM\",\r\n      component: CRMDashboard,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n//official dashboards\r\nconst dashboardRoutes = {\r\n  path: \"/dashboard\",\r\n  name: \"Dashboard\",\r\n  icon: \"dripicons-meter\",\r\n  header: \"Navigation\",\r\n  children: [\r\n    {\r\n      path: \"/dashboard/service\",\r\n      name: \"客服相關\",\r\n      component: AdminDashboard,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n// apps\r\nconst appRoutes = {\r\n  path: \"/apps\",\r\n  name: \"Apps\",\r\n  icon: \"dripicons-view-apps\",\r\n  children: [\r\n    {\r\n      path: \"/apps/calendar\",\r\n      name: \"Calendar\",\r\n      component: CalendarApp,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/apps/projects\",\r\n      name: \"Projects\",\r\n      children: [\r\n        {\r\n          path: \"/apps/projects/list\",\r\n          name: \"List\",\r\n          component: Projects,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/projects/detail\",\r\n          name: \"Detail\",\r\n          component: ProjectDetail,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/apps/ecommerce\",\r\n      name: \"eCommerce\",\r\n      children: [\r\n        {\r\n          path: \"/apps/ecommerce/products\",\r\n          name: \"Products\",\r\n          component: EcommerceProducts,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/details\",\r\n          name: \"Product Details\",\r\n          component: ProductDetails,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/orders\",\r\n          name: \"Orders\",\r\n          component: Orders,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/order/details\",\r\n          name: \"Order Details\",\r\n          component: OrderDetails,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/customers\",\r\n          name: \"Customers\",\r\n          component: Customers,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/shopping-cart\",\r\n          name: \"Shopping Cart\",\r\n          component: Cart,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/checkout\",\r\n          name: \"Checkout\",\r\n          component: Checkout,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/ecommerce/sellers\",\r\n          name: \"Sellers\",\r\n          component: Sellers,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/apps/kanban\",\r\n      name: \"Kanban\",\r\n      component: Kanban,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/apps/email\",\r\n      name: \"Email\",\r\n      children: [\r\n        {\r\n          path: \"/apps/email/inbox\",\r\n          name: \"Inbox\",\r\n          component: Inbox,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/apps/email/details\",\r\n          name: \"Email Details\",\r\n          component: EmailDetail,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\n// pages\r\nconst pageRoutes = {\r\n  path: \"/pages\",\r\n  name: \"Pages\",\r\n  icon: \"dripicons-copy\",\r\n  children: [\r\n    {\r\n      path: \"/pages/starter\",\r\n      name: \"Starter\",\r\n      component: Starter,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/profile\",\r\n      name: \"Profile\",\r\n      component: Profile,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/invoice\",\r\n      name: \"Invoice\",\r\n      component: Invoice,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/faq\",\r\n      name: \"FAQ\",\r\n      component: FAQ,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/pricing\",\r\n      name: \"Pricing\",\r\n      component: Pricing,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/error-403\",\r\n      name: \"Error - 403\",\r\n      component: ErrorForbidden,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/error-404\",\r\n      name: \"Error - 404\",\r\n      component: ErrorPageNotFound,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/pages/error-500\",\r\n      name: \"Error - 500\",\r\n      component: ServerError,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\n// auth\r\nconst authRoutes = {\r\n  path: \"/account\",\r\n  name: \"Auth\",\r\n  children: [\r\n    {\r\n      path: \"/account/login\",\r\n      name: \"Login\",\r\n      component: Login,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/logout\",\r\n      name: \"Logout\",\r\n      component: Logout,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/register\",\r\n      name: \"Register\",\r\n      component: Register,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/confirm\",\r\n      name: \"Confirm\",\r\n      component: Confirm,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/forget-password\",\r\n      name: \"Forget Password\",\r\n      component: ForgetPassword,\r\n      route: Route,\r\n    },\r\n  ],\r\n};\r\n\r\n// ui\r\nconst uiRoutes = {\r\n  path: \"/ui\",\r\n  name: \"UI Kit\",\r\n  icon: \"dripicons-briefcase\",\r\n  children: [\r\n    {\r\n      path: \"/ui/buttons\",\r\n      name: \"Buttons\",\r\n      component: Buttons,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/cards\",\r\n      name: \"Cards\",\r\n      component: Cards,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/general\",\r\n      name: \"General\",\r\n      component: General,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/grid\",\r\n      name: \"Grid\",\r\n      component: Grid,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/icons\",\r\n      name: \"Icons\",\r\n      component: Icons,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/modals\",\r\n      name: \"Modals\",\r\n      component: Modals,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/notifications\",\r\n      name: \"Notifications\",\r\n      component: Notifications,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/spinners\",\r\n      name: \"Spinners\",\r\n      component: Spinners,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/tabs\",\r\n      name: \"Tabs\",\r\n      component: Tabs,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/typography\",\r\n      name: \"Typography\",\r\n      component: Typography,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/ui/widgets\",\r\n      name: \"Widgets\",\r\n      component: Widgets,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\n// forms\r\nconst formsRoutes = {\r\n  path: \"/forms\",\r\n  name: \"Forms\",\r\n  icon: \"dripicons-document\",\r\n  children: [\r\n    {\r\n      path: \"/forms/basic\",\r\n      name: \"Basic Elements\",\r\n      component: BasicForms,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/forms/advanced\",\r\n      name: \"Form Advanced\",\r\n      component: FormAdvanced,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/forms/validation\",\r\n      name: \"Form validation\",\r\n      component: FormValidation,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/forms/wizard\",\r\n      name: \"Form Wizard\",\r\n      component: FormWizard,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/forms/upload\",\r\n      name: \"File Upload\",\r\n      component: FileUpload,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/forms/editors\",\r\n      name: \"Editors\",\r\n      component: Editors,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\n// other features\r\nconst featuresRoutes = {\r\n  path: \"/features\",\r\n  name: \"Features\",\r\n  icon: \"dripicons-view-list-large\",\r\n  children: [\r\n    {\r\n      path: \"/features/charts\",\r\n      name: \"Charts\",\r\n      children: [\r\n        {\r\n          path: \"/features/charts/apex\",\r\n          name: \"Apex\",\r\n          component: ApexChart,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/features/charts/brite\",\r\n          name: \"Brite\",\r\n          component: BriteChart,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/features/charts/chartjs\",\r\n          name: \"Chartjs\",\r\n          component: ChartJs,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/features/tables\",\r\n      name: \"Tables\",\r\n      children: [\r\n        {\r\n          path: \"/features/tables/basic\",\r\n          name: \"Basic\",\r\n          component: BasicTables,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/features/tables/advanced\",\r\n          name: \"Advanced\",\r\n          component: AdvancedTables,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/features/tables/testtable\",\r\n          name: \"測試表格\",\r\n          component: TestTable,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/features/googlemaps\",\r\n      name: \"Google Maps\",\r\n      component: GoogleMaps,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\nconst platformRoutesSub = {\r\n  path: \"/platform\",\r\n  name: \"Platform\",\r\n  children: [\r\n    {\r\n      path: \"/platform/modify_password\",\r\n      name: \"修改密碼\",\r\n      component: ModifyPassword,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/platform/preset_messages\",\r\n      name: \"自訂快速回覆\",\r\n      component: PresetMessageHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/platform/action_history\",\r\n      name: \"後台操作紀錄\",\r\n      component: UserLogsHome,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n// online cs\r\n\r\nconst serviceRoutesSub = {\r\n  path: \"/service\",\r\n  name: \"Service\",\r\n  children: [\r\n    {\r\n      path: \"/service/view/:question_id\",\r\n      name: \"客服案件檢視\",\r\n      component: SingleQuestionPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/service/batch_handler/:record_id\",\r\n      name: \"批次處理-項目檢視\",\r\n      component: BatchTaskView,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\nconst serviceRoutes = {\r\n  path: \"/service\",\r\n  name: \"客服\",\r\n  icon: \" dripicons-device-desktop\",\r\n  children: [\r\n    {\r\n      exact: true,\r\n      path: \"/service/overview\",\r\n      name: \"總覽\",\r\n      component: ServiceOverview,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      exact: true,\r\n      path: \"/service/questions/todo\",\r\n      name: \"待處理案件\",\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/service/questions/get_list\",\r\n      name: \"等待中案件\",\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/service/questions/closed\",\r\n      name: \"近期結案案件\",\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/service/questions/hidden\",\r\n      name: \"隱藏案件\",\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/service/questions/favorite\",\r\n      name: \"我收藏的案件\",\r\n      icon: \"dripicons-star\",\r\n      component: QuesionsListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      exact: true,\r\n      path: \"/service/allocate/list\",\r\n      name: \"派單系統- 案件列表\",\r\n      component: AllocateListPage,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      exact: true,\r\n      path: \"/service/statistics\",\r\n      name: \"件數統計\",\r\n      component: ServiceStatistics,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      exact: true,\r\n      path: \"/service/pivot_tbl\",\r\n      name: \"時間別統計\",\r\n      component: ServiceStatisticsByHour,\r\n      route: PrivateRoute,\r\n    },\r\n\r\n    {\r\n      exact: true,\r\n      path: \"/service/questions/query\",\r\n      name: \"案件查詢\",\r\n      icon: \"dripicons-search\",\r\n      component: QuestionsQueryHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      exact: true,\r\n      path: \"/service/batch_list\",\r\n      name: \"批次處理\",\r\n      icon: \"dripicons-basket\",\r\n      component: BatchListPage,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n// offline cs\r\nconst offlineRoutes = {\r\n  path: \"/offline\",\r\n  name: \"線下客服區\",\r\n  icon: \"dripicons-briefcase\",\r\n  children: [\r\n    {\r\n      path: \"/offline/cpl_case/home\",\r\n      name: \"消保\",\r\n      component: CplCaseHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/gov_letter/home\",\r\n      name: \"公函\",\r\n      component: GovLetterHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/personal_visit/home\",\r\n      name: \"親訪\",\r\n      component: PersonalVisitHome,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\nconst offlineRoutesSub = {\r\n  path: \"/offline\",\r\n  name: \"offlineCS\",\r\n  children: [\r\n    {\r\n      path: \"/offline/personal_visit/create\",\r\n      name: \"新增親訪紀錄\",\r\n      component: PersonalVisitForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/personal_visit/edit/:record_id\",\r\n      name: \"編輯親訪紀錄\",\r\n      component: PersonalVisitForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/gov_letter/create\",\r\n      name: \"新增公函\",\r\n      component: GovLetterForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/gov_letter/edit/:record_id\",\r\n      name: \"編輯公函\",\r\n      component: GovLetterForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/cpl_case/create\",\r\n      name: \"新增消保紀錄\",\r\n      component: CplCaseForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/cpl_case/edit/:record_id\",\r\n      name: \"編輯消保紀錄\",\r\n      component: CplCaseForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/offline/cpl_case/view/:record_id\",\r\n      name: \"檢視消保紀錄\",\r\n      component: CplCaseView,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/test\",\r\n      name: \"測試\",\r\n      component: TestPage,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\n// VIP\r\nconst vipRoutes = {\r\n  path: \"/vip\",\r\n  name: \"VIP\",\r\n  icon: \"dripicons-trophy\",\r\n  children: [\r\n    {\r\n      path: \"/vip/dashboard\",\r\n      name: \"總覽\",\r\n      component: VipDashboardHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/vip/whale_users\",\r\n      name: \"鯨魚用戶\",\r\n      component: WhaleUserHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/vip/requests_report\",\r\n      name: \"鯨魚用戶服務紀錄\",\r\n      component: RequestReportHome,\r\n      route: PrivateRoute,\r\n    },\r\n\r\n    {\r\n      path: \"/vip/wire_report/list\",\r\n      name: \"VIP 訂單\",\r\n      component: VipOrdersHome,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/vip/offers\",\r\n      name: \"VIP方案\",\r\n      children: [\r\n        {\r\n          path: \"/vip/offers/offer_list\",\r\n          name: \"方案列表\",\r\n          component: VipOfferHome,\r\n          route: PrivateRoute,\r\n        },\r\n        {\r\n          path: \"/vip/offers/form/create\",\r\n          name: \"新增方案\",\r\n          component: VipOfferForm,\r\n          route: PrivateRoute,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n//games\r\n\r\nconst gamesRoutes = {\r\n  path: \"/games\",\r\n  name: \"遊戲管理\",\r\n  icon: \"dripicons-archive\",\r\n  children: [\r\n    {\r\n      path: \"/games/home\",\r\n      name: \"遊戲設定\",\r\n      component: GamesHome,\r\n      route: PrivateRoute,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: \"/games/create\",\r\n      name: \"新增遊戲\",\r\n      component: GamesEditForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/games/servers\",\r\n      name: \"伺服器設定\",\r\n      component: ServerHome,\r\n      route: PrivateRoute,\r\n      exact: true,\r\n    },\r\n  ],\r\n};\r\n\r\n//events\r\n\r\nconst eventsRoutes = {\r\n  path: \"/events\",\r\n  name: \"活動\",\r\n  icon: \"dripicons-broadcast\",\r\n  children: [\r\n    {\r\n      path: \"/events/serial\",\r\n      name: \"虛寶活動\",\r\n      component: SerialRecordsHome,\r\n      route: PrivateRoute,\r\n      exact: true,\r\n    },\r\n  ],\r\n};\r\n// online cs\r\n\r\nconst gameRoutesSub = {\r\n  path: \"/games\",\r\n  name: \"games\",\r\n  children: [\r\n    {\r\n      path: \"/games/edit/:game_id\",\r\n      name: \"編輯遊戲\",\r\n      component: GamesEditForm,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\nconst vipRoutesSub = {\r\n  path: \"/vip\",\r\n  name: \"VIP\",\r\n  children: [\r\n    {\r\n      path: \"/vip/wire_report/edit/:report_id\",\r\n      name: \"編輯vip訂單\",\r\n      component: VipOrdersForm,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/vip/user_dashboard/:game_id\",\r\n      name: \"維護鯨魚用戶資料\",\r\n      component: WhaleUserDashboard,\r\n      route: PrivateRoute,\r\n    },\r\n    {\r\n      path: \"/vip/offers/form/:product_id\",\r\n      name: \"編輯方案\",\r\n      component: VipOfferForm,\r\n      route: PrivateRoute,\r\n    },\r\n  ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n  let flatRoutes = [];\r\n\r\n  routes = routes || [];\r\n  routes.forEach((item) => {\r\n    flatRoutes.push(item);\r\n\r\n    if (typeof item.children !== \"undefined\") {\r\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n    }\r\n  });\r\n  return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [\r\n  rootRoute,\r\n  dashboardRoutes,\r\n  appRoutes,\r\n  authRoutes,\r\n  pageRoutes,\r\n  uiRoutes,\r\n  formsRoutes,\r\n  featuresRoutes,\r\n  platformRoutesSub,\r\n  offlineRoutes,\r\n  offlineRoutesSub,\r\n  myDashboardRoutes,\r\n  serviceRoutes,\r\n  serviceRoutesSub,\r\n  vipRoutes,\r\n  gamesRoutes,\r\n  gameRoutesSub,\r\n  vipRoutesSub,\r\n  eventsRoutes,\r\n];\r\n\r\n//所有要在leftSideBar顯示的路徑\r\nconst loggedInUser = getLoggedInUser();\r\nconst authProtectedRoutes =\r\n  loggedInUser !== null && loggedInUser.uid === 112\r\n    ? [\r\n        dashboardRoutes,\r\n        appRoutes,\r\n        pageRoutes,\r\n        uiRoutes,\r\n        formsRoutes,\r\n        featuresRoutes,\r\n        offlineRoutes,\r\n        myDashboardRoutes,\r\n        serviceRoutes,\r\n        vipRoutes,\r\n        gamesRoutes,\r\n        eventsRoutes,\r\n      ]\r\n    : [\r\n        dashboardRoutes,\r\n        offlineRoutes,\r\n        serviceRoutes,\r\n        vipRoutes,\r\n        gamesRoutes,\r\n        eventsRoutes,\r\n      ];\r\n\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\n\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","// @flow\nimport React, { Component } from \"react\";\nimport Routes from \"./routes/Routes\";\n\n// Themes\nimport \"./assets/scss/DefaultTheme.scss\";\n\n// For Dark import DarkTheme.scss\n// import \"./assets/scss/DarkTheme.scss\";\n\n// For green - import GreenTheme.scss\n// import './assets/scss/GreenTheme.scss';\n\n// configure fake backend\n//configureFakeBackend();\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nclass App extends Component<AppProps> {\n  render() {\n    return <Routes></Routes>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    stat: {},\r\n    loading: true,\r\n};\r\n\r\ntype DashboardAction = { type: string, payload: {} | string };\r\ntype State = { stat?: {} | null, loading?: boolean, +value?: boolean };\r\n\r\nconst Dashboard = (state: State = INIT_STATE, action: DashboardAction) => {\r\n    switch (action.type) {\r\n        case GET_DATA:\r\n            return { ...state, loading: true };\r\n        case GET_DATA_SUCCESS:\r\n            return { ...state, stat: action.payload, loading: false, error: null };\r\n        case GET_DATA_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Dashboard;\r\n","// @flow\nimport {\n  UPDATE_PASSWORD,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_FAILED,\n  GET_PRESET_MESSAGE,\n  GET_PRESET_MESSAGE_SUCCESS,\n  GET_PRESET_MESSAGE_FAILED,\n  EDIT_PRESET_MESSAGE,\n  EDIT_PRESET_MESSAGE_SUCCESS,\n  EDIT_PRESET_MESSAGE_FAILED,\n  DELETE_PRESET_MESSAGE,\n  DELETE_PRESET_MESSAGE_SUCCESS,\n  DELETE_PRESET_MESSAGE_FAILED,\n  CLEAR_MESSAGE\n} from \"./constants\";\n\nconst INIT_STATE = {\n  updated: null,\n  loading: true,\n  error: \"\",\n  preset_messages: [],\n  updateOKMessage: null\n};\n\ntype PlatformAction = { type: string, payload: {} | string };\ntype State = {\n  user?: {} | null,\n  loading?: boolean,\n  +value?: boolean,\n  preset_messages?: [] | null,\n  updateOKMessage?: string\n};\n\n// {\n//   \"msg\": \"編輯成功\",\n//   \"affectedId\": \"3\",\n//   \"updField\": {\n//       \"rank\": \"1\",\n//       \"message\": \"first message UPDATED 1223\"\n//   }\n// }\nconst Platform = (state: State = INIT_STATE, action: PlatformAction) => {\n  switch (action.type) {\n    case UPDATE_PASSWORD:\n    case GET_PRESET_MESSAGE:\n      return { ...state, loading: true };\n    case CLEAR_MESSAGE:\n      return { ...state, updateOKMessage: null };\n    case UPDATE_PASSWORD_SUCCESS:\n      return { ...state, updated: true, loading: false, error: null };\n    case EDIT_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages:\n          action.payload.action === \"add\"\n            ? [\n                ...state.preset_messages,\n                { id: action.payload.affectedId, ...action.payload.updField }\n              ]\n            : state.preset_messages.map(item =>\n                item.id.toString() === action.payload.affectedId\n                  ? { ...item, ...action.payload.updField }\n                  : item\n              ),\n        loading: false,\n        error: null\n      };\n\n    case DELETE_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        updateOKMessage: action.payload.msg,\n        preset_messages: state.preset_messages.filter(\n          item => item.id.toString() !== action.payload.deleted_id\n        ),\n        loading: false,\n        error: null\n      };\n    case UPDATE_PASSWORD_FAILED:\n    case GET_PRESET_MESSAGE_FAILED:\n    case EDIT_PRESET_MESSAGE_FAILED:\n    case DELETE_PRESET_MESSAGE_FAILED:\n      return { ...state, error: action.payload, loading: false };\n\n    case GET_PRESET_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        preset_messages: action.payload,\n        loading: false,\n        error: null\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Platform;\n","// @flow\r\nimport {\r\n  GET_GOV_DATA,\r\n  GET_GOV_DATA_SUCCESS,\r\n  GET_GOV_DATA_FAILED,\r\n  EDIT_RECORD,\r\n  EDIT_RECORD_SUCCESS,\r\n  EDIT_RECORD_FAILED,\r\n  GET_CURRENT,\r\n  GET_CURRENT_SUCCESS,\r\n  GET_CURRENT_FAILED,\r\n  EDIT_CPL_REPLY,\r\n  EDIT_CPL_REPLY_SUCCESS,\r\n  EDIT_CPL_REPLY_FAILED,\r\n  DELETE_CPL,\r\n  DELETE_CPL_SUCCESS,\r\n  DELETE_CPL_FAILED,\r\n  DELETE_GOV_LETTER,\r\n  DELETE_GOV_LETTER_SUCCESS,\r\n  DELETE_GOV_LETTER_FAILED,\r\n  MOVE_CPL,\r\n  MOVE_CPL_SUCCESS,\r\n  MOVE_CPL_FAILED,\r\n  EDIT_CPL_MEDIATION,\r\n  EDIT_CPL_MEDIATION_SUCCESS,\r\n  EDIT_CPL_MEDIATION_FAILED,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_REPLY_SUCCESS,\r\n  DELETE_CPL_REPLY_FAILED,\r\n  DELETE_CPL_MEDIATION,\r\n  DELETE_CPL_MEDIATION_SUCCESS,\r\n  DELETE_CPL_MEDIATION_FAILED,\r\n  EDIT_CPL_REF,\r\n  EDIT_CPL_REF_SUCCESS,\r\n  EDIT_CPL_REF_FAILED,\r\n  DELETE_CPL_REF,\r\n  DELETE_CPL_REF_SUCCESS,\r\n  DELETE_CPL_REF_FAILED,\r\n  ADD_CPL_ATTACHMENT,\r\n  ADD_CPL_ATTACHMENT_SUCCESS,\r\n  ADD_CPL_ATTACHMENT_FAILED,\r\n  DELETE_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT_SUCCESS,\r\n  DELETE_CPL_ATTACHMENT_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  records: [],\r\n  loading: true,\r\n  affectedId: 0,\r\n  error: {},\r\n  currentRecord: {}\r\n};\r\n\r\ntype OfflineCsAction = { type: string, payload: {} | string };\r\ntype State = { records?: [] | null, loading?: boolean, +value?: boolean };\r\n\r\nconst OfflineCS = (state: State = INIT_STATE, action: OfflineCsAction) => {\r\n  switch (action.type) {\r\n    case GET_GOV_DATA:\r\n      return { ...state, loading: true, affectedId: 0, currentRecord: {} };\r\n    case GET_GOV_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        records: action.payload.list,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_GOV_DATA_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_RECORD:\r\n    case EDIT_CPL_REPLY:\r\n    case DELETE_CPL_REPLY:\r\n    case DELETE_CPL_MEDIATION:\r\n    case MOVE_CPL:\r\n    case DELETE_CPL:\r\n    case EDIT_CPL_MEDIATION:\r\n    case EDIT_CPL_REF:\r\n    case DELETE_CPL_REF:\r\n    case ADD_CPL_ATTACHMENT:\r\n    case DELETE_CPL_ATTACHMENT:\r\n    case DELETE_GOV_LETTER:\r\n      return { ...state, loading: true };\r\n    case MOVE_CPL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          ...action.payload.updField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_RECORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies: state.currentRecord.replies.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations: state.currentRecord.mediations.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: state.currentRecord.attachments.filter(\r\n            re => re.id.toString() !== action.payload.deleted_id\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_MEDIATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          mediations:\r\n            action.payload.act === 'add'\r\n              ? [...state.currentRecord.mediations, action.payload.mediation]\r\n              : [\r\n                  ...state.currentRecord.mediations.filter(\r\n                    re => re.id !== action.payload.mediation.id\r\n                  ),\r\n                  action.payload.mediation\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ADD_CPL_ATTACHMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          attachments: action.payload.attachments\r\n        },\r\n\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: action.payload.refs,\r\n          ref_case_list: action.payload.ref_case_list\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case DELETE_CPL_REF_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          refs: state.currentRecord.refs.filter(\r\n            re => re.ref_id.toString() !== action.payload.deleted_id.toString()\r\n          )\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case EDIT_CPL_REPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          replies:\r\n            action.payload.act === 'add'\r\n              ? [...state.currentRecord.replies, action.payload.reply]\r\n              : [\r\n                  ...state.currentRecord.replies.filter(\r\n                    re => re.id !== action.payload.reply.id\r\n                  ),\r\n                  action.payload.reply\r\n                ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case EDIT_RECORD_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case EDIT_CPL_REPLY_FAILED:\r\n    case DELETE_CPL_REPLY_FAILED:\r\n    case EDIT_CPL_MEDIATION_FAILED:\r\n    case DELETE_CPL_MEDIATION_FAILED:\r\n    case EDIT_CPL_REF_FAILED:\r\n    case DELETE_CPL_REF_FAILED:\r\n    case ADD_CPL_ATTACHMENT_FAILED:\r\n    case DELETE_CPL_ATTACHMENT_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_CURRENT:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload.record,\r\n        config_status: action.payload.config_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_FAILED:\r\n    case MOVE_CPL_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default OfflineCS;\r\n","import {\r\n  GET_GAMES_DATA_SUCCESS,\r\n  GET_GAMES_DATA_FAILED,\r\n  EDIT_GAME,\r\n  EDIT_GAME_SUCCESS,\r\n  EDIT_GAME_FAILED,\r\n  GET_CURRENT_GAME,\r\n  GET_CURRENT_GAME_SUCCESS,\r\n  GET_CURRENT_GAME_FAILED,\r\n  CLEAR_CURRENT_GAME\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  errors: {}\r\n};\r\n\r\ntype GamesAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string\r\n};\r\nconst Games = (state: State = INIT_STATE, action: GamesAction) => {\r\n  switch (action.type) {\r\n    case GET_GAMES_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        list: action.payload,\r\n        loading: false,\r\n        errors: {}\r\n      };\r\n    case GET_GAMES_DATA_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME:\r\n      return { ...state, loading: true };\r\n    case EDIT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedId: action.payload,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: \"新增成功!\"\r\n      };\r\n    case GET_CURRENT_GAME:\r\n      return { ...state, loading: true };\r\n    case CLEAR_CURRENT_GAME:\r\n      return { ...state, currentRecord: {} };\r\n    case GET_CURRENT_GAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    case EDIT_GAME_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Games;\r\n","import { GET_SERVERS_SUCCESS, GET_SERVERS_FAILED } from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    loading: true,\r\n    error: '',\r\n};\r\n\r\ntype ServersAction = { type: string, payload: {} | string };\r\ntype State = { list?: [] | null, loading?: boolean, +value?: boolean, error?: string };\r\n\r\nconst Servers = (state: State = INIT_STATE, action: ServersAction) => {\r\n    switch (action.type) {\r\n        case GET_SERVERS_SUCCESS:\r\n            return { ...state, list: action.payload, loading: false, error: null };\r\n        case GET_SERVERS_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Servers;\r\n","// @flow\r\nimport {\r\n  GET_USERS,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILED,\r\n  GET_USER_TASKS,\r\n  GET_USER_TASKS_SUCCESS,\r\n  GET_USER_TASKS_FAILED,\r\n  GET_USER_LOGS,\r\n  GET_USER_LOGS_SUCCESS,\r\n  GET_USER_LOGS_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  users: [],\r\n  loading: true,\r\n  user_tasks: {},\r\n  logs: []\r\n};\r\n\r\ntype AdminUserAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  user?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  user_tasks?: {} | null\r\n};\r\n\r\nconst AdminUsers = (state: State = INIT_STATE, action: AdminUserAction) => {\r\n  switch (action.type) {\r\n    case GET_USERS:\r\n    case GET_USER_LOGS:\r\n      return { ...state, loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { ...state, users: action.payload, loading: false, error: null };\r\n    case GET_USER_LOGS_SUCCESS:\r\n      return { ...state, logs: action.payload, loading: false, error: null };\r\n    case GET_USERS_FAILED:\r\n    case GET_USER_TASKS_FAILED:\r\n    case GET_USER_LOGS_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case GET_USER_TASKS:\r\n      return { ...state };\r\n    case GET_USER_TASKS_SUCCESS:\r\n      //console.log(\"GET_USER_TASKS_SUCCESS action.payload\", action.payload);\r\n      return { ...state, user_tasks: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default AdminUsers;\r\n","import {\r\n  GET_ALLOCATE_DATA_SUCCESS,\r\n  GET_ALLOCATE_DATA_FAILED,\r\n  GET_ALLOCATE_BY_ID_SUCCESS,\r\n  GET_ALLOCATE_BY_ID_FAILED,\r\n  POST_ALLOCATION,\r\n  POST_ALLOCATION_SUCCESS,\r\n  POST_ALLOCATION_FAILED,\r\n  PUT_ALLOCATION,\r\n  PUT_ALLOCATION_SUCCESS,\r\n  PUT_ALLOCATION_FAILED,\r\n  TAKE_ALLOCATION_TASKS,\r\n  TAKE_ALLOCATION_TASKS_SUCCESS,\r\n  TAKE_ALLOCATION_TASKS_FAILED,\r\n  REASSIGN_ALLOCATION_TASK,\r\n  REASSIGN_ALLOCATION_TASK_SUCCESS,\r\n  REASSIGN_ALLOCATION_TASK_FAILED,\r\n  CLEAR_ALLOCATION_MESSAGE\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  error: \"\",\r\n  allocation: null,\r\n  allocation_logs: null,\r\n  allocation_quick_msg: null,\r\n  allocationStatus: null,\r\n  updateOKMessage: null,\r\n  cs_members: []\r\n};\r\n\r\ntype ServiceAllocateAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  allocation?: {} | null,\r\n  allocation_logs?: [] | null,\r\n  allocation_quick_msg?: [] | null,\r\n  allocationStatus: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst ServiceAllocate = (\r\n  state: State = INIT_STATE,\r\n  action: ServiceAllocateAction\r\n) => {\r\n  //console.log(\"ServiceAllocate reducer \", action);\r\n  switch (action.type) {\r\n    case POST_ALLOCATION:\r\n    case PUT_ALLOCATION:\r\n    case TAKE_ALLOCATION_TASKS:\r\n    case REASSIGN_ALLOCATION_TASK:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true\r\n      };\r\n\r\n    case TAKE_ALLOCATION_TASKS_SUCCESS:\r\n      //console.log(\"TAKE_ALLOCATION_TASKS_SUCCESS\", action.payload.logs);\r\n\r\n      let newList = [];\r\n      action.payload.logs.forEach(log => {\r\n        let record = state.list.filter(\r\n          item => item.id === log.allocation_id\r\n        )[0];\r\n        record = {\r\n          ...record,\r\n          allocate_status: log.allocate_status,\r\n          assignee_name: log.assignee_name,\r\n          assignee: log.assignee,\r\n          lastestNote: log.allocate_note,\r\n          ins_status: log.ins_status\r\n        };\r\n\r\n        newList = (newList.length > 0 ? newList : state.list).map(item => {\r\n          if (item.id !== log.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return record;\r\n          }\r\n        });\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        newTasks: action.payload.tasks,\r\n        updateOKMessage: action.payload.msg,\r\n        list: newList,\r\n        error: null,\r\n        loading: false\r\n      };\r\n\r\n    case GET_ALLOCATE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.allocation,\r\n        allocation_logs: action.payload.allocation_logs,\r\n        allocation_quick_msg: action.payload.allocation_quick_msg,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case PUT_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: { ...state.allocation, ...action.payload.updatedField },\r\n        allocation_logs: [...state.allocation_logs, action.payload.newLog],\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allocation: action.payload.updatedField,\r\n        updateOKMessage: action.payload.msg,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case GET_ALLOCATE_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: action.payload.all_records,\r\n        allocationStatus: action.payload.allocationStatus,\r\n        cs_members: action.payload.cs_members,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REASSIGN_ALLOCATION_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item => {\r\n          if (item.id !== action.payload.record.allocation_id) {\r\n            return item;\r\n          } else {\r\n            return {\r\n              ...item,\r\n              assignee: action.payload.record.assignee,\r\n              assignee_name: action.payload.record.assignee_name,\r\n              lastestNote: action.payload.log.allocate_note\r\n            };\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case CLEAR_ALLOCATION_MESSAGE:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        error: null,\r\n        loading: false\r\n      };\r\n    case POST_ALLOCATION_FAILED:\r\n    case PUT_ALLOCATION_FAILED:\r\n    case GET_ALLOCATE_DATA_FAILED:\r\n    case GET_ALLOCATE_BY_ID_FAILED:\r\n    case TAKE_ALLOCATION_TASKS_FAILED:\r\n    case REASSIGN_ALLOCATION_TASK_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default ServiceAllocate;\r\n","import {\r\n  GET_VIP_GAMES,\r\n  GET_VIP_GAMES_SUCCESS,\r\n  GET_VIP_GAMES_FAILED,\r\n  GET_VIP,\r\n  GET_VIP_SUCCESS,\r\n  GET_VIP_FAILED,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_STATUS_SUCCESS,\r\n  UPDATE_VIP_STATUS_FAILED,\r\n  UPDATE_VIP_INFO,\r\n  UPDATE_VIP_INFO_SUCCESS,\r\n  UPDATE_VIP_INFO_FAILED,\r\n  CLEAR_VIP_MESSAGE,\r\n  DELETE_VIP_REQUEST,\r\n  DELETE_VIP_REQUEST_SUCCESS,\r\n  DELETE_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST,\r\n  ADD_VIP_REQUEST_SUCCESS,\r\n  ADD_VIP_REQUEST_FAILED,\r\n  ADD_VIP_REQUEST_VALIDATION_FAILED,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_CURRENT_WHALE_USER_SUCCESS,\r\n  GET_CURRENT_WHALE_USER_FAILED,\r\n  GET_VIP_REQUESTS,\r\n  GET_VIP_REQUESTS_SUCCESS,\r\n  GET_VIP_REQUESTS_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  game_list: [],\r\n  vip_list: [],\r\n  currentWhaleUser: null,\r\n  requestData: [],\r\n  loading: true,\r\n  error: null,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  not_allowed: false\r\n};\r\n\r\ntype VipAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  game_list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {} | null,\r\n  updateOKMessage?: string | null\r\n};\r\n\r\nconst VIP = (state: State = INIT_STATE, action: VipAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_GAMES:\r\n    case GET_VIP:\r\n    case UPDATE_VIP_STATUS:\r\n\r\n    case UPDATE_VIP_INFO:\r\n      return { ...state, loading: true, error: null };\r\n    case GET_VIP_REQUESTS:\r\n      return { ...state, requestData: [], loading: true, error: null };\r\n    case GET_CURRENT_WHALE_USER:\r\n      return { ...state, currentWhaleUser: null, loading: true, error: null };\r\n    case GET_VIP_GAMES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        game_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_list: action.payload.vip_list,\r\n        requestData: action.payload.requestData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_VIP_REQUESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        requestData: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_VIP_STATUS_SUCCESS:\r\n      const newList = state.vip_list.map(vip =>\r\n        vip.uid === action.payload.uid\r\n          ? { ...vip, ...action.payload.updatedField }\r\n          : vip\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        vip_list: newList,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case UPDATE_VIP_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          ...action.payload.updatedField\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case DELETE_VIP_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: state.requestData.filter(\r\n          s => s.id.toString() !== action.payload.updatedField\r\n        ),\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data: [\r\n            ...state.currentWhaleUser.request_data.filter(\r\n              s => s.id.toString() !== action.payload.updatedField\r\n            )\r\n          ]\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_SUCCESS:\r\n      const newRecord = {\r\n        id: action.payload.id,\r\n        ...action.payload.updatedField\r\n      };\r\n      const newReqData = [...state.requestData, newRecord];\r\n      return {\r\n        ...state,\r\n        updateOKMessage: action.payload.msg,\r\n        requestData: newReqData,\r\n        currentWhaleUser: {\r\n          ...state.currentWhaleUser,\r\n          request_data:\r\n            action.payload.act === \"add\"\r\n              ? [\r\n                  action.payload.updatedField,\r\n                  ...state.currentWhaleUser.request_data\r\n                ]\r\n              : [\r\n                  ...state.currentWhaleUser.request_data.filter(\r\n                    re => re.id !== action.payload.id\r\n                  ),\r\n                  action.payload.updatedField\r\n                ]\r\n        },\r\n        // requestData: state.requestData.push({\r\n        //   id: action.payload.id,\r\n        //   ...action.payload.updatedField\r\n        // }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_CURRENT_WHALE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentWhaleUser: {\r\n          ...action.payload.vip,\r\n          request_data: action.payload.requestData\r\n        },\r\n        error: null\r\n      };\r\n    case GET_VIP_GAMES_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        not_allowed: true,\r\n        loading: false\r\n      };\r\n    case GET_CURRENT_WHALE_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        currentWhaleUser: null,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case UPDATE_VIP_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    case ADD_VIP_REQUEST_VALIDATION_FAILED:\r\n      return { ...state, errors: action.payload, loading: false };\r\n\r\n    case GET_VIP_REQUESTS_FAILED:\r\n    case ADD_VIP_REQUEST_FAILED:\r\n    case UPDATE_VIP_STATUS_FAILED:\r\n\r\n    case GET_VIP_FAILED:\r\n    case DELETE_VIP_REQUEST_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case CLEAR_VIP_MESSAGE:\r\n      return { ...state, error: null, updateOKMessage: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VIP;\r\n","import {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_OFFERS_SUCCESS,\r\n  GET_VIP_OFFERS_FAILED,\r\n  CLEAR_VIP_OFFERS_MESSAGE,\r\n  GET_VIP_ORDERS,\r\n  GET_VIP_ORDERS_SUCCESS,\r\n  GET_VIP_ORDERS_FAILED,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_CURRENT_VIP_REPORT_SUCCESS,\r\n  GET_CURRENT_VIP_REPORT_FAILED,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  GET_VIP_PRODS_BY_GAMEID_SUCCESS,\r\n  GET_VIP_PRODS_BY_GAMEID_FAILED,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  EDIT_VIP_WIRE_REPORT_SUCCESS,\r\n  EDIT_VIP_WIRE_REPORT_FAILED,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT_SUCCESS,\r\n  DELETE_VIP_WIRE_REPORT_FAILED,\r\n  GET_CURRENT_VIP_PRODUCT,\r\n  GET_CURRENT_VIP_PRODUCT_SUCCESS,\r\n  GET_CURRENT_VIP_PRODUCT_FAILED,\r\n  EDIT_VIP_PRODUCT,\r\n  EDIT_VIP_PRODUCT_SUCCESS,\r\n  EDIT_VIP_PRODUCT_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  vip_offer_list: [],\r\n  vip_orders_list: [],\r\n  vip_prods: [],\r\n  current_report: {},\r\n  current_product: {},\r\n  loading: true,\r\n  errors: {},\r\n  updateOKMessage: null,\r\n  affectedRecord: null,\r\n};\r\n\r\ntype VipOfferAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_offer_list?: [] | null,\r\n  vip_prods?: [] | null,\r\n  vip_orders_list?: [] | null,\r\n  current_report?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: string,\r\n  errors?: {},\r\n  updateOKMessage?: string,\r\n};\r\n\r\nconst VipOffers = (state: State = INIT_STATE, action: VipOfferAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_OFFERS:\r\n    case GET_VIP_ORDERS:\r\n\r\n    case GET_VIP_PRODS_BY_GAMEID:\r\n    case EDIT_VIP_WIRE_REPORT:\r\n    case DELETE_VIP_WIRE_REPORT:\r\n      return { ...state, loading: true, error: null, errors: {} };\r\n\r\n    case GET_CURRENT_VIP_REPORT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        errors: {},\r\n        current_report: {},\r\n      };\r\n    case GET_CURRENT_VIP_PRODUCT:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        errors: {},\r\n        current_product: {},\r\n      };\r\n    case GET_VIP_OFFERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_offer_list: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_VIP_ORDERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        vip_orders_list: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_CURRENT_VIP_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_report: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_CURRENT_VIP_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_product: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_VIP_PRODS_BY_GAMEID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_prods: action.payload,\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        affectedRecord: action.payload.updatedField,\r\n        current_report: {\r\n          ...state.current_report,\r\n          ...action.payload.updatedField,\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: '編輯成功!',\r\n      };\r\n    case EDIT_VIP_PRODUCT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current_product: {\r\n          ...state.current_product,\r\n          ...action.payload.updatedField,\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: '編輯成功!',\r\n      };\r\n    case DELETE_VIP_WIRE_REPORT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_orders_list: state.vip_orders_list.filter(\r\n          (report) => report.report_id !== action.payload.updatedField\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        errors: {},\r\n        updateOKMessage: action.payload.msg,\r\n      };\r\n    case EDIT_VIP_WIRE_REPORT_FAILED:\r\n    case DELETE_VIP_WIRE_REPORT_FAILED:\r\n      return {\r\n        ...state,\r\n        updateOKMessage: null,\r\n        errors: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_VIP_OFFERS_FAILED:\r\n    case GET_VIP_ORDERS_FAILED:\r\n    case GET_CURRENT_VIP_REPORT_FAILED:\r\n    case GET_CURRENT_VIP_PRODUCT_FAILED:\r\n    case GET_VIP_PRODS_BY_GAMEID_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null,\r\n      };\r\n    case EDIT_VIP_PRODUCT_FAILED:\r\n      return {\r\n        ...state,\r\n        errors: action.payload,\r\n        loading: false,\r\n        updateOKMessage: null,\r\n      };\r\n\r\n    case CLEAR_VIP_OFFERS_MESSAGE:\r\n      return { ...state, error: null, loading: false };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipOffers;\r\n","import {\r\n  GET_VIP_DASHBOARD_DATA,\r\n  GET_VIP_DASHBOARD_DATA_SUCCESS,\r\n  GET_VIP_DASHBOARD_DATA_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  vip_dashboard_data: {},\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\ntype VipRptAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  vip_dashboard_data?: {} | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  error?: {},\r\n};\r\n\r\nconst VipRpt = (state: State = INIT_STATE, action: VipRptAction) => {\r\n  switch (action.type) {\r\n    case GET_VIP_DASHBOARD_DATA:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case GET_VIP_DASHBOARD_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        vip_dashboard_data: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case GET_VIP_DASHBOARD_DATA_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default VipRpt;\r\n","import {\r\n  GET_QUESTIONS,\r\n  GET_QUESTIONS_SUCCESS,\r\n  GET_QUESTIONS_FAILED,\r\n  GET_CURRENT_QUESTION,\r\n  GET_CURRENT_QUESTION_SUCCESS,\r\n  GET_CURRENT_QUESTION_FAILED,\r\n  UPDATE_QUESTION_TYPE_SUCCESS,\r\n  UPDATE_QUESTION_TYPE_FAILED,\r\n  UPDATE_QUESTION_STATUS_SUCCESS,\r\n  UPDATE_QUESTION_STATUS_FAILED,\r\n  ALLOCATE_QUESTION,\r\n  ALLOCATE_QUESTION_SUCCESS,\r\n  ALLOCATE_QUESTION_FAILED,\r\n  REPLY_QUESTION,\r\n  REPLY_QUESTION_SUCCESS,\r\n  REPLY_QUESTION_FAILED,\r\n  CLOSE_QUESTION,\r\n  CLOSE_QUESTION_SUCCESS,\r\n  CLOSE_QUESTION_FAILED,\r\n  GET_TEST_DATA_SUCCESS,\r\n  GET_OVERVIEW,\r\n  GET_OVERVIEW_SUCCESS,\r\n  GET_OVERVIEW_FAILED,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_SUCCESS,\r\n  GET_SERVICE_STATISTICS_FAILED,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR_FAILED,\r\n  CLEAR_MESSAGE,\r\n  GET_SERVICE_CONFIG,\r\n  GET_SERVICE_CONFIG_SUCCESS,\r\n  GET_QUESTIONS_BY_USER,\r\n  GET_QUESTIONS_BY_USER_SUCCESS,\r\n  GET_QUESTIONS_BY_USER_FAILED,\r\n  FAVORITE_QUESTION_ACTION,\r\n  FAVORITE_QUESTION_ACTION_SUCCESS,\r\n  FAVORITE_QUESTION_ACTION_FAILED,\r\n  ADD_QUESTION_TO_BATCH,\r\n  ADD_QUESTION_TO_BATCH_SUCCESS,\r\n  ADD_QUESTION_TO_BATCH_FAILED,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH_SUCCESS,\r\n  REMOVE_QUESTION_FROM_BATCH_FAILED,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  current: {},\r\n  loading: true,\r\n  error: '',\r\n  allgames: [],\r\n  antsHandleData: [],\r\n  qCountData: [],\r\n  csHandleData: [],\r\n  csHandleAllocationData: [],\r\n  antsHandleAllocationData: [],\r\n  statReportData: [],\r\n  games_list: [],\r\n  user_history: [],\r\n  vip: null,\r\n  add_favor_ok: false,\r\n  tasks: []\r\n};\r\n\r\ntype ServiceAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  current?: {} | null,\r\n  test_list?: [] | null,\r\n  loading?: boolean,\r\n  add_favor_ok?: boolean,\r\n  tasks?: [] | null,\r\n  +value?: boolean,\r\n  error?: string,\r\n  question_type?: {} | null,\r\n  question_status?: {} | null,\r\n  games_list?: [] | null,\r\n  reply_query?: [] | null,\r\n  ovToday?: {} | null,\r\n  ovTotal?: {} | null,\r\n  ovAllocate?: [] | null,\r\n  ovAllocateNew?: [] | null,\r\n  user_history?: [] | null,\r\n  updateOKMessage?: string\r\n};\r\n\r\nconst Service = (state: State = INIT_STATE, action: ServiceAction) => {\r\n  let tmpGameIds = [];\r\n  switch (action.type) {\r\n    case GET_OVERVIEW:\r\n    case GET_CURRENT_QUESTION:\r\n    case ALLOCATE_QUESTION:\r\n    case REPLY_QUESTION:\r\n    case CLOSE_QUESTION:\r\n    case GET_SERVICE_STATISTICS:\r\n    case GET_SERVICE_STATISTICS_BY_HOUR:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH:\r\n    case ADD_QUESTION_TO_BATCH:\r\n    case FAVORITE_QUESTION_ACTION:\r\n      return { ...state };\r\n    case GET_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        loading:\r\n          Object.keys(action.payload).length === 1 &&\r\n          action.payload.status === '1'\r\n            ? false\r\n            : true,\r\n        error: null\r\n      };\r\n    case ADD_QUESTION_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: [action.payload.batch_info]\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.batch_info.question_id) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (action.payload.ids.indexOf(q.id) > -1) {\r\n            return { ...q, is_batch: 1 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REMOVE_QUESTION_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          q_batch_info: []\r\n        },\r\n        list: state.list.map(q => {\r\n          if (q.id === Number.parseInt(action.payload.removed_q_id)) {\r\n            return { ...q, is_batch: 0 };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case FAVORITE_QUESTION_ACTION_SUCCESS:\r\n      //res.json({question_id:qId, is_favorite: action === \"add\" ? 1 : 0});\r\n      return {\r\n        ...state,\r\n        list: state.list.map(q => {\r\n          if (q.id === action.payload.question_id) {\r\n            return { ...q, is_favorite: action.payload.is_favorite };\r\n          } else {\r\n            return q;\r\n          }\r\n        }),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            is_favorite: action.payload.is_favorite\r\n          }\r\n        },\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case REPLY_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updateQuestionData\r\n          },\r\n\r\n          replies: action.payload.updateQuestionData\r\n            ? [\r\n                ...state.current.replies,\r\n                { id: action.payload.id, ...action.payload.updatedField }\r\n              ]\r\n            : [\r\n                ...state.current.replies.map(reply =>\r\n                  reply.id !== action.payload.id\r\n                    ? reply\r\n                    : { ...reply, ...action.payload.updatedField }\r\n                )\r\n              ]\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_BY_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user_history: action.payload.list,\r\n        vip: action.payload.vip\r\n      };\r\n    case GET_QUESTIONS_BY_USER_FAILED:\r\n    case GET_QUESTIONS_BY_USER:\r\n      return {\r\n        ...state,\r\n        user_history: []\r\n      };\r\n    case CLOSE_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            ...action.payload.updatedField\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case GET_CURRENT_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        current: action.payload.stat,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_CONFIG_SUCCESS:\r\n      return {\r\n        ...state,\r\n        games_list: action.payload.games_list,\r\n        question_type: action.payload.question_type,\r\n        question_status: action.payload.question_status,\r\n        cs_admins: action.payload.cs_admins,\r\n        ants_admins: action.payload.ants_admins,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_BY_HOUR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: action.payload.statReportData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        statReplyData: action.payload.statReplyData,\r\n        statReportData: action.payload.statReportData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case GET_SERVICE_STATISTICS_SUCCESS:\r\n      const {\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData\r\n      } = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        question_type: action.payload.question_type,\r\n        allgames: qCountData.reduce(function(prev, curr) {\r\n          if (tmpGameIds.indexOf(curr.game_id) < 0) {\r\n            tmpGameIds.push(curr.game_id);\r\n            return [\r\n              ...prev,\r\n              { game_id: curr.game_id, game_name: curr.game_name }\r\n            ];\r\n          } else {\r\n            return prev;\r\n          }\r\n        }, []),\r\n        antsHandleData,\r\n        qCountData,\r\n        csHandleData,\r\n        csHandleAllocationData,\r\n        antsHandleAllocationData,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_OVERVIEW_SUCCESS:\r\n      const { ovToday, ovTotal, ovAllocate, ovAllocateNew } = action.payload;\r\n      return {\r\n        ...state,\r\n        ovToday,\r\n        ovTotal,\r\n        ovAllocate,\r\n        ovAllocateNew,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_QUESTIONS_SUCCESS:\r\n      const {\r\n        query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks\r\n      } = action.payload;\r\n      return {\r\n        ...state,\r\n        list: query,\r\n        question_type,\r\n        question_status,\r\n        reply_query,\r\n        newAllocationStatus,\r\n        allocation_status,\r\n        add_favor_ok,\r\n        tasks,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case ALLOCATE_QUESTION_FAILED:\r\n    case GET_SERVICE_STATISTICS_FAILED:\r\n    case GET_QUESTIONS_FAILED:\r\n    case UPDATE_QUESTION_TYPE_FAILED:\r\n    case UPDATE_QUESTION_STATUS_FAILED:\r\n    case GET_OVERVIEW_FAILED:\r\n    case GET_CURRENT_QUESTION_FAILED:\r\n    case REPLY_QUESTION_FAILED:\r\n    case CLOSE_QUESTION_FAILED:\r\n    case FAVORITE_QUESTION_ACTION_FAILED:\r\n    case ADD_QUESTION_TO_BATCH_FAILED:\r\n    case REMOVE_QUESTION_FROM_BATCH_FAILED:\r\n    case ADD_MULTIPLE_QUESTIONS_TO_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case UPDATE_QUESTION_TYPE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, type: action.payload.type }\r\n            : item\r\n        ),\r\n        current: {\r\n          ...state.current,\r\n          question: {\r\n            ...state.current.question,\r\n            type: action.payload.type\r\n          }\r\n        },\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case UPDATE_QUESTION_STATUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, status: action.payload.status }\r\n            : item\r\n        ),\r\n        updateOKMessage: action.payload.msg,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_TEST_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        test_list: action.payload\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Service;\r\n","// @flow\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  GET_BATCH_TASKS_SUCCESS,\r\n  GET_BATCH_TASKS_FAILED,\r\n  EDIT_BATCH_TASK,\r\n  EDIT_BATCH_TASK_SUCCESS,\r\n  EDIT_BATCH_TASK_FAILED,\r\n  DELETE_BATCH_TASK,\r\n  DELETE_BATCH_TASK_SUCCESS,\r\n  DELETE_BATCH_TASK_FAILED,\r\n  CLEAR_BATCH_TASK_MESSAGE,\r\n  GET_CURRENT_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK_SUCCESS,\r\n  GET_CURRENT_BATCH_TASK_FAILED,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_BATCH_Q_SUCCESS,\r\n  REMOVE_BATCH_Q_FAILED,\r\n  REMOVE_Q_FROM_BATCH,\r\n  REMOVE_Q_FROM_BATCH_SUCCESS,\r\n  REMOVE_Q_FROM_BATCH_FAILED,\r\n  BATCH_REPLY_ACTION,\r\n  BATCH_REPLY_ACTION_SUCCESS,\r\n  BATCH_REPLY_ACTION_FAILED\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  list: [],\r\n  loading: true,\r\n  affectedId: null,\r\n  currentRecord: {},\r\n  updateOKMessage: null,\r\n  error: {},\r\n  question_type: {}\r\n};\r\n\r\ntype batchAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  list?: [] | null,\r\n  loading?: boolean,\r\n  +value?: boolean,\r\n  affectedId?: number | null,\r\n  currentRecord?: {} | null,\r\n  question_type?: {} | null,\r\n  updateOKMessage?: string | null,\r\n  error?: {} | null\r\n};\r\n\r\nconst BatchTasks = (state: State = INIT_STATE, action: batchAction) => {\r\n  switch (action.type) {\r\n    case GET_BATCH_TASKS:\r\n    case EDIT_BATCH_TASK:\r\n    case DELETE_BATCH_TASK:\r\n    case GET_CURRENT_BATCH_TASK:\r\n    case REMOVE_BATCH_Q:\r\n    case REMOVE_Q_FROM_BATCH:\r\n    case BATCH_REPLY_ACTION:\r\n      return { ...state, loading: true };\r\n    case GET_CURRENT_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...action.payload.task,\r\n          q_list: action.payload.q_list\r\n        },\r\n        question_type: action.payload.question_type\r\n      };\r\n    case CLEAR_BATCH_TASK_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        updateOKMessage: null\r\n      };\r\n    case REMOVE_BATCH_Q_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: []\r\n        }\r\n      };\r\n    case REMOVE_Q_FROM_BATCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          q_list: [\r\n            ...state.currentRecord.q_list.filter(\r\n              q =>\r\n                q.question_id !== Number.parseInt(action.payload.removed_q_id)\r\n            )\r\n          ]\r\n        }\r\n      };\r\n    case EDIT_BATCH_TASK_SUCCESS:\r\n      //console.log(\"action.payload.affectedRow\", action.payload.action);\r\n      return {\r\n        ...state,\r\n        list:\r\n          action.payload.action === \"add\"\r\n            ? [\r\n                ...state.list,\r\n                { id: action.payload.affectedId, ...action.payload.affectedRow }\r\n              ]\r\n            : state.list.map(task =>\r\n                task.id === action.payload.affectedId\r\n                  ? action.payload.affectedRow\r\n                  : task\r\n              ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    case BATCH_REPLY_ACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentRecord: {\r\n          ...state.currentRecord,\r\n          status: action.payload.mode\r\n        },\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n    case GET_BATCH_TASKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload.batch_tasks,\r\n        games: action.payload.games\r\n      };\r\n    case BATCH_REPLY_ACTION_FAILED:\r\n    case GET_BATCH_TASKS_FAILED:\r\n    case EDIT_BATCH_TASK_FAILED:\r\n    case DELETE_BATCH_TASK_FAILED:\r\n    case GET_CURRENT_BATCH_TASK_FAILED:\r\n    case REMOVE_BATCH_Q_FAILED:\r\n    case REMOVE_Q_FROM_BATCH_FAILED:\r\n      return { ...state, error: action.payload, loading: false };\r\n    case DELETE_BATCH_TASK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter(\r\n          task => task.id !== Number.parseInt(action.payload.deleted_id)\r\n        ),\r\n        loading: false,\r\n        error: null,\r\n        updateOKMessage: action.payload.msg\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default BatchTasks;\r\n","import {\r\n  GET_SERIAL_RECORDS,\r\n  GET_SERIAL_RECORDS_SUCCESS,\r\n  GET_SERIAL_RECORDS_FAILED\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n  serial_list: [],\r\n  loading: true,\r\n  errors: {}\r\n};\r\ntype EventAction = { type: string, payload: {} | string };\r\ntype State = {\r\n  serial_list?: [] | null,\r\n  loading?: boolean,\r\n  error?: string\r\n};\r\n\r\nconst Event = (state: State = INIT_STATE, action: EventAction) => {\r\n  switch (action.type) {\r\n    case GET_SERIAL_RECORDS:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case GET_SERIAL_RECORDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        serial_list: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case GET_SERIAL_RECORDS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default Event;\r\n","// @flow\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport Layout from \"./layout/reducers\";\r\nimport Auth from \"./auth/reducers\";\r\nimport AppMenu from \"./appMenu/reducers\";\r\nimport Dashboard from \"./dashboard/reducers\";\r\nimport Platform from \"./platform/reducers\";\r\nimport OfflineCs from \"./offlinecs/reducers\";\r\nimport Games from \"./games/reducers\";\r\nimport Servers from \"./servers/reducers\";\r\nimport AdminUsers from \"./adminUsers/reducers\";\r\nimport ServiceAllocate from \"./serviceAllocate/reducers\";\r\nimport VIP from \"./vip/reducers\";\r\nimport VipOffers from \"./vipoffers/reducers\";\r\nimport VipRpt from \"./viprpt/reducers\";\r\nimport Service from \"./service/reducers\";\r\nimport BatchTasks from \"./batch/reducers\";\r\nimport Event from \"./event/reducers\";\r\n\r\nexport default combineReducers({\r\n  Auth,\r\n  AppMenu,\r\n  Layout,\r\n  Dashboard,\r\n  Platform,\r\n  OfflineCs,\r\n  Games,\r\n  Servers,\r\n  AdminUsers,\r\n  ServiceAllocate,\r\n  Service,\r\n  VIP,\r\n  VipOffers,\r\n  VipRpt,\r\n  BatchTasks,\r\n  Event,\r\n});\r\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport axios from 'axios';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD\r\n} from './constants';\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n  let cookies = new Cookies();\r\n  if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n  else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account: username, password }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/auth'\r\n  };\r\n\r\n  try {\r\n    //const response = yield call(fetchJSON, '/api/auth', options);\r\n    const response = yield axios(options);\r\n    //post(\"/api/auth\", { account, password }, config)\r\n    //console.log(' login response ', response);\r\n    setSession(response.data);\r\n    yield put(loginUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(loginUserFailed(message));\r\n    setSession(null);\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    let cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n\r\n    const options = {\r\n      data: JSON.stringify(user),\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      url: '/api/auth/logout'\r\n    };\r\n\r\n    setSession(null);\r\n    yield call(() => {\r\n      axios(options);\r\n      history.push('/account/login');\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n  const options = {\r\n    body: JSON.stringify({ fullname, email, password }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, '/users/register', options);\r\n    yield put(registerUserSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(registerUserFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n  const options = {\r\n    body: JSON.stringify({ username }),\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n\r\n  try {\r\n    const response = yield call(fetchJSON, '/users/password-reset', options);\r\n    yield put(forgetPasswordSuccess(response.message));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(forgetPasswordFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword(): any {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword)\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar(): any {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar(): any {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar(): any {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(initMenuSuccess(menuItems));\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_DATA } from './constants';\r\n\r\nimport { getDataSuccess, getDataFailed } from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: { startDate, endDate } }) {\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/service_rpt/stat?begin_date=${startDate}&end_date=${endDate}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getDataSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getDataFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_DATA, getData);\r\n}\r\n\r\nfunction* dashboardSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default dashboardSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  UPDATE_PASSWORD,\r\n  GET_PRESET_MESSAGE,\r\n  EDIT_PRESET_MESSAGE,\r\n  DELETE_PRESET_MESSAGE\r\n} from \"./constants\";\r\nimport {\r\n  updatePasswordSuccess,\r\n  updatePasswordFailed,\r\n  getPresetMessageSuccess,\r\n  getPresetMessageFailed,\r\n  editPresetMessageSuccess,\r\n  editPresetMessageFailed,\r\n  deletePresetMessageSuccess,\r\n  deletePresetMessageFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Change password\r\n */\r\nfunction* updatePassword({ payload: { account, password } }) {\r\n  const options = {\r\n    data: JSON.stringify({ account, password }),\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/modify_password\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updatePasswordSuccess(response));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(updatePasswordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getPresetMessageData() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/platform/preset_messages/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - record , update with id, or insert with no id\r\n */\r\nfunction* editPresetMessageData({ payload }) {\r\n  const record = payload;\r\n\r\n  const options = {\r\n    method: record.id ? \"PUT\" : \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${record.id ? record.id : \"\"}`,\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editPresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editPresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deletePresetMessageData({ payload }) {\r\n  const id = payload;\r\n\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/platform/preset_messages/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deletePresetMessageSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deletePresetMessageFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchChangePassword(): any {\r\n  yield takeEvery(UPDATE_PASSWORD, updatePassword);\r\n}\r\n\r\nexport function* watchgetPresetMessageData(): any {\r\n  yield takeEvery(GET_PRESET_MESSAGE, getPresetMessageData);\r\n}\r\nexport function* watchUpdatePresetMessageData(): any {\r\n  yield takeEvery(EDIT_PRESET_MESSAGE, editPresetMessageData);\r\n}\r\n\r\nexport function* watchDeletePresetMessageData(): any {\r\n  yield takeEvery(DELETE_PRESET_MESSAGE, deletePresetMessageData);\r\n}\r\nfunction* PlatformSaga(): any {\r\n  yield all([\r\n    fork(watchChangePassword),\r\n    fork(watchgetPresetMessageData),\r\n    fork(watchUpdatePresetMessageData),\r\n    fork(watchDeletePresetMessageData)\r\n  ]);\r\n}\r\n\r\nexport default PlatformSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  GET_GOV_DATA,\r\n  EDIT_RECORD,\r\n  GET_CURRENT,\r\n  EDIT_CPL_REPLY,\r\n  DELETE_CPL,\r\n  DELETE_GOV_LETTER,\r\n  MOVE_CPL,\r\n  EDIT_CPL_MEDIATION,\r\n  DELETE_CPL_REPLY,\r\n  DELETE_CPL_MEDIATION,\r\n  EDIT_CPL_REF,\r\n  DELETE_CPL_REF,\r\n  ADD_CPL_ATTACHMENT,\r\n  DELETE_CPL_ATTACHMENT\r\n} from './constants';\r\n\r\nimport {\r\n  getOfflineCsDataSuccess,\r\n  getOfflineCsDataFailed,\r\n  editRecordSuccess,\r\n  editRecordFailed,\r\n  getCurrentRecordSuccess,\r\n  getCurrentRecordFailed,\r\n  editCplReplySuccess,\r\n  editCplReplyFailed,\r\n  deleteCplCaseSuccess,\r\n  deleteCplCaseFailed,\r\n  moveCplCaseSuccess,\r\n  moveCplCaseFailed,\r\n  editCplMediationSuccess,\r\n  editCplMediationFailed,\r\n  deleteCplCaseReplyFailed,\r\n  deleteCplCaseReplySuccess,\r\n  deleteCplMediationSuccess,\r\n  deleteCplMediationFailed,\r\n  editCplRefSuccess,\r\n  editCplRefFailed,\r\n  deleteCplRefSuccess,\r\n  deleteCplRefFailed,\r\n  addCplAttachmentFailed,\r\n  addCplAttachmentSuccess,\r\n  deleteCplAttachmentSuccess,\r\n  deleteCplAttachmentFailed,\r\n  deleteGovLetterFailed,\r\n  deleteGovLetterSuccess\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getData({ payload: type }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/${\r\n      type === 'govletter' ? 'gov_list' : type === 'pv' ? 'pv_list' : 'cpl_case'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOfflineCsDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      case 403:\r\n        message = error.response.data;\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOfflineCsDataFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log('editGovRecord *****', payload);\r\n  const { dataType, record } = payload;\r\n\r\n  const options = {\r\n    data: record,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url: `/api/offline_cs/${\r\n      dataType === 'govletter'\r\n        ? 'gov_list'\r\n        : dataType === 'pv'\r\n        ? 'pv_list'\r\n        : 'cpl_case'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editRecordSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* moveCplRecord({ payload }) {\r\n  console.log('moveCplRecord *****', payload);\r\n  const { id, record } = payload;\r\n  //record: { status, close_date }\r\n  const options = {\r\n    data: record,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/move_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(moveCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(moveCplCaseFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl reply\r\n */\r\nfunction* editCplReply({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/reply`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplReplyFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplMediation({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/mediation`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplMediationFailed(message));\r\n  }\r\n}\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { dataType, record_id } = payload;\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n\r\n    url: `/api/offline_cs/${\r\n      dataType === 'govletter'\r\n        ? 'gov_list'\r\n        : dataType === 'pv'\r\n        ? 'pv_list'\r\n        : 'cpl_case'\r\n    }/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentRecordSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      case 400:\r\n        message = error.response.data.msg;\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentRecordFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* editCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/ref`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(editCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editCplRefFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or modify cpl mediation\r\n */\r\nfunction* addCplAttach({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'multipart/form-data' },\r\n    url: `/api/offline_cs/cpl_case/attachment/add`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addCplAttachmentFailed(message));\r\n  }\r\n}\r\n\r\nfunction* deleteCplRef({ payload }) {\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/ref/remove`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplRefSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(deleteCplRefFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCase({ payload: { id, history } }) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    history.push('/offline/cpl_case/home');\r\n    yield put(deleteCplCaseSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseFailed(message));\r\n  }\r\n}\r\nfunction* delGovLetter({ payload: { dataType, id, history } }) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/${dataType === 'pv' ? 'pv_list' : 'gov_letter'}/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    history.push(\r\n      `/offline/${dataType === 'pv' ? 'personal_visit' : 'gov_letter'}/home`\r\n    );\r\n    yield put(deleteGovLetterSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteGovLetterFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseReply({ payload: id }) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/reply/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplCaseReplySuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplCaseReplyFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delCplCaseAttachment({ payload: id }) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/attachment/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplAttachmentSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplAttachmentFailed(message));\r\n  }\r\n}\r\nfunction* delCplMd({ payload: id }) {\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/offline_cs/cpl_case/mediation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteCplMediationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteCplMediationFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_GOV_DATA, getData);\r\n}\r\nexport function* watchGetCurrentRecordData(): any {\r\n  yield takeEvery(GET_CURRENT, getCurrentRecord);\r\n}\r\nexport function* watchEditRecord(): any {\r\n  yield takeEvery(EDIT_RECORD, editRecord);\r\n}\r\n\r\nexport function* watchEditCplReply(): any {\r\n  yield takeEvery(EDIT_CPL_REPLY, editCplReply);\r\n}\r\nexport function* watchEditCplMediation(): any {\r\n  yield takeEvery(EDIT_CPL_MEDIATION, editCplMediation);\r\n}\r\n\r\nexport function* watchDeleteCpl(): any {\r\n  yield takeEvery(DELETE_CPL, delCplCase);\r\n}\r\nexport function* watchdelGovLetter(): any {\r\n  yield takeEvery(DELETE_GOV_LETTER, delGovLetter);\r\n}\r\n\r\nexport function* watchDeleteCplReply(): any {\r\n  yield takeEvery(DELETE_CPL_REPLY, delCplCaseReply);\r\n}\r\nexport function* watchDeleteCplMediation(): any {\r\n  yield takeEvery(DELETE_CPL_MEDIATION, delCplMd);\r\n}\r\n\r\nexport function* watchMoveCplStatus(): any {\r\n  yield takeEvery(MOVE_CPL, moveCplRecord);\r\n}\r\n\r\nexport function* watchEditCplRef(): any {\r\n  yield takeEvery(EDIT_CPL_REF, editCplRef);\r\n}\r\nexport function* watchDeleteCplRef(): any {\r\n  yield takeEvery(DELETE_CPL_REF, deleteCplRef);\r\n}\r\nexport function* watchAddCplAttach(): any {\r\n  yield takeEvery(ADD_CPL_ATTACHMENT, addCplAttach);\r\n}\r\n\r\nexport function* watchDelCplAttach(): any {\r\n  yield takeEvery(DELETE_CPL_ATTACHMENT, delCplCaseAttachment);\r\n}\r\n\r\nfunction* offlineCsSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchEditRecord),\r\n    fork(watchGetCurrentRecordData),\r\n    fork(watchEditCplReply),\r\n    fork(watchDeleteCpl),\r\n    fork(watchMoveCplStatus),\r\n    fork(watchDeleteCplReply),\r\n    fork(watchEditCplMediation),\r\n    fork(watchDeleteCplMediation),\r\n    fork(watchEditCplRef),\r\n    fork(watchDeleteCplRef),\r\n    fork(watchAddCplAttach),\r\n    fork(watchDelCplAttach),\r\n    fork(watchdelGovLetter)\r\n  ]);\r\n}\r\n\r\nexport default offlineCsSaga;\r\n","// @flow\r\n\r\nimport axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_GAMES_DATA, EDIT_GAME, GET_CURRENT_GAME } from \"./constants\";\r\n\r\nimport {\r\n  getGamesSuccess,\r\n  getGamesFailed,\r\n  editGameSuccess,\r\n  editGameFailed,\r\n  getCurrentGameSuccess,\r\n  getCurrentGameFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/games/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getGamesSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getGamesFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n  //headers: { \"Content-Type\": \"multipart/form-data\" }\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    url: `/api/games`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editGameSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = \"Internal Server Error\";\r\n        break;\r\n      case 401:\r\n        message = \"Invalid credentials\";\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editGameFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { game_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/games/detail/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentGameSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentGameFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetGameData(): any {\r\n  yield takeEvery(GET_GAMES_DATA, getGames);\r\n}\r\n\r\nexport function* watchGetCurrentGameData(): any {\r\n  yield takeEvery(GET_CURRENT_GAME, getCurrentRecord);\r\n}\r\nexport function* watchEditGameRecord(): any {\r\n  yield takeEvery(EDIT_GAME, editRecord);\r\n}\r\n\r\nfunction* gamesSaga(): any {\r\n  yield all([\r\n    fork(watchGetGameData),\r\n    fork(watchGetCurrentGameData),\r\n    fork(watchEditGameRecord)\r\n  ]);\r\n}\r\n\r\nexport default gamesSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERVERS } from './constants';\r\n\r\nimport { getServersSuccess, getServersFailed } from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getServersByGameId({ payload: gameId }) {\r\n    //console.log('getServersByGameId', gameId);\r\n    const options = {\r\n        method: 'GET',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        url: `/api/servers/list/${gameId}`,\r\n    };\r\n\r\n    try {\r\n        const response = yield axios(options);\r\n        yield put(getServersSuccess(response.data));\r\n    } catch (error) {\r\n        // console.log(' login error ', error);\r\n        // console.log(' error.status ', error.response.status);\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = '內部伺服器發生錯誤';\r\n                break;\r\n            case 401:\r\n                message = '帳號或密碼錯誤';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getServersFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n    yield takeEvery(GET_SERVERS, getServersByGameId);\r\n}\r\n\r\nfunction* serversSaga(): any {\r\n    yield all([fork(watchGetData)]);\r\n}\r\n\r\nexport default serversSaga;\r\n","// @flow\r\n\r\nimport axios from 'axios';\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_USERS, GET_USER_TASKS, GET_USER_LOGS } from './constants';\r\n\r\nimport {\r\n  getAdminUsersSuccess,\r\n  getAdminUsersFailed,\r\n  getUserTasksSuccess,\r\n  getUserTasksFailed,\r\n  getUserLogsFailed,\r\n  getUserLogsSuccess\r\n} from './actions';\r\n\r\n/**\r\n * Get dashboard summary data\r\n * @param {*} payload - begin date and end date\r\n */\r\nfunction* getAdminUsersByRole({ payload: role }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/admin_users/getAdminUsersByRole/${role}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAdminUsersSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get user tasks, like favourite, allocation tasks\r\n * @param {*} payload - uid\r\n */\r\nfunction* getUserTask() {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/admin_users/getUserTasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getUserTasksSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getAdminUsersFailed(message));\r\n  }\r\n}\r\n/**\r\n * Get user logs\r\n * @param {*} payload - date_begin date_end\r\n */\r\nfunction* getUserLog({ payload: { date_begin, date_end } }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/admin_users/getUserLogs?date_begin=${date_begin}&date_end=${date_end}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getUserLogsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getUserLogsFailed(message));\r\n  }\r\n}\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_USERS, getAdminUsersByRole);\r\n}\r\n\r\nexport function* watchGetUserTasks(): any {\r\n  yield takeEvery(GET_USER_TASKS, getUserTask);\r\n}\r\nexport function* watchGetUserLogs(): any {\r\n  yield takeEvery(GET_USER_LOGS, getUserLog);\r\n}\r\n\r\nfunction* adminUsersSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetUserTasks),\r\n    fork(watchGetUserLogs)\r\n  ]);\r\n}\r\n\r\nexport default adminUsersSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALLOCATE_DATA,\r\n  GET_ALLOCATE_BY_ID,\r\n  POST_ALLOCATION,\r\n  PUT_ALLOCATION,\r\n  TAKE_ALLOCATION_TASKS,\r\n  REASSIGN_ALLOCATION_TASK\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getAllocateDataSuccess,\r\n  getAllocateDataFailed,\r\n  getAllocateByIdFailed,\r\n  getAllocateByIdSuccess,\r\n  postAllocationSuccess,\r\n  postAllocationFailed,\r\n  putAllocationSuccess,\r\n  putAllocationFailed,\r\n  takeAllocationTasksSuccess,\r\n  takeAllocationTasksFailed,\r\n  reassignAllocationTaskSuccess,\r\n  reassignAllocationTaskFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getAllocateData({ payload: condition }) {\r\n  //console.log(\"getAllocateData condition\", condition);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/list`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 401:\r\n        message = \"帳號或密碼錯誤\";\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getAllocateDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getAllocateById({ payload: id }) {\r\n  //console.log(\" getAllocateById id\", id);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getAllocateByIdSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(getAllocateByIdFailed(message));\r\n  }\r\n}\r\nfunction* postAllocation({ payload: { qid, allocation_cause } }) {\r\n  //console.log(\" postAllocation id\", qid, allocation_cause);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: { question_id: qid, allocate_cause: allocation_cause }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(postAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(postAllocationFailed(message));\r\n  }\r\n}\r\n\r\n//{\"allocation_id\":3 , \"new_assignee\":86}\r\nfunction* reassignAllocation({ payload: { allocation_id, new_assignee } }) {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/reassign`,\r\n    data: { allocation_id, new_assignee }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(reassignAllocationTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(reassignAllocationTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putAllocation({ payload }) {\r\n  //console.log(\" postAllocation id\", payload);\r\n\r\n  //const {} = payload;\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/`,\r\n    data: payload\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putAllocationSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data;\r\n    yield put(putAllocationFailed(message));\r\n  }\r\n}\r\n\r\nfunction* takeAllocationTasks() {\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/allocation/take_allocation_tasks`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(takeAllocationTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(takeAllocationTasksFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_ALLOCATE_DATA, getAllocateData);\r\n}\r\n\r\nexport function* watchGetDataById(): any {\r\n  yield takeEvery(GET_ALLOCATE_BY_ID, getAllocateById);\r\n}\r\n\r\nexport function* watchPostAllocationData(): any {\r\n  yield takeEvery(POST_ALLOCATION, postAllocation);\r\n}\r\n\r\nexport function* watchPutAllocationData(): any {\r\n  yield takeEvery(PUT_ALLOCATION, putAllocation);\r\n}\r\n\r\nexport function* watchTakeAllocationTasks(): any {\r\n  yield takeEvery(TAKE_ALLOCATION_TASKS, takeAllocationTasks);\r\n}\r\n\r\nexport function* watchReassignAllocation(): any {\r\n  yield takeEvery(REASSIGN_ALLOCATION_TASK, reassignAllocation);\r\n}\r\n\r\nfunction* serviceAllocateSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetDataById),\r\n    fork(watchPostAllocationData),\r\n    fork(watchPutAllocationData),\r\n    fork(watchTakeAllocationTasks),\r\n    fork(watchReassignAllocation)\r\n  ]);\r\n}\r\n\r\nexport default serviceAllocateSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  GET_QUESTIONS,\r\n  UPDATE_QUESTION_STATUS,\r\n  UPDATE_QUESTION_TYPE,\r\n  GET_TEST_DATA,\r\n  GET_OVERVIEW,\r\n  GET_SERVICE_STATISTICS,\r\n  GET_SERVICE_STATISTICS_BY_HOUR,\r\n  GET_CURRENT_QUESTION,\r\n  ALLOCATE_QUESTION,\r\n  REPLY_QUESTION,\r\n  CLOSE_QUESTION,\r\n  GET_SERVICE_CONFIG,\r\n  GET_QUESTIONS_BY_USER,\r\n  FAVORITE_QUESTION_ACTION,\r\n  ADD_QUESTION_TO_BATCH,\r\n  REMOVE_QUESTION_FROM_BATCH,\r\n  ADD_MULTIPLE_QUESTIONS_TO_BATCH,\r\n  ADD_USER_ACTION_LOG\r\n} from './constants';\r\n\r\nimport {\r\n  getQuestionsSuccess,\r\n  getQuestionsFailed,\r\n  updateQuestionStatusFailed,\r\n  updateQuestionStatusSuccess,\r\n  updateQuestionTypeSuccess,\r\n  updateQuestionTypeFailed,\r\n  getTestDataSuccess,\r\n  getTestDataFailed,\r\n  getOverviewSuccess,\r\n  getOverviewFailed,\r\n  getServiceStatisticsSuccess,\r\n  getServiceStatisticsFailed,\r\n  getServiceStatisticsByHourFailed,\r\n  getServiceStatisticsByHourSuccess,\r\n  getCurrentQuestionFailed,\r\n  getCurrentQuestionSuccess,\r\n  allocateQuestionSuccess,\r\n  allocateQuestionFailed,\r\n  replyQuestionSuccess,\r\n  replyQuestionFailed,\r\n  closeQuestionSuccess,\r\n  closeQuestionFailed,\r\n  getServiceConfigSuccess,\r\n  getQuestionsByUserSuccess,\r\n  getQuestionsByUserFailed,\r\n  favorQuestionFailed,\r\n  favorQuestionSuccess,\r\n  addQuestionToBatchSuccess,\r\n  addQuestionToBatchFailed,\r\n  removeQuestionFromBatchSuccess,\r\n  removeQuestionFromBatchFailed,\r\n  addMultipleQuestionsToBatchSuccess,\r\n  addMultipleQuestionsToBatchFailed\r\n} from './actions';\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} condition { allocate_admin_uid: xx, status:2 etc...} -\r\n */\r\nfunction* getQuestionsData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/getList`,\r\n    data: condition\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getQuestionsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentQuestionData({ payload: question_id }) {\r\n  //console.log(\"getCurrentQuestionData question_id\", question_id);\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/view/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    console.log('getCurrentQuestionData', response.data);\r\n    yield put(getCurrentQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    console.log(' getCurrentQuestionData error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getCurrentQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getQuestionsByUserData({ payload: question_id }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/list_by_user/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getQuestionsByUserSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error.response.msg;\r\n    }\r\n    yield put(getQuestionsByUserFailed(message));\r\n  }\r\n}\r\nfunction* getTestData({ payload: condition }) {\r\n  //console.log(\"getQuestionsData condition\", condition);\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/test`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getTestDataSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '帳號或密碼錯誤';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getTestDataFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getOverview() {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/overview`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getOverviewSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceStat({ payload: { yyyymm } }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/statistics?yyyymm=${yyyymm}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsFailed(message));\r\n  }\r\n}\r\nfunction* getServiceStatByHour({ payload: { sDate } }) {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/stat_hourly_count?sDate=${sDate}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceStatisticsByHourSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = '內部伺服器發生錯誤';\r\n        break;\r\n      case 401:\r\n        message = '沒有權限';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getServiceStatisticsByHourFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateType({ payload }) {\r\n  //const { qId, newType } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionType`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionTypeSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionTypeFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit question type\r\n */\r\nfunction* allocateQuestion({ payload }) {\r\n  const { aField, allocateStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: aField,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/${\r\n      allocateStatus === 2\r\n        ? 'finish_allocate_json'\r\n        : allocateStatus === 3\r\n        ? 'request_allocate_json'\r\n        : 'allocate_json'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(allocateQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(allocateQuestionFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add question to batch\r\n */\r\nfunction* addQuestionToBatch({ payload }) {\r\n  //const { question_id, batch_id } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/batch/add_to_batch'\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addQuestionToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(addQuestionToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * remove from batch //@route: DELETE /api/batch/remove_from_batch/:question_id\r\n */\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  //question_id = payload;\r\n\r\n  const options = {\r\n    method: 'DELETE',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/batch/remove_from_batch/${payload}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQuestionFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(removeQuestionFromBatchFailed(message));\r\n  }\r\n}\r\n\r\n//reply question\r\nfunction* replyQuestion({ payload }) {\r\n  //console.log(\"replyQuestion\", payload);\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/modify_reply_json`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(replyQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(replyQuestionFailed(message));\r\n  }\r\n}\r\n\r\n//close question\r\nfunction* closeQuestion({ payload }) {\r\n  const { question_id, closeType } = payload;\r\n  const options = {\r\n    data: question_id,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/${\r\n      closeType === 7\r\n        ? 'reserved_question'\r\n        : closeType === 4\r\n        ? 'close_question'\r\n        : closeType === 1\r\n        ? 'restored_question'\r\n        : 'cancel_reserved_question'\r\n    }`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(closeQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(closeQuestionFailed(message));\r\n  }\r\n}\r\n/**\r\n * edit question type\r\n */\r\nfunction* updateStatus({ payload }) {\r\n  //const { qId, newStatus } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionStatus`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(updateQuestionStatusSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(updateQuestionStatusFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add or remove question type\r\n */\r\nfunction* updateQuestionFavorite({ payload }) {\r\n  //const { qId, action } = payload;\r\n  //e { type: 'UPDATE_TYPE', payload: { qId: 305834, newType: '4' }\r\n  const options = {\r\n    data: payload,\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/updateQuestionFavorite`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(favorQuestionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      case 500:\r\n        message = 'Internal Server Error';\r\n        break;\r\n      case 401:\r\n        message = 'Invalid credentials';\r\n        break;\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(favorQuestionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getServiceConfig() {\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/questions/config`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getServiceConfigSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getOverviewFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add more than one question to a batch\r\n */\r\nfunction* addIdsToBatch({ payload: { batch_id, ids } }) {\r\n  const options = {\r\n    data: { batch_id, ids },\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/batch/batch_add_to_batch'\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(addMultipleQuestionsToBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(addMultipleQuestionsToBatchFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * add a log when user execute a function\r\n */\r\nfunction* logUserAction({ payload: { act, func, desc } }) {\r\n  console.log('logUserAction', act);\r\n  const options = {\r\n    data: { act, func, desc },\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: '/api/admin_users/log_action'\r\n  };\r\n  try {\r\n    yield axios(options);\r\n  } catch (error) {}\r\n}\r\nexport function* watchGetData(): any {\r\n  yield takeEvery(GET_QUESTIONS, getQuestionsData);\r\n}\r\nexport function* watchGetCurrent(): any {\r\n  yield takeEvery(GET_CURRENT_QUESTION, getCurrentQuestionData);\r\n}\r\n\r\nexport function* watchGetTestData(): any {\r\n  yield takeEvery(GET_TEST_DATA, getTestData);\r\n}\r\nexport function* watchOverviewData(): any {\r\n  yield takeEvery(GET_OVERVIEW, getOverview);\r\n}\r\nexport function* watchStatData(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS, getServiceStat);\r\n}\r\nexport function* watchStatDataByHour(): any {\r\n  yield takeEvery(GET_SERVICE_STATISTICS_BY_HOUR, getServiceStatByHour);\r\n}\r\n\r\nexport function* watchUpdateType(): any {\r\n  yield takeEvery(UPDATE_QUESTION_TYPE, updateType);\r\n}\r\n\r\nexport function* watchallocateQuestion(): any {\r\n  yield takeEvery(ALLOCATE_QUESTION, allocateQuestion);\r\n}\r\n\r\nexport function* watchReplyQuestion(): any {\r\n  yield takeEvery(REPLY_QUESTION, replyQuestion);\r\n}\r\nexport function* watchCloseQuestion(): any {\r\n  yield takeEvery(CLOSE_QUESTION, closeQuestion);\r\n}\r\n\r\nexport function* watchUpdateStatus(): any {\r\n  yield takeEvery(UPDATE_QUESTION_STATUS, updateStatus);\r\n}\r\nexport function* watchGetServiceConfig(): any {\r\n  yield takeEvery(GET_SERVICE_CONFIG, getServiceConfig);\r\n}\r\n\r\nexport function* watchGetRelaventUserData(): any {\r\n  yield takeEvery(GET_QUESTIONS_BY_USER, getQuestionsByUserData);\r\n}\r\nexport function* watchupdateQuestionFavorite(): any {\r\n  yield takeEvery(FAVORITE_QUESTION_ACTION, updateQuestionFavorite);\r\n}\r\n\r\nexport function* watchAddQuestionToBatch(): any {\r\n  yield takeEvery(ADD_QUESTION_TO_BATCH, addQuestionToBatch);\r\n}\r\n\r\nexport function* watchRemoveQuestionFromBatch(): any {\r\n  yield takeEvery(REMOVE_QUESTION_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\nexport function* watchAddMultiToBatch(): any {\r\n  yield takeEvery(ADD_MULTIPLE_QUESTIONS_TO_BATCH, addIdsToBatch);\r\n}\r\nexport function* watchUserActionLog(): any {\r\n  yield takeEvery(ADD_USER_ACTION_LOG, logUserAction);\r\n}\r\n\r\nfunction* serviceSaga(): any {\r\n  yield all([\r\n    fork(watchGetData),\r\n    fork(watchGetCurrent),\r\n    fork(watchUpdateType),\r\n    fork(watchUpdateStatus),\r\n    fork(watchGetTestData),\r\n    fork(watchOverviewData),\r\n    fork(watchallocateQuestion),\r\n    fork(watchReplyQuestion),\r\n    fork(watchCloseQuestion),\r\n    fork(watchStatData),\r\n    fork(watchGetServiceConfig),\r\n    fork(watchGetRelaventUserData),\r\n    fork(watchupdateQuestionFavorite),\r\n    fork(watchAddQuestionToBatch),\r\n    fork(watchRemoveQuestionFromBatch),\r\n    fork(watchAddMultiToBatch),\r\n    fork(watchStatDataByHour),\r\n    fork(watchUserActionLog)\r\n  ]);\r\n}\r\nexport default serviceSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_GAMES,\r\n  GET_VIP,\r\n  UPDATE_VIP_STATUS,\r\n  UPDATE_VIP_INFO,\r\n  DELETE_VIP_REQUEST,\r\n  ADD_VIP_REQUEST,\r\n  GET_CURRENT_WHALE_USER,\r\n  GET_VIP_REQUESTS\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipGamesSuccess,\r\n  getVipGamesFailed,\r\n  getVipFailed,\r\n  getVipSuccess,\r\n  putVipFailed,\r\n  putVipSuccess,\r\n  deleteVipServiceRequestFailed,\r\n  deleteVipServiceRequestSuccess,\r\n  addVipServiceRequestFailed,\r\n  addVipServiceRequestSuccess,\r\n  addVipServiceRequestValidationFailed,\r\n  getCurrentWhaleUserSuccess,\r\n  getCurrentWhaleUserFailed,\r\n  updateVipInfoSuccess,\r\n  updateVipInfoFailed,\r\n  getVipRequestsSuccess,\r\n  getVipRequestsFailed\r\n} from \"./actions\";\r\n\r\nfunction* getGames() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/game_list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipGamesSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipGamesFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipReqData({ payload: { gameId, beginTime, endTime } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/request_report?gameId=${gameId}&beginTime=${beginTime}&endTime=${endTime}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipRequestsSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipRequestsFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVIP({ payload: game_id }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/vip_list/${game_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getSingleVip({ payload: { game_id, role_id, history } }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/user_dashboard/${game_id}?user=${encodeURIComponent(role_id)}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentWhaleUserSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getCurrentWhaleUserFailed(message));\r\n  }\r\n}\r\n\r\nfunction* putVIP({ payload: { game_id, uid, command } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update/\",\r\n    data: { game_id, uid, command }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(putVipSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(putVipFailed(message));\r\n  }\r\n}\r\n\r\nfunction* updateVIPInfo({ payload: { game_id, role_id, fields } }) {\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/update_vip_info\",\r\n    data: { game_id, role_id, fields }\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(updateVipInfoSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(updateVipInfoFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPRequest({ payload: record_id }) {\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip/delete_request/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipServiceRequestFailed(message));\r\n  }\r\n}\r\n\r\nfunction* addVIPRequest({ payload: record }) {\r\n  //console.log(\"addVIPRequest\", record);\r\n  const options = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip/request/\",\r\n    data: record\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(addVipServiceRequestSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(addVipServiceRequestFailed(message));\r\n  }\r\n}\r\nexport function* watchGetGames(): any {\r\n  yield takeEvery(GET_VIP_GAMES, getGames);\r\n}\r\n\r\nexport function* watchGetVip(): any {\r\n  yield takeEvery(GET_VIP, getVIP);\r\n}\r\n\r\nexport function* watchPutVip(): any {\r\n  yield takeEvery(UPDATE_VIP_STATUS, putVIP);\r\n}\r\n\r\nexport function* watchDelVipRequest(): any {\r\n  yield takeEvery(DELETE_VIP_REQUEST, delVIPRequest);\r\n}\r\n\r\nexport function* watchAddVipRequest(): any {\r\n  yield takeEvery(ADD_VIP_REQUEST, addVIPRequest);\r\n}\r\nexport function* watchGetCurrentWhaleUser(): any {\r\n  yield takeEvery(GET_CURRENT_WHALE_USER, getSingleVip);\r\n}\r\nexport function* watchUpdateVIPInfo(): any {\r\n  yield takeEvery(UPDATE_VIP_INFO, updateVIPInfo);\r\n}\r\n\r\nexport function* watchGetVipReqData(): any {\r\n  yield takeEvery(GET_VIP_REQUESTS, getVipReqData);\r\n}\r\n\r\nfunction* vipSaga(): any {\r\n  yield all([\r\n    fork(watchGetGames),\r\n    fork(watchGetVip),\r\n    fork(watchPutVip),\r\n    fork(watchDelVipRequest),\r\n    fork(watchAddVipRequest),\r\n    fork(watchGetCurrentWhaleUser),\r\n    fork(watchUpdateVIPInfo),\r\n    fork(watchGetVipReqData)\r\n  ]);\r\n}\r\n\r\nexport default vipSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_VIP_OFFERS,\r\n  GET_VIP_ORDERS,\r\n  GET_CURRENT_VIP_REPORT,\r\n  GET_VIP_PRODS_BY_GAMEID,\r\n  EDIT_VIP_WIRE_REPORT,\r\n  DELETE_VIP_WIRE_REPORT,\r\n  GET_CURRENT_VIP_PRODUCT,\r\n  EDIT_VIP_PRODUCT,\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getVipOffersFailed,\r\n  getVipOffersSuccess,\r\n  getVipOrdersSuccess,\r\n  getVipOrdersFailed,\r\n  getCurrentVipReportSuccess,\r\n  getCurrentVipReportFailed,\r\n  getVipProductsByGameIdSuccess,\r\n  getVipProductsByGameIdFailed,\r\n  editVipWireReportSuccess,\r\n  editVipWireReportFailed,\r\n  deleteVipWireReportSuccess,\r\n  deleteVipWireReportFailed,\r\n  getCurrentVipProductSuccess,\r\n  getCurrentVipProductFailed,\r\n  editVipProductFailed,\r\n  editVipProductSuccess,\r\n} from \"./actions\";\r\n\r\nfunction* getVipOffers() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/offer_list\",\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOffersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOffersFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getVipOrder() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/order_list\",\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipOrdersSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getVipOrdersFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { report_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/detail/${report_id}`,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipReportFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get Servers list by provided gameid\r\n * @param {*} gameId -\r\n */\r\nfunction* getProdsByGameId({ payload: gameId }) {\r\n  //console.log('getServersByGameId', gameId);\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods_list/${gameId}`,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipProductsByGameIdSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getVipProductsByGameIdFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editRecord({ payload }) {\r\n  //console.log(\"editGameRecord *****\", payload);\r\n  const { record } = payload;\r\n\r\n  const options = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/vip_offers/wire_report/update\",\r\n    data: record,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    yield put(editVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delVIPWReport({ payload: record_id }) {\r\n  //console.log('delVIPWReport', record_id);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/delete_wire_report/${record_id}`,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteVipWireReportSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteVipWireReportFailed(message));\r\n  }\r\n}\r\n\r\nfunction* getCurrentVipProductRecord({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  const { product_id } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods/${product_id}`,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentVipProductSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data.msg;\r\n    }\r\n    yield put(getCurrentVipProductFailed(message));\r\n  }\r\n}\r\n\r\nfunction* editVipProductRecord({ payload }) {\r\n  //console.log('editVipProductRecord *****', payload);\r\n  const { record, action, history } = payload;\r\n\r\n  const options = {\r\n    method: action === \"add\" ? \"POST\" : \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_offers/prods${action === \"add\" ? \"\" : \"/update\"}`,\r\n    data: record,\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    //console.log('editGovRecordSuccess editGovRecord', response);\r\n    history.push(`/vip/offers/form/${record.product_id}`);\r\n    yield put(editVipProductSuccess(response.data));\r\n  } catch (error) {\r\n    //console.log('error editGovRecord', error.response.data);\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editVipProductFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetOffers(): any {\r\n  yield takeEvery(GET_VIP_OFFERS, getVipOffers);\r\n}\r\n\r\nexport function* watchGetOrders(): any {\r\n  yield takeEvery(GET_VIP_ORDERS, getVipOrder);\r\n}\r\n\r\nexport function* watchGetCurrentReport(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_REPORT, getCurrentRecord);\r\n}\r\nexport function* watchGetProdsByGameId(): any {\r\n  yield takeEvery(GET_VIP_PRODS_BY_GAMEID, getProdsByGameId);\r\n}\r\n\r\nexport function* watchEditVipWireReport(): any {\r\n  yield takeEvery(EDIT_VIP_WIRE_REPORT, editRecord);\r\n}\r\n\r\nexport function* watchDeleteVipWireReport(): any {\r\n  yield takeEvery(DELETE_VIP_WIRE_REPORT, delVIPWReport);\r\n}\r\nexport function* watchGetCurrentVipProductRecord(): any {\r\n  yield takeEvery(GET_CURRENT_VIP_PRODUCT, getCurrentVipProductRecord);\r\n}\r\nexport function* watcheditVipProductRecord(): any {\r\n  yield takeEvery(EDIT_VIP_PRODUCT, editVipProductRecord);\r\n}\r\n\r\nfunction* vipOfferSaga(): any {\r\n  yield all([\r\n    fork(watchGetOffers),\r\n    fork(watchGetOrders),\r\n    fork(watchGetCurrentReport),\r\n    fork(watchGetProdsByGameId),\r\n    fork(watchEditVipWireReport),\r\n    fork(watchDeleteVipWireReport),\r\n    fork(watchGetCurrentVipProductRecord),\r\n    fork(watcheditVipProductRecord),\r\n  ]);\r\n}\r\n\r\nexport default vipOfferSaga;\r\n","import axios from \"axios\";\r\n\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { GET_VIP_DASHBOARD_DATA } from \"./constants\";\r\n\r\nimport {\r\n  getVipDashboardDataSuccess,\r\n  getVipDashboardDataFailed,\r\n} from \"./actions\";\r\n\r\nfunction* getVipDashboard({ payload }) {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/vip_rpt/home${\r\n      payload ? `?func=${payload.function}&value=${payload.value}` : \"\"\r\n    }`,\r\n  };\r\n  //{function:'buyers',value:7}\r\n  //console.log(\"getVipDashboard\", payload);\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getVipDashboardDataSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    //return res.status(403).json({ msg: \"你目前沒有瀏覽這個頁面的相關權限\" });\r\n    yield put(getVipDashboardDataFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetVipRptData(): any {\r\n  yield takeEvery(GET_VIP_DASHBOARD_DATA, getVipDashboard);\r\n}\r\n\r\nfunction* vipRptSaga(): any {\r\n  yield all([fork(watchGetVipRptData)]);\r\n}\r\n\r\nexport default vipRptSaga;\r\n","import axios from \"axios\";\r\nimport { all, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  GET_BATCH_TASKS,\r\n  EDIT_BATCH_TASK,\r\n  DELETE_BATCH_TASK,\r\n  GET_CURRENT_BATCH_TASK,\r\n  REMOVE_BATCH_Q,\r\n  REMOVE_Q_FROM_BATCH,\r\n  BATCH_REPLY_ACTION\r\n} from \"./constants\";\r\n\r\nimport {\r\n  getBatchTasksSuccess,\r\n  getBatchTasksFailed,\r\n  editBatchTaskSuccess,\r\n  editBatchTaskFailed,\r\n  deleteBatchTaskSuccess,\r\n  deleteBatchTaskFailed,\r\n  getCurrentBatchTaskSuccess,\r\n  getCurrentBatchTaskFailed,\r\n  removeBatchQSuccess,\r\n  removeBatchQFailed,\r\n  removeQFromBatchSuccess,\r\n  removeQFromBatchFailed,\r\n  batchReplyActionSuccess,\r\n  batchReplyActionFailed\r\n} from \"./actions\";\r\n\r\n/**\r\n * Get batch tasks list\r\n * @param {*} payload - task list & game list\r\n */\r\nfunction* getBatchTasks() {\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/list\"\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getBatchTasksSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.response.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getBatchTasksFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * Get single record by its id { dataType, record_id },\r\n * @param {*} payload - dataType and record_id\r\n */\r\nfunction* getCurrentBatch({ payload }) {\r\n  //console.log('getCurrentRecord payload ', payload);\r\n  //http://localhost:5000/api/batch/detail/80\r\n  const { record_id, history } = payload;\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/detail/${record_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getCurrentBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    // console.log(' login error ', error);\r\n    // console.log(' error.status ', error.response.status);\r\n    let message;\r\n    switch (error.response.status) {\r\n      case 500:\r\n        message = \"內部伺服器發生錯誤\";\r\n        break;\r\n      case 403:\r\n        message = \"權限不符合操作\";\r\n        //錯誤\r\n        history.push(\"/pages/error-403\");\r\n        break;\r\n\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(getCurrentBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* editRecord({ payload }) {\r\n  const record = payload;\r\n  const options = {\r\n    data: record,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/task\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(editBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(editBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\n/**\r\n * edit(add or modify) gov letter record\r\n */\r\nfunction* batchReply({ payload }) {\r\n  const replyData = payload;\r\n  const options = {\r\n    data: replyData,\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: \"/api/batch/batch_reply_json\"\r\n  };\r\n  try {\r\n    const response = yield axios(options);\r\n\r\n    yield put(batchReplyActionSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    switch (error.status) {\r\n      default:\r\n        message = error.response.data;\r\n    }\r\n    yield put(batchReplyActionFailed(message));\r\n  }\r\n}\r\n\r\nfunction* delBatchTask({ payload: { id, history } }) {\r\n  //console.log(\"delBatchTask\", payload);\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/task/${id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(deleteBatchTaskSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(deleteBatchTaskFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeBatchQuestions({ payload }) {\r\n  const batch_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_batch_q/${batch_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeBatchQSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeBatchQFailed(message));\r\n  }\r\n}\r\n\r\nfunction* removeQuestionFromBatch({ payload }) {\r\n  const question_id = payload;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `/api/batch/remove_from_batch/${question_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(removeQFromBatchSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(removeQFromBatchFailed(message));\r\n  }\r\n}\r\nexport function* watchGetBatchTasksData(): any {\r\n  yield takeEvery(GET_BATCH_TASKS, getBatchTasks);\r\n}\r\n\r\nexport function* watchEditBatchRecord(): any {\r\n  yield takeEvery(EDIT_BATCH_TASK, editRecord);\r\n}\r\nexport function* watchDeleteBatchRecord(): any {\r\n  yield takeEvery(DELETE_BATCH_TASK, delBatchTask);\r\n}\r\n\r\nexport function* watchgetCurrentBatch(): any {\r\n  yield takeEvery(GET_CURRENT_BATCH_TASK, getCurrentBatch);\r\n}\r\n\r\nexport function* watchgetRemoveBatchQ(): any {\r\n  yield takeEvery(REMOVE_BATCH_Q, removeBatchQuestions);\r\n}\r\n\r\nexport function* watchgetRemoveQFromBatch(): any {\r\n  yield takeEvery(REMOVE_Q_FROM_BATCH, removeQuestionFromBatch);\r\n}\r\n\r\nexport function* watchBatchReply(): any {\r\n  yield takeEvery(BATCH_REPLY_ACTION, batchReply);\r\n}\r\n\r\nfunction* batchTaskSaga(): any {\r\n  yield all([\r\n    fork(watchGetBatchTasksData),\r\n    fork(watchEditBatchRecord),\r\n    fork(watchDeleteBatchRecord),\r\n    fork(watchgetCurrentBatch),\r\n    fork(watchgetRemoveBatchQ),\r\n    fork(watchgetRemoveQFromBatch),\r\n    fork(watchBatchReply)\r\n  ]);\r\n}\r\n\r\nexport default batchTaskSaga;\r\n","import axios from 'axios';\r\n\r\nimport { all, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { GET_SERIAL_RECORDS } from './constants';\r\n\r\nimport {\r\n  getSerialEventRecordsSuccess,\r\n  getSerialEventRecordsFailed\r\n} from './actions';\r\n\r\nfunction* getSerialRecords({ payload }) {\r\n  console.log('getSerialRecords', payload);\r\n  const event_id = payload;\r\n  const options = {\r\n    method: 'GET',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    url: `/api/events/serialRecords/${event_id}`\r\n  };\r\n\r\n  try {\r\n    const response = yield axios(options);\r\n    yield put(getSerialEventRecordsSuccess(response.data));\r\n  } catch (error) {\r\n    let message;\r\n    message = error.response.data.msg;\r\n    yield put(getSerialEventRecordsFailed(message));\r\n  }\r\n}\r\n\r\nexport function* watchGetSerialRecords(): any {\r\n  yield takeEvery(GET_SERIAL_RECORDS, getSerialRecords);\r\n}\r\n\r\nfunction* EventSaga(): any {\r\n  yield all([fork(watchGetSerialRecords)]);\r\n}\r\n\r\nexport default EventSaga;\r\n","// @flow\r\nimport { all } from \"redux-saga/effects\";\r\nimport authSaga from \"./auth/saga\";\r\nimport layoutSaga from \"./layout/saga\";\r\nimport appMenuSaga from \"./appMenu/saga\";\r\nimport dashboardSaga from \"./dashboard/saga\";\r\nimport platformSaga from \"./platform/saga\";\r\nimport offlineCsSaga from \"./offlinecs/saga\";\r\nimport gamesSaga from \"./games/saga\";\r\nimport serversSaga from \"./servers/saga\";\r\nimport adminUsersSaga from \"./adminUsers/saga\";\r\nimport serviceAllocateSaga from \"./serviceAllocate/saga\";\r\nimport serviceSaga from \"./service/saga\";\r\nimport vipSaga from \"./vip/saga\";\r\nimport vipOfferSaga from \"./vipoffers/saga\";\r\nimport vipRptSaga from \"./viprpt/saga\";\r\n\r\nimport batchTaskSaga from \"./batch/saga\";\r\nimport EventSaga from \"./event/saga\";\r\nexport default function* rootSaga(getState: any): any {\r\n  yield all([\r\n    authSaga(),\r\n    layoutSaga(),\r\n    appMenuSaga(),\r\n    dashboardSaga(),\r\n    platformSaga(),\r\n    offlineCsSaga(),\r\n    gamesSaga(),\r\n    serversSaga(),\r\n    adminUsersSaga(),\r\n    serviceAllocateSaga(),\r\n    serviceSaga(),\r\n    vipSaga(),\r\n    vipOfferSaga(),\r\n    vipRptSaga(),\r\n    batchTaskSaga(),\r\n    EventSaga(),\r\n  ]);\r\n}\r\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}