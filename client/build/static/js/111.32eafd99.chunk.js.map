{"version":3,"sources":["pages/tables/TestTable.js","../node_modules/classnames/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/webpack/buildin/module.js"],"names":["TestTable","_useState","useState","name","tech","id","_useState2","Object","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","tableData","_useState3","_useState4","checkedCase","setCheckedCase","_useState5","_useState6","pageSize","setPageSize","_useState7","_useState8","pageNumber","setPageNumber","pagingOptions","onSizePerPageChange","sizePerPage","page","console","log","onPageChange","tableColumns","dataField","isDummyField","text","headerFormatter","column","colIndex","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","type","value","onClick","e","target","checked","slice","map","item","selectAll","formatter","cell","row","rowIndex","extraData","Fragment","concat","onChange","E_Projects_mytest_vagrant_centos610_hyper_manager2_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","Number","parseInt","filter","selectSingle","indexOf","formatExtraData","cellContent","className","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_3___default","keyField","data","columns","pagination","paginationFactory","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","undefined","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","err","_iterableToArrayLimit","TypeError","_nonIterableRest","__webpack_require__","d","__webpack_exports__","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l"],"mappings":"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","file":"static/js/111.32eafd99.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nfunction TestTable() {\r\n  /**\r\n   * Mock data\r\n   */\r\n  const [tableData, SetTableData] = useState([\r\n    { name: \"User 1\", tech: \"VueJS\", id: 1 },\r\n    { name: \"User 2\", tech: \"ReactJS\", id: 2 },\r\n    { name: \"User 3\", tech: \"React Native\", id: 3 },\r\n    { name: \"User 4\", tech: \"VueJS\", id: 4 },\r\n    { name: \"User 5\", tech: \"ReactJS\", id: 5 },\r\n    { name: \"User 6\", tech: \"React Native\", id: 6 },\r\n    { name: \"User 7\", tech: \"VueJS\", id: 7 },\r\n    { name: \"User 8\", tech: \"ReactJS\", id: 8 },\r\n    { name: \"User 9\", tech: \"React Native\", id: 9 },\r\n    { name: \"User 10\", tech: \"VueJS\", id: 10 },\r\n    { name: \"User 11\", tech: \"ReactJS\", id: 11 },\r\n    { name: \"User 12\", tech: \"React Native\", id: 12 }\r\n  ]);\r\n\r\n  const [checkedCase, setCheckedCase] = useState([]);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const selectAll = e => {\r\n    if (e.target.checked) {\r\n      setCheckedCase(\r\n        tableData\r\n          .slice(\r\n            (pageNumber - 1) * pageSize,\r\n            (pageNumber - 1) * pageSize + pageSize\r\n          )\r\n          .map(item => item.id)\r\n      );\r\n    } else {\r\n      setCheckedCase([]);\r\n    }\r\n  };\r\n  const selectSingle = (e, extraData) => {\r\n    //console.log(\"checkedCase\", extraData);\r\n    //console.log(e.target);\r\n    //console.log(document.getElementById(e.target.id).id);\r\n    if (!e.target.checked) {\r\n      setCheckedCase(\r\n        extraData.filter(item => item !== Number.parseInt(e.target.value))\r\n      );\r\n    } else {\r\n      setCheckedCase([...extraData, Number.parseInt(e.target.value)]);\r\n    }\r\n  };\r\n\r\n  const pagingOptions = {\r\n    onSizePerPageChange: (sizePerPage, page) => {\r\n      console.log(\"Size per page change!!!\");\r\n      console.log(\"Newest size per page:\" + sizePerPage);\r\n      console.log(\"Newest page:\" + page);\r\n      setPageSize(sizePerPage);\r\n    },\r\n    onPageChange: (page, sizePerPage) => {\r\n      console.log(\"Page change!!!\");\r\n      console.log(\"Newest size per page:\" + sizePerPage);\r\n      console.log(\"Newest page:\" + page);\r\n      setPageNumber(page);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Columns to be displayed in the table\r\n   */\r\n  const tableColumns = [\r\n    {\r\n      dataField: \"batch\",\r\n      isDummyField: true,\r\n      text: \"æ‰¹æ¬¡\",\r\n      headerFormatter: (column, colIndex) => {\r\n        return (\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"chk-selectAll\"\r\n            id=\"chk-selectAll\"\r\n            value=\"check_all\"\r\n            onClick={e => selectAll(e)}\r\n          />\r\n        );\r\n      },\r\n      formatter: (cell, row, rowIndex, extraData) => {\r\n        return (\r\n          <React.Fragment>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={`chk-${row.id}`}\r\n              id={`chk-${row.id}`}\r\n              value={row.id}\r\n              onChange={e => selectSingle(e, extraData)}\r\n              checked={extraData.indexOf(row.id) > -1 ? true : false}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      },\r\n\r\n      formatExtraData: checkedCase\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Name\",\r\n      formatter: (cellContent, row) => {\r\n        return <>{cellContent}</>;\r\n      }\r\n    },\r\n    {\r\n      dataField: \"tech\",\r\n      text: \"Technology\"\r\n    }\r\n  ];\r\n\r\n  /**\r\n   * Change the name when the row is selected\r\n   *\r\n   * @param {string | number} uniqueKey The unique key of the row `keyField`\r\n   * @param {bool} isSelect Idenfify if the row in selected or not\r\n   */\r\n  const handleChangeNameOnSelect = (uniqueKey, isSelect) => {\r\n    if (isSelect) {\r\n      SetTableData(\r\n        tableData.map(v => {\r\n          if (v.id === uniqueKey) {\r\n            v.name = `${v.name} Selected`;\r\n          }\r\n          return v;\r\n        })\r\n      );\r\n    } else {\r\n      SetTableData(\r\n        tableData.map(v => {\r\n          if (v.id === uniqueKey) {\r\n            v.name = v.name.replace(\"Selected\", \"\");\r\n          }\r\n          return v;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: \"checkbox\",\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n      const { id } = row;\r\n      handleChangeNameOnSelect(id, isSelect);\r\n    },\r\n    onSelectAll: (isSelect, rows, e) => {\r\n      rows.forEach(r => {\r\n        handleChangeNameOnSelect(r.id, isSelect);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <BootstrapTable\r\n        keyField=\"id\"\r\n        data={tableData}\r\n        columns={tableColumns}\r\n        pagination={paginationFactory(pagingOptions)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestTable;\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};"],"sourceRoot":""}