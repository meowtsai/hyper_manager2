{"version":3,"sources":["pages/forms/Basic.js","components/PageTitle.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","_components_PageTitle__WEBPACK_IMPORTED_MODULE_18__","BasicInputElements","a","createElement","className","lg","for","type","name","id","placeholder","defaultValue","rows","readOnly","disabled","plaintext","multiple","SelectInput","Fragment","Switches","label","htmlFor","CustomCheckboxes","InlineCustomCheckboxes","inline","CustomRadios","InputSizes","bsSize","sm","InputGroups","addonType","caret","color","header","divider","DefaultForm","HorizontalForm","row","InlineForm","BasicForms","breadCrumbItems","path","active","title","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","PageTitle","props","to","map","item","index","key"],"mappings":"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","file":"static/js/122.868c5f06.chunk.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    CustomInput,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    UncontrolledButtonDropdown,\r\n    Button,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from 'reactstrap';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\nconst BasicInputElements = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Input Types</h4>\r\n                <p className=\"text-muted\">\r\n                    Most common form control, text-based input fields. Includes support for all HTML5 types:{' '}\r\n                    <code>text</code>, <code>password</code>, <code>datetime</code>, <code>datetime-local</code>,{' '}\r\n                    <code>date</code>, <code>month</code>, <code>time</code>, <code>week</code>, <code>number</code>,{' '}\r\n                    <code>email</code>, <code>url</code>, <code>search</code>, <code>tel</code>, and <code>color</code>.\r\n                </p>\r\n\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"text\">Text</Label>\r\n                                <Input type=\"text\" name=\"text\" id=\"text\" placeholder=\"with a placeholder\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail\">Email</Label>\r\n                                <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"examplePassword\">Password</Label>\r\n                                <Input\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    id=\"examplePassword\"\r\n                                    placeholder=\"password placeholder\"\r\n                                    defaultValue=\"12345\"\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleText\">Text Area</Label>\r\n                                <Input type=\"textarea\" name=\"text\" id=\"exampleText\" rows=\"5\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"text1\">Read only</Label>\r\n                                <Input type=\"text\" name=\"text\" id=\"text1\" placeholder=\"Readonly value\" readOnly />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"text2\">Disabled</Label>\r\n                                <Input type=\"text\" name=\"text\" id=\"text2\" placeholder=\"Disabled\" disabled />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleEmail1\">Static control</Label>\r\n                                <Input plaintext defaultValue=\"email@example.com\" readOnly />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"text3\">Helping text</Label>\r\n                                <Input type=\"text\" name=\"text\" id=\"text3\" placeholder=\"Helping text\" />\r\n                                <FormText>\r\n                                    A block of help text that breaks onto a new line and may extend beyond one line.\r\n                                </FormText>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n\r\n                    <Col lg={6}>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelect\">Select</Label>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"exampleSelectMulti\">Select Multiple</Label>\r\n                                <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple>\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Input>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleFile\">Default file input</Label>\r\n                                <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleDate\">Date</Label>\r\n                                <Input type=\"date\" name=\"date\" id=\"exampleDate\" placeholder=\"date placeholder\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleMonth\">Month</Label>\r\n                                <Input type=\"month\" name=\"month\" id=\"exampleMonth\" placeholder=\"date month\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleTime\">Time</Label>\r\n                                <Input type=\"time\" name=\"time\" id=\"exampleTime\" placeholder=\"date Time\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleWeek\">Week</Label>\r\n                                <Input type=\"week\" name=\"week\" id=\"exampleWeek\" placeholder=\"date week\" />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleNumber\">Number</Label>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    name=\"number\"\r\n                                    id=\"exampleNumber\"\r\n                                    placeholder=\"number placeholder\"\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleColor\">Color</Label>\r\n                                <Input\r\n                                    type=\"color\"\r\n                                    name=\"color\"\r\n                                    id=\"exampleColor\"\r\n                                    placeholder=\"color placeholder\"\r\n                                    defaultValue=\"#727cf5\"\r\n                                />\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label for=\"exampleRange\">Range</Label>\r\n                                <input\r\n                                    className=\"custom-range\"\r\n                                    type=\"range\"\r\n                                    name=\"range\"\r\n                                    id=\"exampleRange\"\r\n                                    placeholder=\"range placeholder\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst SelectInput = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"header-title\">Select menu</h4>\r\n            <p className=\"text-muted\">\r\n                Custom <code>&lt;select&gt;</code> menus need only a custom class, <code>.custom-select</code> to\r\n                trigger the custom styles.\r\n            </p>\r\n\r\n            <FormGroup>\r\n                <Input type=\"select\" name=\"select\" id=\"exampleSelect2\" className=\"custom-select mt-3\">\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                </Input>\r\n            </FormGroup>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Switches = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"header-title mt-4\">Switches</h4>\r\n            <p className=\"text-muted\">\r\n                A switch has the markup of a custom checkbox but uses the <code>.custom-switch</code> class to render a\r\n                toggle switch. Switches also support the <code>disabled</code> attribute.\r\n            </p>\r\n\r\n            <div>\r\n                <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"exampleCustomSwitch\"\r\n                    name=\"customSwitch\"\r\n                    label=\"Turn on this custom switch\"\r\n                />\r\n                <CustomInput\r\n                    type=\"switch\"\r\n                    id=\"exampleCustomSwitch4\"\r\n                    label=\"Can't click this label to turn on!\"\r\n                    htmlFor=\"exampleCustomSwitch4_X\"\r\n                    disabled\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst CustomCheckboxes = () => {\r\n    return (\r\n        <FormGroup>\r\n            <Label for=\"exampleCheckbox\">Checkboxes</Label>\r\n            <div>\r\n                <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox\" label=\"Check this custom checkbox\" />\r\n                <CustomInput type=\"checkbox\" id=\"exampleCustomCheckbox3\" label=\"But not this disabled one\" disabled />\r\n            </div>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nconst InlineCustomCheckboxes = () => {\r\n    return (\r\n        <FormGroup>\r\n            <Label for=\"exampleCheckbox\">Inline</Label>\r\n            <div>\r\n                <CustomInput type=\"checkbox\" id=\"exampleCustomInline\" label=\"An inline custom input\" inline />\r\n                <CustomInput type=\"checkbox\" id=\"exampleCustomInline2\" label=\"and another one\" inline />\r\n            </div>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nconst CustomRadios = () => {\r\n    return (\r\n        <FormGroup>\r\n            <Label for=\"exampleCheckbox\">Radios</Label>\r\n            <div>\r\n                <CustomInput type=\"radio\" id=\"exampleCustomRadio\" name=\"customRadio\" label=\"Select this custom radio\" />\r\n                <CustomInput type=\"radio\" id=\"exampleCustomRadio3\" label=\"But not this disabled one\" disabled />\r\n            </div>\r\n        </FormGroup>\r\n    );\r\n};\r\n\r\nconst InputSizes = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Input Sizes</h4>\r\n                <p className=\"text-muted\">\r\n                    Set height using <code>bsSize</code> attribute. You can specify value <code>sm</code> to have small\r\n                    input or <code>lg</code> to have large size input element. &nbsp;&nbsp;&nbsp;&nbsp;\r\n                </p>\r\n\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"small\">Small</Label>\r\n                        <Input type=\"text\" name=\"small\" id=\"small\" placeholder=\"Small\" bsSize=\"sm\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"Normal\">Normal</Label>\r\n                        <Input type=\"text\" name=\"Normal\" id=\"Normal\" placeholder=\"Normal\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"Large\">Large</Label>\r\n                        <Input type=\"text\" name=\"Large\" id=\"Large\" placeholder=\"Small\" bsSize=\"lg\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"mb-0\">\r\n                        <Label for=\"grid\">Grid Sizes</Label>\r\n                        <Row>\r\n                            <Col sm={4}>\r\n                                <Input type=\"text\" name=\"grid\" id=\"grid\" placeholder=\".col-sm-4\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InputGroups = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"header-title\">Input Group</h4>\r\n                <p className=\"text-muted\">\r\n                    Easily extend form conrols by adding text, buttons, or button groups on either side of textual\r\n                    inputs, custom selects, and custom file inputs\r\n                </p>\r\n\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"Static\">Static</Label>\r\n                        <InputGroup>\r\n                            <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\r\n                            <Input placeholder=\"username\" />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"Dropdown\">Dropdown</Label>\r\n                        <InputGroup>\r\n                            <UncontrolledButtonDropdown addonType=\"append\">\r\n                                <DropdownToggle caret color=\"primary\">\r\n                                    Button Dropdown\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    <DropdownItem header>Header</DropdownItem>\r\n                                    <DropdownItem disabled>Action</DropdownItem>\r\n                                    <DropdownItem>Another Action</DropdownItem>\r\n                                    <DropdownItem divider />\r\n                                    <DropdownItem>Another Action</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </UncontrolledButtonDropdown>\r\n\r\n                            <Input />\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"Button\">Button</Label>\r\n                        <InputGroup>\r\n                            <Input />\r\n                            <InputGroupAddon addonType=\"append\">\r\n                                <Button color=\"dark\">Button</Button>\r\n                            </InputGroupAddon>\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"mb-0\">\r\n                        <Label for=\"cfile\">Custom file input</Label>\r\n                        <InputGroup>\r\n                            <div className=\"custom-file\">\r\n                                <Input type=\"file\" name=\"file\" id=\"exampleFile2\" className=\"custom-file-input\" />\r\n                                <InputGroupAddon addonType=\"append\">\r\n                                    <label className=\"custom-file-label\" htmlFor=\"custom-file\">\r\n                                        Choose file\r\n                                    </label>\r\n                                </InputGroupAddon>\r\n                            </div>\r\n                        </InputGroup>\r\n                    </FormGroup>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst DefaultForm = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"mb-3 header-title\">Basic Example</h4>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleEmail2\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail2\" placeholder=\"Enter your email\" />\r\n                        <FormText>We'll never share your email with anyone else.</FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label for=\"examplePassword2\">Password</Label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"examplePassword2\"\r\n                            placeholder=\"password placeholder\"\r\n                            defaultValue=\"12345\"\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst HorizontalForm = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"mb-3 header-title\">Horizontal Form</h4>\r\n                <Form>\r\n                    <FormGroup row>\r\n                        <Label for=\"exampleEmail3\" sm={3}>\r\n                            Email\r\n                        </Label>\r\n                        <Col sm={9}>\r\n                            <Input type=\"email\" name=\"email\" id=\"exampleEmail3\" placeholder=\"Enter your email\" />\r\n                            <FormText>We'll never share your email with anyone else.</FormText>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row>\r\n                        <Label for=\"examplePassword3\" sm={3}>\r\n                            Password\r\n                        </Label>\r\n                        <Col sm={9}>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"examplePassword3\"\r\n                                placeholder=\"password placeholder\"\r\n                                defaultValue=\"12345\"\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row>\r\n                        <Label for=\"examplePassword4\" sm={3}>\r\n                            Re-Password\r\n                        </Label>\r\n                        <Col sm={9}>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"examplePassword4\"\r\n                                placeholder=\"password placeholder\"\r\n                                defaultValue=\"12345\"\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst InlineForm = () => {\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h4 className=\"mb-3 header-title\">Inline Form Example</h4>\r\n                <Form inline>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"exampleEmail4\" className=\"mr-sm-2\">\r\n                            Email\r\n                        </Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"exampleEmail4\" placeholder=\"Enter your email\" />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"examplePassword5\" className=\"mr-sm-2\">\r\n                            Password\r\n                        </Label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"examplePassword5\"\r\n                            placeholder=\"password placeholder\"\r\n                            defaultValue=\"12345\"\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <Button color=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst BasicForms = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[\r\n                    { label: 'Forms', path: '/forms/basic' },\r\n                    { label: 'Form Elements', path: '/forms/basic', active: true },\r\n                ]}\r\n                title={'Form Elements'}\r\n            />\r\n\r\n            <Row>\r\n                <Col>\r\n                    <BasicInputElements />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg={6}>\r\n                                    <SelectInput />\r\n                                    <Switches />\r\n                                </Col>\r\n\r\n                                <Col lg={6}>\r\n                                    <h4 className=\"header-title mt-5 mt-sm-0\">Checkboxes and radios</h4>\r\n                                    <div className=\"mt-3\">\r\n                                        <CustomCheckboxes />\r\n                                        <CustomRadios />\r\n                                        <InlineCustomCheckboxes />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <InputSizes />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <InputGroups />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col lg={6}>\r\n                    <DefaultForm />\r\n                </Col>\r\n\r\n                <Col lg={6}>\r\n                    <HorizontalForm />\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <InlineForm />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\nexport default BasicForms;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">Hyper</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n"],"sourceRoot":""}